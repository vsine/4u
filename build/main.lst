ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB140:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "mysetp.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** osThreadId MainTaskHandle;
  51:Core/Src/main.c **** osMutexId myMutex01Handle;
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_SPI1_Init(void);
  60:Core/Src/main.c **** static void MX_TIM2_Init(void);
  61:Core/Src/main.c **** static void MX_RTC_Init(void);
  62:Core/Src/main.c **** void StartMainTask(void const * argument);
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_SPI1_Init();
 102:Core/Src/main.c ****   MX_TIM2_Init();
 103:Core/Src/main.c ****   MX_RTC_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Create the mutex(es) */
 110:Core/Src/main.c ****   /* definition and creation of myMutex01 */
 111:Core/Src/main.c ****   osMutexDef(myMutex01);
 112:Core/Src/main.c ****   myMutex01Handle = osMutexCreate(osMutex(myMutex01));
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 115:Core/Src/main.c ****   /* add mutexes, ... */
 116:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 119:Core/Src/main.c ****   /* add semaphores, ... */
 120:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 123:Core/Src/main.c ****   /* start timers, add new ones, ... */
 124:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 127:Core/Src/main.c ****   /* add queues, ... */
 128:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Create the thread(s) */
 131:Core/Src/main.c ****   /* definition and creation of MainTask */
 132:Core/Src/main.c ****   osThreadDef(MainTask, StartMainTask, osPriorityNormal, 0, 128);
 133:Core/Src/main.c ****   MainTaskHandle = osThreadCreate(osThread(MainTask), NULL);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 136:Core/Src/main.c ****   /* add threads, ... */
 137:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Start scheduler */
 140:Core/Src/main.c ****   osKernelStart();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 4


 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   /* USER CODE END 3 */
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief System Clock Configuration
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** void SystemClock_Config(void)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief RTC Initialization Function
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 5


 202:Core/Src/main.c ****   * @param None
 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c **** static void MX_RTC_Init(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 215:Core/Src/main.c ****   /** Initialize RTC Only
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   hrtc.Instance = RTC;
 218:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 219:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 220:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 221:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 222:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 223:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 224:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_SPI1_Init(void)
 240:Core/Src/main.c **** {
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 249:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 250:Core/Src/main.c ****   hspi1.Instance = SPI1;
 251:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 252:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 253:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 254:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 255:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 256:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 257:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 258:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 6


 259:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 260:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 261:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 262:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /**
 273:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 274:Core/Src/main.c ****   * @param None
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** static void MX_TIM2_Init(void)
 278:Core/Src/main.c **** {
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 285:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 286:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 291:Core/Src/main.c ****   htim2.Instance = TIM2;
 292:Core/Src/main.c ****   htim2.Init.Prescaler = 83;
 293:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 294:Core/Src/main.c ****   htim2.Init.Period = 999;
 295:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 296:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 297:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 302:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 7


 316:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 317:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 318:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 319:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 320:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 327:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /**
 332:Core/Src/main.c ****   * @brief GPIO Initialization Function
 333:Core/Src/main.c ****   * @param None
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** static void MX_GPIO_Init(void)
 337:Core/Src/main.c **** {
  29              		.loc 1 337 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 14, -4
  44 0004 8AB0     		sub	sp, sp, #40
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
 338:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 338 0
  48 0006 0024     		movs	r4, #0
  49 0008 0594     		str	r4, [sp, #20]
  50 000a 0694     		str	r4, [sp, #24]
  51 000c 0794     		str	r4, [sp, #28]
  52 000e 0894     		str	r4, [sp, #32]
  53 0010 0994     		str	r4, [sp, #36]
  54              	.LBB4:
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 341:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  55              		.loc 1 341 0
  56 0012 0194     		str	r4, [sp, #4]
  57 0014 554B     		ldr	r3, .L3
  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 8


  60 001c 1A63     		str	r2, [r3, #48]
  61 001e 1A6B     		ldr	r2, [r3, #48]
  62 0020 02F00402 		and	r2, r2, #4
  63 0024 0192     		str	r2, [sp, #4]
  64 0026 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              	.LBB5:
 342:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  67              		.loc 1 342 0
  68 0028 0294     		str	r4, [sp, #8]
  69 002a 1A6B     		ldr	r2, [r3, #48]
  70 002c 42F08002 		orr	r2, r2, #128
  71 0030 1A63     		str	r2, [r3, #48]
  72 0032 1A6B     		ldr	r2, [r3, #48]
  73 0034 02F08002 		and	r2, r2, #128
  74 0038 0292     		str	r2, [sp, #8]
  75 003a 029A     		ldr	r2, [sp, #8]
  76              	.LBE5:
  77              	.LBB6:
 343:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 343 0
  79 003c 0394     		str	r4, [sp, #12]
  80 003e 1A6B     		ldr	r2, [r3, #48]
  81 0040 42F00102 		orr	r2, r2, #1
  82 0044 1A63     		str	r2, [r3, #48]
  83 0046 1A6B     		ldr	r2, [r3, #48]
  84 0048 02F00102 		and	r2, r2, #1
  85 004c 0392     		str	r2, [sp, #12]
  86 004e 039A     		ldr	r2, [sp, #12]
  87              	.LBE6:
  88              	.LBB7:
 344:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  89              		.loc 1 344 0
  90 0050 0494     		str	r4, [sp, #16]
  91 0052 1A6B     		ldr	r2, [r3, #48]
  92 0054 42F00202 		orr	r2, r2, #2
  93 0058 1A63     		str	r2, [r3, #48]
  94 005a 1B6B     		ldr	r3, [r3, #48]
  95 005c 03F00203 		and	r3, r3, #2
  96 0060 0493     		str	r3, [sp, #16]
  97 0062 049B     		ldr	r3, [sp, #16]
  98              	.LBE7:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 347:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  99              		.loc 1 347 0
 100 0064 DFF81081 		ldr	r8, .L3+12
 101 0068 2246     		mov	r2, r4
 102 006a 4FF40051 		mov	r1, #8192
 103 006e 4046     		mov	r0, r8
 104 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL0:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 350:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, OLED_DC_Pin|GPIO_PIN_15, GPIO_PIN_RESET);
 106              		.loc 1 350 0
 107 0074 3E4F     		ldr	r7, .L3+4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 9


 108 0076 2246     		mov	r2, r4
 109 0078 48F24001 		movw	r1, #32832
 110 007c 3846     		mov	r0, r7
 111 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL1:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 353:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_RST_GPIO_Port, OLED_RST_Pin, GPIO_PIN_SET);
 113              		.loc 1 353 0
 114 0082 3C4E     		ldr	r6, .L3+8
 115 0084 0122     		movs	r2, #1
 116 0086 1146     		mov	r1, r2
 117 0088 3046     		mov	r0, r6
 118 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL2:
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 356:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_CS_GPIO_Port, OLED_CS_Pin, GPIO_PIN_RESET);
 120              		.loc 1 356 0
 121 008e 2246     		mov	r2, r4
 122 0090 0221     		movs	r1, #2
 123 0092 3046     		mov	r0, r6
 124 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 125              	.LVL3:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 359:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 126              		.loc 1 359 0
 127 0098 4FF4005A 		mov	r10, #8192
 128 009c CDF814A0 		str	r10, [sp, #20]
 360:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 129              		.loc 1 360 0
 130 00a0 0125     		movs	r5, #1
 131 00a2 0695     		str	r5, [sp, #24]
 361:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 361 0
 133 00a4 0794     		str	r4, [sp, #28]
 362:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 134              		.loc 1 362 0
 135 00a6 0894     		str	r4, [sp, #32]
 363:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 136              		.loc 1 363 0
 137 00a8 05A9     		add	r1, sp, #20
 138 00aa 4046     		mov	r0, r8
 139 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL4:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 366:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 141              		.loc 1 366 0
 142 00b0 0595     		str	r5, [sp, #20]
 367:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 143              		.loc 1 367 0
 144 00b2 4FF48819 		mov	r9, #1114112
 145 00b6 CDF81890 		str	r9, [sp, #24]
 368:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 146              		.loc 1 368 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 10


 147 00ba 0795     		str	r5, [sp, #28]
 369:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 369 0
 149 00bc 05A9     		add	r1, sp, #20
 150 00be 3846     		mov	r0, r7
 151 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL5:
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /*Configure GPIO pin : OLED_DC_Pin */
 372:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_DC_Pin;
 153              		.loc 1 372 0
 154 00c4 4023     		movs	r3, #64
 155 00c6 0593     		str	r3, [sp, #20]
 373:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 156              		.loc 1 373 0
 157 00c8 0695     		str	r5, [sp, #24]
 374:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 374 0
 159 00ca 0794     		str	r4, [sp, #28]
 375:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 160              		.loc 1 375 0
 161 00cc 4FF00308 		mov	r8, #3
 162 00d0 CDF82080 		str	r8, [sp, #32]
 376:Core/Src/main.c ****   HAL_GPIO_Init(OLED_DC_GPIO_Port, &GPIO_InitStruct);
 163              		.loc 1 376 0
 164 00d4 05A9     		add	r1, sp, #20
 165 00d6 3846     		mov	r0, r7
 166 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL6:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /*Configure GPIO pins : OLED_RST_Pin OLED_CS_Pin */
 379:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_RST_Pin|OLED_CS_Pin;
 168              		.loc 1 379 0
 169 00dc CDF81480 		str	r8, [sp, #20]
 380:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 170              		.loc 1 380 0
 171 00e0 0695     		str	r5, [sp, #24]
 381:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 381 0
 173 00e2 0794     		str	r4, [sp, #28]
 382:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 174              		.loc 1 382 0
 175 00e4 CDF82080 		str	r8, [sp, #32]
 383:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 176              		.loc 1 383 0
 177 00e8 05A9     		add	r1, sp, #20
 178 00ea 3046     		mov	r0, r6
 179 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL7:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /*Configure GPIO pin : PB13 */
 386:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 181              		.loc 1 386 0
 182 00f0 CDF814A0 		str	r10, [sp, #20]
 387:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 183              		.loc 1 387 0
 184 00f4 CDF81890 		str	r9, [sp, #24]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 11


 388:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 185              		.loc 1 388 0
 186 00f8 4FF00209 		mov	r9, #2
 187 00fc CDF81C90 		str	r9, [sp, #28]
 389:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 188              		.loc 1 389 0
 189 0100 05A9     		add	r1, sp, #20
 190 0102 3046     		mov	r0, r6
 191 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 192              	.LVL8:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /*Configure GPIO pin : PB14 */
 392:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 193              		.loc 1 392 0
 194 0108 4FF48043 		mov	r3, #16384
 195 010c 0593     		str	r3, [sp, #20]
 393:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 196              		.loc 1 393 0
 197 010e 0694     		str	r4, [sp, #24]
 394:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 394 0
 199 0110 0794     		str	r4, [sp, #28]
 395:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 200              		.loc 1 395 0
 201 0112 05A9     		add	r1, sp, #20
 202 0114 3046     		mov	r0, r6
 203 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 204              	.LVL9:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /*Configure GPIO pin : PB15 */
 398:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 205              		.loc 1 398 0
 206 011a 4FF40048 		mov	r8, #32768
 207 011e CDF81480 		str	r8, [sp, #20]
 399:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 208              		.loc 1 399 0
 209 0122 4FF40413 		mov	r3, #2162688
 210 0126 0693     		str	r3, [sp, #24]
 400:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 211              		.loc 1 400 0
 212 0128 CDF81C90 		str	r9, [sp, #28]
 401:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 213              		.loc 1 401 0
 214 012c 05A9     		add	r1, sp, #20
 215 012e 3046     		mov	r0, r6
 216 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 217              	.LVL10:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 404:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 218              		.loc 1 404 0
 219 0134 CDF81480 		str	r8, [sp, #20]
 405:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 405 0
 221 0138 0695     		str	r5, [sp, #24]
 406:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 222              		.loc 1 406 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 12


 223 013a 0794     		str	r4, [sp, #28]
 407:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 224              		.loc 1 407 0
 225 013c 0894     		str	r4, [sp, #32]
 408:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 226              		.loc 1 408 0
 227 013e 05A9     		add	r1, sp, #20
 228 0140 3846     		mov	r0, r7
 229 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL11:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* EXTI interrupt init*/
 411:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 231              		.loc 1 411 0
 232 0146 2246     		mov	r2, r4
 233 0148 0521     		movs	r1, #5
 234 014a 0620     		movs	r0, #6
 235 014c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 236              	.LVL12:
 412:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 237              		.loc 1 412 0
 238 0150 0620     		movs	r0, #6
 239 0152 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 240              	.LVL13:
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 241              		.loc 1 414 0
 242 0156 2246     		mov	r2, r4
 243 0158 0521     		movs	r1, #5
 244 015a 2820     		movs	r0, #40
 245 015c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 246              	.LVL14:
 415:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 247              		.loc 1 415 0
 248 0160 2820     		movs	r0, #40
 249 0162 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 250              	.LVL15:
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** }
 251              		.loc 1 417 0
 252 0166 0AB0     		add	sp, sp, #40
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 32
 255              		@ sp needed
 256 0168 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 257              	.L4:
 258              		.align	2
 259              	.L3:
 260 016c 00380240 		.word	1073887232
 261 0170 00000240 		.word	1073872896
 262 0174 00040240 		.word	1073873920
 263 0178 00080240 		.word	1073874944
 264              		.cfi_endproc
 265              	.LFE140:
 267              		.section	.text.StartMainTask,"ax",%progbits
 268              		.align	2
 269              		.global	StartMainTask
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 13


 270              		.thumb
 271              		.thumb_func
 273              	StartMainTask:
 274              	.LFB141:
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /* USER CODE END 4 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** /* USER CODE BEGIN Header_StartMainTask */
 424:Core/Src/main.c **** /**
 425:Core/Src/main.c ****   * @brief  Function implementing the MainTask thread.
 426:Core/Src/main.c ****   * @param  argument: Not used
 427:Core/Src/main.c ****   * @retval None
 428:Core/Src/main.c ****   */
 429:Core/Src/main.c **** /* USER CODE END Header_StartMainTask */
 430:Core/Src/main.c **** void StartMainTask(void const * argument)
 431:Core/Src/main.c **** {
 275              		.loc 1 431 0
 276              		.cfi_startproc
 277              		@ Volatile: function does not return.
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              	.LVL16:
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 286              	.LVL17:
 287              	.L6:
 432:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 433:Core/Src/main.c ****   /* Infinite loop */
 434:Core/Src/main.c ****   for(;;)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****       
 437:Core/Src/main.c ****     osDelay(1);
 288              		.loc 1 437 0 discriminator 1
 289 0002 0120     		movs	r0, #1
 290 0004 FFF7FEFF 		bl	osDelay
 291              	.LVL18:
 438:Core/Src/main.c ****     setp();
 292              		.loc 1 438 0 discriminator 1
 293 0008 FFF7FEFF 		bl	setp
 294              	.LVL19:
 295 000c F9E7     		b	.L6
 296              		.cfi_endproc
 297              	.LFE141:
 299 000e 00BF     		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 300              		.align	2
 301              		.global	HAL_TIM_PeriodElapsedCallback
 302              		.thumb
 303              		.thumb_func
 305              	HAL_TIM_PeriodElapsedCallback:
 306              	.LFB142:
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   /* USER CODE END 5 */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 14


 441:Core/Src/main.c **** }
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /**
 444:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 445:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 446:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 447:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 448:Core/Src/main.c ****   * @param  htim : TIM handle
 449:Core/Src/main.c ****   * @retval None
 450:Core/Src/main.c ****   */
 451:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 452:Core/Src/main.c **** {
 307              		.loc 1 452 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL20:
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI4:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 453:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 456:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 317              		.loc 1 456 0
 318 0002 0268     		ldr	r2, [r0]
 319 0004 024B     		ldr	r3, .L11
 320 0006 9A42     		cmp	r2, r3
 321 0008 01D1     		bne	.L8
 457:Core/Src/main.c ****     HAL_IncTick();
 322              		.loc 1 457 0
 323 000a FFF7FEFF 		bl	HAL_IncTick
 324              	.LVL21:
 325              	.L8:
 326 000e 08BD     		pop	{r3, pc}
 327              	.L12:
 328              		.align	2
 329              	.L11:
 330 0010 00000140 		.word	1073807360
 331              		.cfi_endproc
 332              	.LFE142:
 334              		.section	.text.Error_Handler,"ax",%progbits
 335              		.align	2
 336              		.global	Error_Handler
 337              		.thumb
 338              		.thumb_func
 340              	Error_Handler:
 341              	.LFB143:
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 462:Core/Src/main.c **** }
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 15


 465:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 466:Core/Src/main.c ****   * @retval None
 467:Core/Src/main.c ****   */
 468:Core/Src/main.c **** void Error_Handler(void)
 469:Core/Src/main.c **** {
 342              		.loc 1 469 0
 343              		.cfi_startproc
 344              		@ Volatile: function does not return.
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348              	.LBB8:
 349              	.LBB9:
 350              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 16


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 17


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 351              		.loc 2 142 0
 352              		.syntax unified
 353              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 0000 72B6     		cpsid i
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358              	.L14:
 359 0002 FEE7     		b	.L14
 360              	.LBE9:
 361              	.LBE8:
 362              		.cfi_endproc
 363              	.LFE143:
 365              		.section	.text.MX_SPI1_Init,"ax",%progbits
 366              		.align	2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 18


 367              		.thumb
 368              		.thumb_func
 370              	MX_SPI1_Init:
 371              	.LFB138:
 240:Core/Src/main.c **** 
 372              		.loc 1 240 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 08B5     		push	{r3, lr}
 377              	.LCFI5:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 250:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 381              		.loc 1 250 0
 382 0002 0D48     		ldr	r0, .L18
 383 0004 0D4B     		ldr	r3, .L18+4
 384 0006 0360     		str	r3, [r0]
 251:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 385              		.loc 1 251 0
 386 0008 4FF48273 		mov	r3, #260
 387 000c 4360     		str	r3, [r0, #4]
 252:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 388              		.loc 1 252 0
 389 000e 0023     		movs	r3, #0
 390 0010 8360     		str	r3, [r0, #8]
 253:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 391              		.loc 1 253 0
 392 0012 C360     		str	r3, [r0, #12]
 254:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 393              		.loc 1 254 0
 394 0014 0361     		str	r3, [r0, #16]
 255:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 395              		.loc 1 255 0
 396 0016 4361     		str	r3, [r0, #20]
 256:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 397              		.loc 1 256 0
 398 0018 4FF40072 		mov	r2, #512
 399 001c 8261     		str	r2, [r0, #24]
 257:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 400              		.loc 1 257 0
 401 001e C361     		str	r3, [r0, #28]
 258:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 402              		.loc 1 258 0
 403 0020 0362     		str	r3, [r0, #32]
 259:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 404              		.loc 1 259 0
 405 0022 4362     		str	r3, [r0, #36]
 260:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 406              		.loc 1 260 0
 407 0024 8362     		str	r3, [r0, #40]
 261:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 408              		.loc 1 261 0
 409 0026 0A23     		movs	r3, #10
 410 0028 C362     		str	r3, [r0, #44]
 262:Core/Src/main.c ****   {
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 19


 411              		.loc 1 262 0
 412 002a FFF7FEFF 		bl	HAL_SPI_Init
 413              	.LVL22:
 414 002e 08B1     		cbz	r0, .L15
 264:Core/Src/main.c ****   }
 415              		.loc 1 264 0
 416 0030 FFF7FEFF 		bl	Error_Handler
 417              	.LVL23:
 418              	.L15:
 419 0034 08BD     		pop	{r3, pc}
 420              	.L19:
 421 0036 00BF     		.align	2
 422              	.L18:
 423 0038 00000000 		.word	hspi1
 424 003c 00300140 		.word	1073819648
 425              		.cfi_endproc
 426              	.LFE138:
 428              		.section	.text.MX_TIM2_Init,"ax",%progbits
 429              		.align	2
 430              		.thumb
 431              		.thumb_func
 433              	MX_TIM2_Init:
 434              	.LFB139:
 278:Core/Src/main.c **** 
 435              		.loc 1 278 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 56
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              	.LCFI6:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
 443 0002 8FB0     		sub	sp, sp, #60
 444              	.LCFI7:
 445              		.cfi_def_cfa_offset 64
 284:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 446              		.loc 1 284 0
 447 0004 0023     		movs	r3, #0
 448 0006 0A93     		str	r3, [sp, #40]
 449 0008 0B93     		str	r3, [sp, #44]
 450 000a 0C93     		str	r3, [sp, #48]
 451 000c 0D93     		str	r3, [sp, #52]
 285:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 452              		.loc 1 285 0
 453 000e 0893     		str	r3, [sp, #32]
 454 0010 0993     		str	r3, [sp, #36]
 286:Core/Src/main.c **** 
 455              		.loc 1 286 0
 456 0012 0193     		str	r3, [sp, #4]
 457 0014 0293     		str	r3, [sp, #8]
 458 0016 0393     		str	r3, [sp, #12]
 459 0018 0493     		str	r3, [sp, #16]
 460 001a 0593     		str	r3, [sp, #20]
 461 001c 0693     		str	r3, [sp, #24]
 462 001e 0793     		str	r3, [sp, #28]
 291:Core/Src/main.c ****   htim2.Init.Prescaler = 83;
 463              		.loc 1 291 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 20


 464 0020 2048     		ldr	r0, .L27
 465 0022 4FF08042 		mov	r2, #1073741824
 466 0026 0260     		str	r2, [r0]
 292:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 467              		.loc 1 292 0
 468 0028 5322     		movs	r2, #83
 469 002a 4260     		str	r2, [r0, #4]
 293:Core/Src/main.c ****   htim2.Init.Period = 999;
 470              		.loc 1 293 0
 471 002c 8360     		str	r3, [r0, #8]
 294:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 472              		.loc 1 294 0
 473 002e 40F2E732 		movw	r2, #999
 474 0032 C260     		str	r2, [r0, #12]
 295:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 475              		.loc 1 295 0
 476 0034 0361     		str	r3, [r0, #16]
 296:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 477              		.loc 1 296 0
 478 0036 8023     		movs	r3, #128
 479 0038 8361     		str	r3, [r0, #24]
 297:Core/Src/main.c ****   {
 480              		.loc 1 297 0
 481 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 482              	.LVL24:
 483 003e 08B1     		cbz	r0, .L21
 299:Core/Src/main.c ****   }
 484              		.loc 1 299 0
 485 0040 FFF7FEFF 		bl	Error_Handler
 486              	.LVL25:
 487              	.L21:
 301:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 488              		.loc 1 301 0
 489 0044 0EA9     		add	r1, sp, #56
 490 0046 4FF48053 		mov	r3, #4096
 491 004a 41F8103D 		str	r3, [r1, #-16]!
 302:Core/Src/main.c ****   {
 492              		.loc 1 302 0
 493 004e 1548     		ldr	r0, .L27
 494 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 495              	.LVL26:
 496 0054 08B1     		cbz	r0, .L22
 304:Core/Src/main.c ****   }
 497              		.loc 1 304 0
 498 0056 FFF7FEFF 		bl	Error_Handler
 499              	.LVL27:
 500              	.L22:
 306:Core/Src/main.c ****   {
 501              		.loc 1 306 0
 502 005a 1248     		ldr	r0, .L27
 503 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 504              	.LVL28:
 505 0060 08B1     		cbz	r0, .L23
 308:Core/Src/main.c ****   }
 506              		.loc 1 308 0
 507 0062 FFF7FEFF 		bl	Error_Handler
 508              	.LVL29:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 21


 509              	.L23:
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 510              		.loc 1 310 0
 511 0066 0023     		movs	r3, #0
 512 0068 0893     		str	r3, [sp, #32]
 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 513              		.loc 1 311 0
 514 006a 0993     		str	r3, [sp, #36]
 312:Core/Src/main.c ****   {
 515              		.loc 1 312 0
 516 006c 08A9     		add	r1, sp, #32
 517 006e 0D48     		ldr	r0, .L27
 518 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 519              	.LVL30:
 520 0074 08B1     		cbz	r0, .L24
 314:Core/Src/main.c ****   }
 521              		.loc 1 314 0
 522 0076 FFF7FEFF 		bl	Error_Handler
 523              	.LVL31:
 524              	.L24:
 316:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 525              		.loc 1 316 0
 526 007a 6023     		movs	r3, #96
 527 007c 0193     		str	r3, [sp, #4]
 317:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 528              		.loc 1 317 0
 529 007e 0023     		movs	r3, #0
 530 0080 0293     		str	r3, [sp, #8]
 318:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 531              		.loc 1 318 0
 532 0082 0393     		str	r3, [sp, #12]
 319:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 533              		.loc 1 319 0
 534 0084 0593     		str	r3, [sp, #20]
 320:Core/Src/main.c ****   {
 535              		.loc 1 320 0
 536 0086 0422     		movs	r2, #4
 537 0088 0DEB0201 		add	r1, sp, r2
 538 008c 0548     		ldr	r0, .L27
 539 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 540              	.LVL32:
 541 0092 08B1     		cbz	r0, .L25
 322:Core/Src/main.c ****   }
 542              		.loc 1 322 0
 543 0094 FFF7FEFF 		bl	Error_Handler
 544              	.LVL33:
 545              	.L25:
 327:Core/Src/main.c **** 
 546              		.loc 1 327 0
 547 0098 0248     		ldr	r0, .L27
 548 009a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 549              	.LVL34:
 329:Core/Src/main.c **** 
 550              		.loc 1 329 0
 551 009e 0FB0     		add	sp, sp, #60
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 22


 554              		@ sp needed
 555 00a0 5DF804FB 		ldr	pc, [sp], #4
 556              	.L28:
 557              		.align	2
 558              	.L27:
 559 00a4 00000000 		.word	htim2
 560              		.cfi_endproc
 561              	.LFE139:
 563              		.section	.text.MX_RTC_Init,"ax",%progbits
 564              		.align	2
 565              		.thumb
 566              		.thumb_func
 568              	MX_RTC_Init:
 569              	.LFB137:
 206:Core/Src/main.c **** 
 570              		.loc 1 206 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 08B5     		push	{r3, lr}
 575              	.LCFI9:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 217:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 579              		.loc 1 217 0
 580 0002 0948     		ldr	r0, .L32
 581 0004 094B     		ldr	r3, .L32+4
 582 0006 0360     		str	r3, [r0]
 218:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 583              		.loc 1 218 0
 584 0008 0023     		movs	r3, #0
 585 000a 4360     		str	r3, [r0, #4]
 219:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 586              		.loc 1 219 0
 587 000c 7F22     		movs	r2, #127
 588 000e 8260     		str	r2, [r0, #8]
 220:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 589              		.loc 1 220 0
 590 0010 FF22     		movs	r2, #255
 591 0012 C260     		str	r2, [r0, #12]
 221:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 592              		.loc 1 221 0
 593 0014 0361     		str	r3, [r0, #16]
 222:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 594              		.loc 1 222 0
 595 0016 4361     		str	r3, [r0, #20]
 223:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 596              		.loc 1 223 0
 597 0018 8361     		str	r3, [r0, #24]
 224:Core/Src/main.c ****   {
 598              		.loc 1 224 0
 599 001a FFF7FEFF 		bl	HAL_RTC_Init
 600              	.LVL35:
 601 001e 08B1     		cbz	r0, .L29
 226:Core/Src/main.c ****   }
 602              		.loc 1 226 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 23


 603 0020 FFF7FEFF 		bl	Error_Handler
 604              	.LVL36:
 605              	.L29:
 606 0024 08BD     		pop	{r3, pc}
 607              	.L33:
 608 0026 00BF     		.align	2
 609              	.L32:
 610 0028 00000000 		.word	hrtc
 611 002c 00280040 		.word	1073752064
 612              		.cfi_endproc
 613              	.LFE137:
 615              		.section	.text.SystemClock_Config,"ax",%progbits
 616              		.align	2
 617              		.global	SystemClock_Config
 618              		.thumb
 619              		.thumb_func
 621              	SystemClock_Config:
 622              	.LFB136:
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 623              		.loc 1 161 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 80
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627 0000 00B5     		push	{lr}
 628              	.LCFI10:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 14, -4
 631 0002 95B0     		sub	sp, sp, #84
 632              	.LCFI11:
 633              		.cfi_def_cfa_offset 88
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 634              		.loc 1 162 0
 635 0004 3022     		movs	r2, #48
 636 0006 0021     		movs	r1, #0
 637 0008 08A8     		add	r0, sp, #32
 638 000a FFF7FEFF 		bl	memset
 639              	.LVL37:
 163:Core/Src/main.c **** 
 640              		.loc 1 163 0
 641 000e 0023     		movs	r3, #0
 642 0010 0393     		str	r3, [sp, #12]
 643 0012 0493     		str	r3, [sp, #16]
 644 0014 0593     		str	r3, [sp, #20]
 645 0016 0693     		str	r3, [sp, #24]
 646 0018 0793     		str	r3, [sp, #28]
 647              	.LBB10:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 648              		.loc 1 167 0
 649 001a 0193     		str	r3, [sp, #4]
 650 001c 214A     		ldr	r2, .L38
 651 001e 116C     		ldr	r1, [r2, #64]
 652 0020 41F08051 		orr	r1, r1, #268435456
 653 0024 1164     		str	r1, [r2, #64]
 654 0026 126C     		ldr	r2, [r2, #64]
 655 0028 02F08052 		and	r2, r2, #268435456
 656 002c 0192     		str	r2, [sp, #4]
 657 002e 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 24


 658              	.LBE10:
 659              	.LBB11:
 168:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 660              		.loc 1 168 0
 661 0030 0293     		str	r3, [sp, #8]
 662 0032 1D4A     		ldr	r2, .L38+4
 663 0034 1368     		ldr	r3, [r2]
 664 0036 23F44043 		bic	r3, r3, #49152
 665 003a 43F40043 		orr	r3, r3, #32768
 666 003e 1360     		str	r3, [r2]
 667 0040 1368     		ldr	r3, [r2]
 668 0042 03F44043 		and	r3, r3, #49152
 669 0046 0293     		str	r3, [sp, #8]
 670 0048 029B     		ldr	r3, [sp, #8]
 671              	.LBE11:
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 672              		.loc 1 172 0
 673 004a 0523     		movs	r3, #5
 674 004c 0893     		str	r3, [sp, #32]
 173:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 675              		.loc 1 173 0
 676 004e 4FF48033 		mov	r3, #65536
 677 0052 0993     		str	r3, [sp, #36]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 678              		.loc 1 174 0
 679 0054 0123     		movs	r3, #1
 680 0056 0A93     		str	r3, [sp, #40]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 681              		.loc 1 175 0
 682 0058 0223     		movs	r3, #2
 683 005a 0E93     		str	r3, [sp, #56]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 684              		.loc 1 176 0
 685 005c 4FF48002 		mov	r2, #4194304
 686 0060 0F92     		str	r2, [sp, #60]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 687              		.loc 1 177 0
 688 0062 1922     		movs	r2, #25
 689 0064 1092     		str	r2, [sp, #64]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 690              		.loc 1 178 0
 691 0066 A822     		movs	r2, #168
 692 0068 1192     		str	r2, [sp, #68]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 693              		.loc 1 179 0
 694 006a 1293     		str	r3, [sp, #72]
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 695              		.loc 1 180 0
 696 006c 0423     		movs	r3, #4
 697 006e 1393     		str	r3, [sp, #76]
 181:Core/Src/main.c ****   {
 698              		.loc 1 181 0
 699 0070 08A8     		add	r0, sp, #32
 700 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 701              	.LVL38:
 702 0076 08B1     		cbz	r0, .L35
 183:Core/Src/main.c ****   }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 25


 703              		.loc 1 183 0
 704 0078 FFF7FEFF 		bl	Error_Handler
 705              	.LVL39:
 706              	.L35:
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 707              		.loc 1 187 0
 708 007c 0F23     		movs	r3, #15
 709 007e 0393     		str	r3, [sp, #12]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 710              		.loc 1 189 0
 711 0080 0221     		movs	r1, #2
 712 0082 0491     		str	r1, [sp, #16]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 713              		.loc 1 190 0
 714 0084 0023     		movs	r3, #0
 715 0086 0593     		str	r3, [sp, #20]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 716              		.loc 1 191 0
 717 0088 4FF48052 		mov	r2, #4096
 718 008c 0692     		str	r2, [sp, #24]
 192:Core/Src/main.c **** 
 719              		.loc 1 192 0
 720 008e 0793     		str	r3, [sp, #28]
 194:Core/Src/main.c ****   {
 721              		.loc 1 194 0
 722 0090 03A8     		add	r0, sp, #12
 723 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 724              	.LVL40:
 725 0096 08B1     		cbz	r0, .L34
 196:Core/Src/main.c ****   }
 726              		.loc 1 196 0
 727 0098 FFF7FEFF 		bl	Error_Handler
 728              	.LVL41:
 729              	.L34:
 198:Core/Src/main.c **** 
 730              		.loc 1 198 0
 731 009c 15B0     		add	sp, sp, #84
 732              	.LCFI12:
 733              		.cfi_def_cfa_offset 4
 734              		@ sp needed
 735 009e 5DF804FB 		ldr	pc, [sp], #4
 736              	.L39:
 737 00a2 00BF     		.align	2
 738              	.L38:
 739 00a4 00380240 		.word	1073887232
 740 00a8 00700040 		.word	1073770496
 741              		.cfi_endproc
 742              	.LFE136:
 744              		.section	.text.main,"ax",%progbits
 745              		.align	2
 746              		.global	main
 747              		.thumb
 748              		.thumb_func
 750              	main:
 751              	.LFB135:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 752              		.loc 1 78 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 26


 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 40
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 70B5     		push	{r4, r5, r6, lr}
 757              	.LCFI13:
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 6, -8
 762              		.cfi_offset 14, -4
 763 0002 8AB0     		sub	sp, sp, #40
 764              	.LCFI14:
 765              		.cfi_def_cfa_offset 56
  86:Core/Src/main.c **** 
 766              		.loc 1 86 0
 767 0004 FFF7FEFF 		bl	HAL_Init
 768              	.LVL42:
  93:Core/Src/main.c **** 
 769              		.loc 1 93 0
 770 0008 FFF7FEFF 		bl	SystemClock_Config
 771              	.LVL43:
 100:Core/Src/main.c ****   MX_SPI1_Init();
 772              		.loc 1 100 0
 773 000c FFF7FEFF 		bl	MX_GPIO_Init
 774              	.LVL44:
 101:Core/Src/main.c ****   MX_TIM2_Init();
 775              		.loc 1 101 0
 776 0010 FFF7FEFF 		bl	MX_SPI1_Init
 777              	.LVL45:
 102:Core/Src/main.c ****   MX_RTC_Init();
 778              		.loc 1 102 0
 779 0014 FFF7FEFF 		bl	MX_TIM2_Init
 780              	.LVL46:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 781              		.loc 1 103 0
 782 0018 FFF7FEFF 		bl	MX_RTC_Init
 783              	.LVL47:
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 784              		.loc 1 105 0
 785 001c 104C     		ldr	r4, .L43
 786 001e 2046     		mov	r0, r4
 787 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start
 788              	.LVL48:
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 789              		.loc 1 106 0
 790 0024 0421     		movs	r1, #4
 791 0026 2046     		mov	r0, r4
 792 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 793              	.LVL49:
 111:Core/Src/main.c ****   myMutex01Handle = osMutexCreate(osMutex(myMutex01));
 794              		.loc 1 111 0
 795 002c 0026     		movs	r6, #0
 796 002e 0896     		str	r6, [sp, #32]
 797 0030 0996     		str	r6, [sp, #36]
 112:Core/Src/main.c **** 
 798              		.loc 1 112 0
 799 0032 08A8     		add	r0, sp, #32
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 27


 800 0034 FFF7FEFF 		bl	osMutexCreate
 801              	.LVL50:
 802 0038 0A4B     		ldr	r3, .L43+4
 803 003a 1860     		str	r0, [r3]
 132:Core/Src/main.c ****   MainTaskHandle = osThreadCreate(osThread(MainTask), NULL);
 804              		.loc 1 132 0
 805 003c 01AC     		add	r4, sp, #4
 806 003e 0A4D     		ldr	r5, .L43+8
 807 0040 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 808 0042 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 809 0044 95E80700 		ldmia	r5, {r0, r1, r2}
 810 0048 84E80700 		stmia	r4, {r0, r1, r2}
 133:Core/Src/main.c **** 
 811              		.loc 1 133 0
 812 004c 3146     		mov	r1, r6
 813 004e 01A8     		add	r0, sp, #4
 814 0050 FFF7FEFF 		bl	osThreadCreate
 815              	.LVL51:
 816 0054 054B     		ldr	r3, .L43+12
 817 0056 1860     		str	r0, [r3]
 140:Core/Src/main.c **** 
 818              		.loc 1 140 0
 819 0058 FFF7FEFF 		bl	osKernelStart
 820              	.LVL52:
 821              	.L41:
 822 005c FEE7     		b	.L41
 823              	.L44:
 824 005e 00BF     		.align	2
 825              	.L43:
 826 0060 00000000 		.word	htim2
 827 0064 00000000 		.word	myMutex01Handle
 828 0068 00000000 		.word	.LANCHOR0
 829 006c 00000000 		.word	MainTaskHandle
 830              		.cfi_endproc
 831              	.LFE135:
 833              		.comm	myMutex01Handle,4,4
 834              		.comm	MainTaskHandle,4,4
 835              		.comm	htim2,72,4
 836              		.comm	hspi1,88,4
 837              		.comm	hrtc,32,4
 838              		.section	.rodata
 839              		.align	2
 840              		.set	.LANCHOR0,. + 0
 841              	.LC2:
 842 0000 00000000 		.word	.LC0
 843 0004 00000000 		.word	StartMainTask
 844 0008 0000     		.short	0
 845 000a 0000     		.space	2
 846 000c 00000000 		.word	0
 847 0010 80000000 		.word	128
 848 0014 00000000 		.word	0
 849 0018 00000000 		.word	0
 850              		.section	.rodata.str1.4,"aMS",%progbits,1
 851              		.align	2
 852              	.LC0:
 853 0000 4D61696E 		.ascii	"MainTask\000"
 853      5461736B 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 28


 853      00
 854              		.text
 855              	.Letext0:
 856              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 857              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 858              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 859              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 860              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 861              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 862              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 863              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 864              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 865              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 866              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 867              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 868              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 869              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 870              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 871              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 872              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 873              		.file 20 "Drivers/CMSIS/Include/core_cm4.h"
 874              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 875              		.file 22 "Core/Inc/mysetp.h"
 876              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 877              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 878              		.file 25 "Core/Inc/main.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:260    .text.MX_GPIO_Init:0000016c $d
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:268    .text.StartMainTask:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:273    .text.StartMainTask:00000000 StartMainTask
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:300    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:305    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:330    .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:335    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:340    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:366    .text.MX_SPI1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:370    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:423    .text.MX_SPI1_Init:00000038 $d
                            *COM*:00000058 hspi1
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:429    .text.MX_TIM2_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:433    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:559    .text.MX_TIM2_Init:000000a4 $d
                            *COM*:00000048 htim2
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:564    .text.MX_RTC_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:568    .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:610    .text.MX_RTC_Init:00000028 $d
                            *COM*:00000020 hrtc
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:616    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:621    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:739    .text.SystemClock_Config:000000a4 $d
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:745    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:750    .text.main:00000000 main
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:826    .text.main:00000060 $d
                            *COM*:00000004 myMutex01Handle
                            *COM*:00000004 MainTaskHandle
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:839    .rodata:00000000 $d
C:\Users\master\AppData\Local\Temp\ccBQbB70.s:851    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
osDelay
setp
HAL_IncTick
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RTC_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
ARM GAS  C:\Users\master\AppData\Local\Temp\ccBQbB70.s 			page 30


HAL_TIM_PWM_Start
osMutexCreate
osThreadCreate
osKernelStart
