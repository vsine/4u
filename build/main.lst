ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB134:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "mysetp.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_I2C1_Init(void);
  55:Core/Src/main.c **** static void MX_SPI1_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_I2C1_Init();
  94:Core/Src/main.c ****   MX_SPI1_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****     while (1)
 107:Core/Src/main.c ****     {
 108:Core/Src/main.c ****             setp();
 109:Core/Src/main.c ****     }
 110:Core/Src/main.c ****     
 111:Core/Src/main.c ****     
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c ****   /* USER CODE END 3 */
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief System Clock Configuration
 118:Core/Src/main.c ****   * @retval None
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** void SystemClock_Config(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 128:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 129:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_I2C1_Init(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 174:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 175:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 176:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 177:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 178:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 179:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 180:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 181:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 182:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 183:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 195:Core/Src/main.c ****   * @param None
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** static void MX_SPI1_Init(void)
 199:Core/Src/main.c **** {
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 5


 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 208:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 209:Core/Src/main.c ****   hspi1.Instance = SPI1;
 210:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 211:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 212:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 213:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 214:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 215:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 216:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 217:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 218:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 219:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 220:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 221:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief GPIO Initialization Function
 233:Core/Src/main.c ****   * @param None
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** static void MX_GPIO_Init(void)
 237:Core/Src/main.c **** {
  29              		.loc 1 237 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
  42 0004 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 238:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 238 0
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 6


  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
  52              	.LBB4:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 241:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 241 0
  54 0012 0194     		str	r4, [sp, #4]
  55 0014 2D4B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59 001e 1A6B     		ldr	r2, [r3, #48]
  60 0020 02F00402 		and	r2, r2, #4
  61 0024 0192     		str	r2, [sp, #4]
  62 0026 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              	.LBB5:
 242:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 242 0
  66 0028 0294     		str	r4, [sp, #8]
  67 002a 1A6B     		ldr	r2, [r3, #48]
  68 002c 42F08002 		orr	r2, r2, #128
  69 0030 1A63     		str	r2, [r3, #48]
  70 0032 1A6B     		ldr	r2, [r3, #48]
  71 0034 02F08002 		and	r2, r2, #128
  72 0038 0292     		str	r2, [sp, #8]
  73 003a 029A     		ldr	r2, [sp, #8]
  74              	.LBE5:
  75              	.LBB6:
 243:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  76              		.loc 1 243 0
  77 003c 0394     		str	r4, [sp, #12]
  78 003e 1A6B     		ldr	r2, [r3, #48]
  79 0040 42F00102 		orr	r2, r2, #1
  80 0044 1A63     		str	r2, [r3, #48]
  81 0046 1A6B     		ldr	r2, [r3, #48]
  82 0048 02F00102 		and	r2, r2, #1
  83 004c 0392     		str	r2, [sp, #12]
  84 004e 039A     		ldr	r2, [sp, #12]
  85              	.LBE6:
  86              	.LBB7:
 244:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 244 0
  88 0050 0494     		str	r4, [sp, #16]
  89 0052 1A6B     		ldr	r2, [r3, #48]
  90 0054 42F00202 		orr	r2, r2, #2
  91 0058 1A63     		str	r2, [r3, #48]
  92 005a 1B6B     		ldr	r3, [r3, #48]
  93 005c 03F00203 		and	r3, r3, #2
  94 0060 0493     		str	r3, [sp, #16]
  95 0062 049B     		ldr	r3, [sp, #16]
  96              	.LBE7:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 247:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 7


  97              		.loc 1 247 0
  98 0064 DFF87080 		ldr	r8, .L3+12
  99 0068 2246     		mov	r2, r4
 100 006a 4FF40051 		mov	r1, #8192
 101 006e 4046     		mov	r0, r8
 102 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL0:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 250:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_DC_GPIO_Port, OLED_DC_Pin, GPIO_PIN_RESET);
 104              		.loc 1 250 0
 105 0074 164F     		ldr	r7, .L3+4
 106 0076 2246     		mov	r2, r4
 107 0078 4021     		movs	r1, #64
 108 007a 3846     		mov	r0, r7
 109 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL1:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 253:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, OLED_RST_Pin|OLED_CS_Pin, GPIO_PIN_RESET);
 111              		.loc 1 253 0
 112 0080 144E     		ldr	r6, .L3+8
 113 0082 2246     		mov	r2, r4
 114 0084 0321     		movs	r1, #3
 115 0086 3046     		mov	r0, r6
 116 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL2:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 256:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 118              		.loc 1 256 0
 119 008c 4FF40053 		mov	r3, #8192
 120 0090 0593     		str	r3, [sp, #20]
 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 257 0
 122 0092 0125     		movs	r5, #1
 123 0094 0695     		str	r5, [sp, #24]
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 258 0
 125 0096 0794     		str	r4, [sp, #28]
 259:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 259 0
 127 0098 0894     		str	r4, [sp, #32]
 260:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 128              		.loc 1 260 0
 129 009a 05A9     		add	r1, sp, #20
 130 009c 4046     		mov	r0, r8
 131 009e FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL3:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /*Configure GPIO pin : OLED_DC_Pin */
 263:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_DC_Pin;
 133              		.loc 1 263 0
 134 00a2 4023     		movs	r3, #64
 135 00a4 0593     		str	r3, [sp, #20]
 264:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 136              		.loc 1 264 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 8


 137 00a6 0695     		str	r5, [sp, #24]
 265:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 265 0
 139 00a8 0794     		str	r4, [sp, #28]
 266:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140              		.loc 1 266 0
 141 00aa 0894     		str	r4, [sp, #32]
 267:Core/Src/main.c ****   HAL_GPIO_Init(OLED_DC_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 267 0
 143 00ac 05A9     		add	r1, sp, #20
 144 00ae 3846     		mov	r0, r7
 145 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /*Configure GPIO pins : OLED_RST_Pin OLED_CS_Pin */
 270:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_RST_Pin|OLED_CS_Pin;
 147              		.loc 1 270 0
 148 00b4 0323     		movs	r3, #3
 149 00b6 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 271 0
 151 00b8 0695     		str	r5, [sp, #24]
 272:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 272 0
 153 00ba 0794     		str	r4, [sp, #28]
 273:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 273 0
 155 00bc 0894     		str	r4, [sp, #32]
 274:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 156              		.loc 1 274 0
 157 00be 05A9     		add	r1, sp, #20
 158 00c0 3046     		mov	r0, r6
 159 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL5:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** }
 161              		.loc 1 276 0
 162 00c6 0AB0     		add	sp, sp, #40
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 24
 165              		@ sp needed
 166 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 167              	.L4:
 168              		.align	2
 169              	.L3:
 170 00cc 00380240 		.word	1073887232
 171 00d0 00000240 		.word	1073872896
 172 00d4 00040240 		.word	1073873920
 173 00d8 00080240 		.word	1073874944
 174              		.cfi_endproc
 175              	.LFE134:
 177              		.section	.text.Error_Handler,"ax",%progbits
 178              		.align	2
 179              		.global	Error_Handler
 180              		.thumb
 181              		.thumb_func
 183              	Error_Handler:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 9


 184              	.LFB135:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /* USER CODE END 4 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 284:Core/Src/main.c ****   * @retval None
 285:Core/Src/main.c ****   */
 286:Core/Src/main.c **** void Error_Handler(void)
 287:Core/Src/main.c **** {
 185              		.loc 1 287 0
 186              		.cfi_startproc
 187              		@ Volatile: function does not return.
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LBB8:
 192              	.LBB9:
 193              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 10


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 11


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 194              		.loc 2 142 0
 195              		.syntax unified
 196              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 197 0000 72B6     		cpsid i
 198              	@ 0 "" 2
 199              		.thumb
 200              		.syntax unified
 201              	.L6:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 12


 202 0002 FEE7     		b	.L6
 203              	.LBE9:
 204              	.LBE8:
 205              		.cfi_endproc
 206              	.LFE135:
 208              		.section	.text.MX_I2C1_Init,"ax",%progbits
 209              		.align	2
 210              		.thumb
 211              		.thumb_func
 213              	MX_I2C1_Init:
 214              	.LFB132:
 165:Core/Src/main.c **** 
 215              		.loc 1 165 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 174:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 224              		.loc 1 174 0
 225 0002 0A48     		ldr	r0, .L10
 226 0004 0A4B     		ldr	r3, .L10+4
 227 0006 0360     		str	r3, [r0]
 175:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 228              		.loc 1 175 0
 229 0008 0A4B     		ldr	r3, .L10+8
 230 000a 4360     		str	r3, [r0, #4]
 176:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 231              		.loc 1 176 0
 232 000c 0023     		movs	r3, #0
 233 000e 8360     		str	r3, [r0, #8]
 177:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 234              		.loc 1 177 0
 235 0010 C360     		str	r3, [r0, #12]
 178:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 236              		.loc 1 178 0
 237 0012 4FF48042 		mov	r2, #16384
 238 0016 0261     		str	r2, [r0, #16]
 179:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 239              		.loc 1 179 0
 240 0018 4361     		str	r3, [r0, #20]
 180:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 241              		.loc 1 180 0
 242 001a 8361     		str	r3, [r0, #24]
 181:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 243              		.loc 1 181 0
 244 001c C361     		str	r3, [r0, #28]
 182:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 245              		.loc 1 182 0
 246 001e 0362     		str	r3, [r0, #32]
 183:Core/Src/main.c ****   {
 247              		.loc 1 183 0
 248 0020 FFF7FEFF 		bl	HAL_I2C_Init
 249              	.LVL6:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 13


 250 0024 08B1     		cbz	r0, .L7
 185:Core/Src/main.c ****   }
 251              		.loc 1 185 0
 252 0026 FFF7FEFF 		bl	Error_Handler
 253              	.LVL7:
 254              	.L7:
 255 002a 08BD     		pop	{r3, pc}
 256              	.L11:
 257              		.align	2
 258              	.L10:
 259 002c 00000000 		.word	hi2c1
 260 0030 00540040 		.word	1073763328
 261 0034 A0860100 		.word	100000
 262              		.cfi_endproc
 263              	.LFE132:
 265              		.section	.text.MX_SPI1_Init,"ax",%progbits
 266              		.align	2
 267              		.thumb
 268              		.thumb_func
 270              	MX_SPI1_Init:
 271              	.LFB133:
 199:Core/Src/main.c **** 
 272              		.loc 1 199 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
 209:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 281              		.loc 1 209 0
 282 0002 0E48     		ldr	r0, .L15
 283 0004 0E4B     		ldr	r3, .L15+4
 284 0006 0360     		str	r3, [r0]
 210:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 285              		.loc 1 210 0
 286 0008 4FF48273 		mov	r3, #260
 287 000c 4360     		str	r3, [r0, #4]
 211:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 288              		.loc 1 211 0
 289 000e 4FF40043 		mov	r3, #32768
 290 0012 8360     		str	r3, [r0, #8]
 212:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 291              		.loc 1 212 0
 292 0014 0023     		movs	r3, #0
 293 0016 C360     		str	r3, [r0, #12]
 213:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 294              		.loc 1 213 0
 295 0018 0361     		str	r3, [r0, #16]
 214:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 296              		.loc 1 214 0
 297 001a 4361     		str	r3, [r0, #20]
 215:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 298              		.loc 1 215 0
 299 001c 4FF40072 		mov	r2, #512
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 14


 300 0020 8261     		str	r2, [r0, #24]
 216:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 301              		.loc 1 216 0
 302 0022 C361     		str	r3, [r0, #28]
 217:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 303              		.loc 1 217 0
 304 0024 0362     		str	r3, [r0, #32]
 218:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 305              		.loc 1 218 0
 306 0026 4362     		str	r3, [r0, #36]
 219:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 307              		.loc 1 219 0
 308 0028 8362     		str	r3, [r0, #40]
 220:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 309              		.loc 1 220 0
 310 002a 0A23     		movs	r3, #10
 311 002c C362     		str	r3, [r0, #44]
 221:Core/Src/main.c ****   {
 312              		.loc 1 221 0
 313 002e FFF7FEFF 		bl	HAL_SPI_Init
 314              	.LVL8:
 315 0032 08B1     		cbz	r0, .L12
 223:Core/Src/main.c ****   }
 316              		.loc 1 223 0
 317 0034 FFF7FEFF 		bl	Error_Handler
 318              	.LVL9:
 319              	.L12:
 320 0038 08BD     		pop	{r3, pc}
 321              	.L16:
 322 003a 00BF     		.align	2
 323              	.L15:
 324 003c 00000000 		.word	hspi1
 325 0040 00300140 		.word	1073819648
 326              		.cfi_endproc
 327              	.LFE133:
 329              		.section	.text.SystemClock_Config,"ax",%progbits
 330              		.align	2
 331              		.global	SystemClock_Config
 332              		.thumb
 333              		.thumb_func
 335              	SystemClock_Config:
 336              	.LFB131:
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 337              		.loc 1 121 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 80
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 00B5     		push	{lr}
 342              	.LCFI5:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 14, -4
 345 0002 95B0     		sub	sp, sp, #84
 346              	.LCFI6:
 347              		.cfi_def_cfa_offset 88
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 348              		.loc 1 122 0
 349 0004 3022     		movs	r2, #48
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 15


 350 0006 0021     		movs	r1, #0
 351 0008 08A8     		add	r0, sp, #32
 352 000a FFF7FEFF 		bl	memset
 353              	.LVL10:
 123:Core/Src/main.c **** 
 354              		.loc 1 123 0
 355 000e 0023     		movs	r3, #0
 356 0010 0393     		str	r3, [sp, #12]
 357 0012 0493     		str	r3, [sp, #16]
 358 0014 0593     		str	r3, [sp, #20]
 359 0016 0693     		str	r3, [sp, #24]
 360 0018 0793     		str	r3, [sp, #28]
 361              	.LBB10:
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 362              		.loc 1 127 0
 363 001a 0193     		str	r3, [sp, #4]
 364 001c 204A     		ldr	r2, .L21
 365 001e 116C     		ldr	r1, [r2, #64]
 366 0020 41F08051 		orr	r1, r1, #268435456
 367 0024 1164     		str	r1, [r2, #64]
 368 0026 126C     		ldr	r2, [r2, #64]
 369 0028 02F08052 		and	r2, r2, #268435456
 370 002c 0192     		str	r2, [sp, #4]
 371 002e 019A     		ldr	r2, [sp, #4]
 372              	.LBE10:
 373              	.LBB11:
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 374              		.loc 1 128 0
 375 0030 0293     		str	r3, [sp, #8]
 376 0032 1C4A     		ldr	r2, .L21+4
 377 0034 1368     		ldr	r3, [r2]
 378 0036 23F44043 		bic	r3, r3, #49152
 379 003a 43F40043 		orr	r3, r3, #32768
 380 003e 1360     		str	r3, [r2]
 381 0040 1368     		ldr	r3, [r2]
 382 0042 03F44043 		and	r3, r3, #49152
 383 0046 0293     		str	r3, [sp, #8]
 384 0048 029B     		ldr	r3, [sp, #8]
 385              	.LBE11:
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 386              		.loc 1 132 0
 387 004a 0123     		movs	r3, #1
 388 004c 0893     		str	r3, [sp, #32]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 389              		.loc 1 133 0
 390 004e 4FF48033 		mov	r3, #65536
 391 0052 0993     		str	r3, [sp, #36]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 392              		.loc 1 134 0
 393 0054 0223     		movs	r3, #2
 394 0056 0E93     		str	r3, [sp, #56]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 395              		.loc 1 135 0
 396 0058 4FF48002 		mov	r2, #4194304
 397 005c 0F92     		str	r2, [sp, #60]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 398              		.loc 1 136 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 16


 399 005e 1922     		movs	r2, #25
 400 0060 1092     		str	r2, [sp, #64]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 401              		.loc 1 137 0
 402 0062 A822     		movs	r2, #168
 403 0064 1192     		str	r2, [sp, #68]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 404              		.loc 1 138 0
 405 0066 1293     		str	r3, [sp, #72]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 406              		.loc 1 139 0
 407 0068 0423     		movs	r3, #4
 408 006a 1393     		str	r3, [sp, #76]
 140:Core/Src/main.c ****   {
 409              		.loc 1 140 0
 410 006c 08A8     		add	r0, sp, #32
 411 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 412              	.LVL11:
 413 0072 08B1     		cbz	r0, .L18
 142:Core/Src/main.c ****   }
 414              		.loc 1 142 0
 415 0074 FFF7FEFF 		bl	Error_Handler
 416              	.LVL12:
 417              	.L18:
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 418              		.loc 1 146 0
 419 0078 0F23     		movs	r3, #15
 420 007a 0393     		str	r3, [sp, #12]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 421              		.loc 1 148 0
 422 007c 0221     		movs	r1, #2
 423 007e 0491     		str	r1, [sp, #16]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 424              		.loc 1 149 0
 425 0080 0023     		movs	r3, #0
 426 0082 0593     		str	r3, [sp, #20]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 427              		.loc 1 150 0
 428 0084 4FF48052 		mov	r2, #4096
 429 0088 0692     		str	r2, [sp, #24]
 151:Core/Src/main.c **** 
 430              		.loc 1 151 0
 431 008a 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   {
 432              		.loc 1 153 0
 433 008c 03A8     		add	r0, sp, #12
 434 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 435              	.LVL13:
 436 0092 08B1     		cbz	r0, .L17
 155:Core/Src/main.c ****   }
 437              		.loc 1 155 0
 438 0094 FFF7FEFF 		bl	Error_Handler
 439              	.LVL14:
 440              	.L17:
 157:Core/Src/main.c **** 
 441              		.loc 1 157 0
 442 0098 15B0     		add	sp, sp, #84
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 17


 443              	.LCFI7:
 444              		.cfi_def_cfa_offset 4
 445              		@ sp needed
 446 009a 5DF804FB 		ldr	pc, [sp], #4
 447              	.L22:
 448 009e 00BF     		.align	2
 449              	.L21:
 450 00a0 00380240 		.word	1073887232
 451 00a4 00700040 		.word	1073770496
 452              		.cfi_endproc
 453              	.LFE131:
 455              		.section	.text.main,"ax",%progbits
 456              		.align	2
 457              		.global	main
 458              		.thumb
 459              		.thumb_func
 461              	main:
 462              	.LFB130:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 463              		.loc 1 70 0
 464              		.cfi_startproc
 465              		@ Volatile: function does not return.
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 473              		.loc 1 78 0
 474 0002 FFF7FEFF 		bl	HAL_Init
 475              	.LVL15:
  85:Core/Src/main.c **** 
 476              		.loc 1 85 0
 477 0006 FFF7FEFF 		bl	SystemClock_Config
 478              	.LVL16:
  92:Core/Src/main.c ****   MX_I2C1_Init();
 479              		.loc 1 92 0
 480 000a FFF7FEFF 		bl	MX_GPIO_Init
 481              	.LVL17:
  93:Core/Src/main.c ****   MX_SPI1_Init();
 482              		.loc 1 93 0
 483 000e FFF7FEFF 		bl	MX_I2C1_Init
 484              	.LVL18:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 485              		.loc 1 94 0
 486 0012 FFF7FEFF 		bl	MX_SPI1_Init
 487              	.LVL19:
 488              	.L24:
 108:Core/Src/main.c ****     }
 489              		.loc 1 108 0 discriminator 1
 490 0016 FFF7FEFF 		bl	setp
 491              	.LVL20:
 492 001a FCE7     		b	.L24
 493              		.cfi_endproc
 494              	.LFE130:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 18


 496              		.comm	hspi1,88,4
 497              		.comm	hi2c1,84,4
 498              		.text
 499              	.Letext0:
 500              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 501              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 502              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 503              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 504              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 505              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 506              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 507              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 508              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 509              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 510              		.file 13 "Drivers/CMSIS/Include/core_cm4.h"
 511              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 512              		.file 15 "Core/Inc/mysetp.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccGLbh8n.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:170    .text.MX_GPIO_Init:000000cc $d
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:178    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:183    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:209    .text.MX_I2C1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:213    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:259    .text.MX_I2C1_Init:0000002c $d
                            *COM*:00000054 hi2c1
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:266    .text.MX_SPI1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:270    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:324    .text.MX_SPI1_Init:0000003c $d
                            *COM*:00000058 hspi1
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:330    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:335    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:450    .text.SystemClock_Config:000000a0 $d
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:456    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\ccGLbh8n.s:461    .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
setp
