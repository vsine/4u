ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB132:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     /* USER CODE END WHILE */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****     while (1)
 100:Core/Src/main.c ****     {
 101:Core/Src/main.c ****        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 102:Core/Src/main.c ****        HAL_Delay(1000);
 103:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 104:Core/Src/main.c ****        HAL_Delay(1000);
 105:Core/Src/main.c ****     }
 106:Core/Src/main.c ****     
 107:Core/Src/main.c ****     
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief System Clock Configuration
 114:Core/Src/main.c ****   * @retval None
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** void SystemClock_Config(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 124:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 4


 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief GPIO Initialization Function
 157:Core/Src/main.c ****   * @param None
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** static void MX_GPIO_Init(void)
 161:Core/Src/main.c **** {
  29              		.loc 1 161 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 32
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 162:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 162 0
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
  49              	.LBB4:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 165:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 165 0
  51 0010 0094     		str	r4, [sp]
  52 0012 194B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F00402 		and	r2, r2, #4
  58 0022 0092     		str	r2, [sp]
  59 0024 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              	.LBB5:
 166:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  62              		.loc 1 166 0
  63 0026 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 5


  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F08002 		orr	r2, r2, #128
  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F08002 		and	r2, r2, #128
  69 0036 0192     		str	r2, [sp, #4]
  70 0038 019A     		ldr	r2, [sp, #4]
  71              	.LBE5:
  72              	.LBB6:
 167:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 167 0
  74 003a 0294     		str	r4, [sp, #8]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00102 		orr	r2, r2, #1
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1B6B     		ldr	r3, [r3, #48]
  79 0046 03F00103 		and	r3, r3, #1
  80 004a 0293     		str	r3, [sp, #8]
  81 004c 029B     		ldr	r3, [sp, #8]
  82              	.LBE6:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 170:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  83              		.loc 1 170 0
  84 004e 0B4D     		ldr	r5, .L3+4
  85 0050 2246     		mov	r2, r4
  86 0052 4FF40051 		mov	r1, #8192
  87 0056 2846     		mov	r0, r5
  88 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL0:
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 173:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  90              		.loc 1 173 0
  91 005c 4FF40053 		mov	r3, #8192
  92 0060 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 174 0
  94 0062 0123     		movs	r3, #1
  95 0064 0493     		str	r3, [sp, #16]
 175:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  96              		.loc 1 175 0
  97 0066 0594     		str	r4, [sp, #20]
 176:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  98              		.loc 1 176 0
  99 0068 0694     		str	r4, [sp, #24]
 177:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 100              		.loc 1 177 0
 101 006a 03A9     		add	r1, sp, #12
 102 006c 2846     		mov	r0, r5
 103 006e FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** }
 105              		.loc 1 179 0
 106 0072 09B0     		add	sp, sp, #36
 107              	.LCFI2:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 6


 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0074 30BD     		pop	{r4, r5, pc}
 111              	.L4:
 112 0076 00BF     		.align	2
 113              	.L3:
 114 0078 00380240 		.word	1073887232
 115 007c 00080240 		.word	1073874944
 116              		.cfi_endproc
 117              	.LFE132:
 119              		.section	.text.Error_Handler,"ax",%progbits
 120              		.align	2
 121              		.global	Error_Handler
 122              		.thumb
 123              		.thumb_func
 125              	Error_Handler:
 126              	.LFB133:
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /* USER CODE END 4 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void Error_Handler(void)
 190:Core/Src/main.c **** {
 127              		.loc 1 190 0
 128              		.cfi_startproc
 129              		@ Volatile: function does not return.
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133              	.LBB7:
 134              	.LBB8:
 135              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 7


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 8


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 9


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 136              		.loc 2 142 0
 137              		.syntax unified
 138              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 139 0000 72B6     		cpsid i
 140              	@ 0 "" 2
 141              		.thumb
 142              		.syntax unified
 143              	.L6:
 144 0002 FEE7     		b	.L6
 145              	.LBE8:
 146              	.LBE7:
 147              		.cfi_endproc
 148              	.LFE133:
 150              		.section	.text.SystemClock_Config,"ax",%progbits
 151              		.align	2
 152              		.global	SystemClock_Config
 153              		.thumb
 154              		.thumb_func
 156              	SystemClock_Config:
 157              	.LFB131:
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158              		.loc 1 117 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 80
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 00B5     		push	{lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 14, -4
 166 0002 95B0     		sub	sp, sp, #84
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 88
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169              		.loc 1 118 0
 170 0004 3022     		movs	r2, #48
 171 0006 0021     		movs	r1, #0
 172 0008 08A8     		add	r0, sp, #32
 173 000a FFF7FEFF 		bl	memset
 174              	.LVL2:
 119:Core/Src/main.c **** 
 175              		.loc 1 119 0
 176 000e 0023     		movs	r3, #0
 177 0010 0393     		str	r3, [sp, #12]
 178 0012 0493     		str	r3, [sp, #16]
 179 0014 0593     		str	r3, [sp, #20]
 180 0016 0693     		str	r3, [sp, #24]
 181 0018 0793     		str	r3, [sp, #28]
 182              	.LBB9:
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 10


 183              		.loc 1 123 0
 184 001a 0193     		str	r3, [sp, #4]
 185 001c 204A     		ldr	r2, .L11
 186 001e 116C     		ldr	r1, [r2, #64]
 187 0020 41F08051 		orr	r1, r1, #268435456
 188 0024 1164     		str	r1, [r2, #64]
 189 0026 126C     		ldr	r2, [r2, #64]
 190 0028 02F08052 		and	r2, r2, #268435456
 191 002c 0192     		str	r2, [sp, #4]
 192 002e 019A     		ldr	r2, [sp, #4]
 193              	.LBE9:
 194              	.LBB10:
 124:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 195              		.loc 1 124 0
 196 0030 0293     		str	r3, [sp, #8]
 197 0032 1C4A     		ldr	r2, .L11+4
 198 0034 1368     		ldr	r3, [r2]
 199 0036 23F44043 		bic	r3, r3, #49152
 200 003a 43F40043 		orr	r3, r3, #32768
 201 003e 1360     		str	r3, [r2]
 202 0040 1368     		ldr	r3, [r2]
 203 0042 03F44043 		and	r3, r3, #49152
 204 0046 0293     		str	r3, [sp, #8]
 205 0048 029B     		ldr	r3, [sp, #8]
 206              	.LBE10:
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 207              		.loc 1 128 0
 208 004a 0123     		movs	r3, #1
 209 004c 0893     		str	r3, [sp, #32]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 210              		.loc 1 129 0
 211 004e 4FF48033 		mov	r3, #65536
 212 0052 0993     		str	r3, [sp, #36]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 213              		.loc 1 130 0
 214 0054 0223     		movs	r3, #2
 215 0056 0E93     		str	r3, [sp, #56]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 216              		.loc 1 131 0
 217 0058 4FF48002 		mov	r2, #4194304
 218 005c 0F92     		str	r2, [sp, #60]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 219              		.loc 1 132 0
 220 005e 1922     		movs	r2, #25
 221 0060 1092     		str	r2, [sp, #64]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 222              		.loc 1 133 0
 223 0062 A822     		movs	r2, #168
 224 0064 1192     		str	r2, [sp, #68]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 225              		.loc 1 134 0
 226 0066 1293     		str	r3, [sp, #72]
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 227              		.loc 1 135 0
 228 0068 0423     		movs	r3, #4
 229 006a 1393     		str	r3, [sp, #76]
 136:Core/Src/main.c ****   {
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 11


 230              		.loc 1 136 0
 231 006c 08A8     		add	r0, sp, #32
 232 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 233              	.LVL3:
 234 0072 08B1     		cbz	r0, .L8
 138:Core/Src/main.c ****   }
 235              		.loc 1 138 0
 236 0074 FFF7FEFF 		bl	Error_Handler
 237              	.LVL4:
 238              	.L8:
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 239              		.loc 1 142 0
 240 0078 0F23     		movs	r3, #15
 241 007a 0393     		str	r3, [sp, #12]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 242              		.loc 1 144 0
 243 007c 0221     		movs	r1, #2
 244 007e 0491     		str	r1, [sp, #16]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 245              		.loc 1 145 0
 246 0080 0023     		movs	r3, #0
 247 0082 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 248              		.loc 1 146 0
 249 0084 4FF48052 		mov	r2, #4096
 250 0088 0692     		str	r2, [sp, #24]
 147:Core/Src/main.c **** 
 251              		.loc 1 147 0
 252 008a 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   {
 253              		.loc 1 149 0
 254 008c 03A8     		add	r0, sp, #12
 255 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 256              	.LVL5:
 257 0092 08B1     		cbz	r0, .L7
 151:Core/Src/main.c ****   }
 258              		.loc 1 151 0
 259 0094 FFF7FEFF 		bl	Error_Handler
 260              	.LVL6:
 261              	.L7:
 153:Core/Src/main.c **** 
 262              		.loc 1 153 0
 263 0098 15B0     		add	sp, sp, #84
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 4
 266              		@ sp needed
 267 009a 5DF804FB 		ldr	pc, [sp], #4
 268              	.L12:
 269 009e 00BF     		.align	2
 270              	.L11:
 271 00a0 00380240 		.word	1073887232
 272 00a4 00700040 		.word	1073770496
 273              		.cfi_endproc
 274              	.LFE131:
 276              		.section	.text.main,"ax",%progbits
 277              		.align	2
 278              		.global	main
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 12


 279              		.thumb
 280              		.thumb_func
 282              	main:
 283              	.LFB130:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 284              		.loc 1 65 0
 285              		.cfi_startproc
 286              		@ Volatile: function does not return.
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 08B5     		push	{r3, lr}
 290              	.LCFI6:
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 294              		.loc 1 73 0
 295 0002 FFF7FEFF 		bl	HAL_Init
 296              	.LVL7:
  80:Core/Src/main.c **** 
 297              		.loc 1 80 0
 298 0006 FFF7FEFF 		bl	SystemClock_Config
 299              	.LVL8:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 300              		.loc 1 87 0
 301 000a FFF7FEFF 		bl	MX_GPIO_Init
 302              	.LVL9:
 303              	.L14:
 101:Core/Src/main.c ****        HAL_Delay(1000);
 304              		.loc 1 101 0 discriminator 1
 305 000e 0B4C     		ldr	r4, .L16
 306 0010 0022     		movs	r2, #0
 307 0012 4FF40051 		mov	r1, #8192
 308 0016 2046     		mov	r0, r4
 309 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 310              	.LVL10:
 102:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 311              		.loc 1 102 0 discriminator 1
 312 001c 4FF47A70 		mov	r0, #1000
 313 0020 FFF7FEFF 		bl	HAL_Delay
 314              	.LVL11:
 103:Core/Src/main.c ****        HAL_Delay(1000);
 315              		.loc 1 103 0 discriminator 1
 316 0024 0122     		movs	r2, #1
 317 0026 4FF40051 		mov	r1, #8192
 318 002a 2046     		mov	r0, r4
 319 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 320              	.LVL12:
 104:Core/Src/main.c ****     }
 321              		.loc 1 104 0 discriminator 1
 322 0030 4FF47A70 		mov	r0, #1000
 323 0034 FFF7FEFF 		bl	HAL_Delay
 324              	.LVL13:
 325 0038 E9E7     		b	.L14
 326              	.L17:
 327 003a 00BF     		.align	2
 328              	.L16:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 13


 329 003c 00080240 		.word	1073874944
 330              		.cfi_endproc
 331              	.LFE130:
 333              		.text
 334              	.Letext0:
 335              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 336              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 337              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 338              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 339              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 340              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 341              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 342              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 343              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccXiUPWa.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:114    .text.MX_GPIO_Init:00000078 $d
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:120    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:125    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:151    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:156    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:271    .text.SystemClock_Config:000000a0 $d
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:277    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:282    .text.main:00000000 main
C:\Users\master\AppData\Local\Temp\ccXiUPWa.s:329    .text.main:0000003c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
