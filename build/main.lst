ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB133:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "mysetp.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_SPI1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 3


  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_SPI1_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****     while (1)
 103:Core/Src/main.c ****     {
 104:Core/Src/main.c ****             setp();
 105:Core/Src/main.c ****     }
 106:Core/Src/main.c ****     
 107:Core/Src/main.c ****     
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief System Clock Configuration
 114:Core/Src/main.c ****   * @retval None
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** void SystemClock_Config(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 124:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 4


 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 157:Core/Src/main.c ****   * @param None
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** static void MX_SPI1_Init(void)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 170:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 171:Core/Src/main.c ****   hspi1.Instance = SPI1;
 172:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 173:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 174:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 175:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 176:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 177:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 178:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 179:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 180:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 181:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 182:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 183:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief GPIO Initialization Function
 195:Core/Src/main.c ****   * @param None
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** static void MX_GPIO_Init(void)
 199:Core/Src/main.c **** {
  29              		.loc 1 199 0
  30              		.cfi_startproc
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 5


  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
  42 0004 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 200:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 200 0
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
  52              	.LBB4:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 203:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 203 0
  54 0012 0194     		str	r4, [sp, #4]
  55 0014 304B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59 001e 1A6B     		ldr	r2, [r3, #48]
  60 0020 02F00402 		and	r2, r2, #4
  61 0024 0192     		str	r2, [sp, #4]
  62 0026 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              	.LBB5:
 204:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 204 0
  66 0028 0294     		str	r4, [sp, #8]
  67 002a 1A6B     		ldr	r2, [r3, #48]
  68 002c 42F08002 		orr	r2, r2, #128
  69 0030 1A63     		str	r2, [r3, #48]
  70 0032 1A6B     		ldr	r2, [r3, #48]
  71 0034 02F08002 		and	r2, r2, #128
  72 0038 0292     		str	r2, [sp, #8]
  73 003a 029A     		ldr	r2, [sp, #8]
  74              	.LBE5:
  75              	.LBB6:
 205:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  76              		.loc 1 205 0
  77 003c 0394     		str	r4, [sp, #12]
  78 003e 1A6B     		ldr	r2, [r3, #48]
  79 0040 42F00102 		orr	r2, r2, #1
  80 0044 1A63     		str	r2, [r3, #48]
  81 0046 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 6


  82 0048 02F00102 		and	r2, r2, #1
  83 004c 0392     		str	r2, [sp, #12]
  84 004e 039A     		ldr	r2, [sp, #12]
  85              	.LBE6:
  86              	.LBB7:
 206:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 206 0
  88 0050 0494     		str	r4, [sp, #16]
  89 0052 1A6B     		ldr	r2, [r3, #48]
  90 0054 42F00202 		orr	r2, r2, #2
  91 0058 1A63     		str	r2, [r3, #48]
  92 005a 1B6B     		ldr	r3, [r3, #48]
  93 005c 03F00203 		and	r3, r3, #2
  94 0060 0493     		str	r3, [sp, #16]
  95 0062 049B     		ldr	r3, [sp, #16]
  96              	.LBE7:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 209:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  97              		.loc 1 209 0
  98 0064 1D4E     		ldr	r6, .L3+4
  99 0066 2246     		mov	r2, r4
 100 0068 4FF40051 		mov	r1, #8192
 101 006c 3046     		mov	r0, r6
 102 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL0:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 212:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_DC_GPIO_Port, OLED_DC_Pin, GPIO_PIN_RESET);
 104              		.loc 1 212 0
 105 0072 DFF87080 		ldr	r8, .L3+12
 106 0076 2246     		mov	r2, r4
 107 0078 4021     		movs	r1, #64
 108 007a 4046     		mov	r0, r8
 109 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL1:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 215:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_RST_GPIO_Port, OLED_RST_Pin, GPIO_PIN_SET);
 111              		.loc 1 215 0
 112 0080 174D     		ldr	r5, .L3+8
 113 0082 0122     		movs	r2, #1
 114 0084 1146     		mov	r1, r2
 115 0086 2846     		mov	r0, r5
 116 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL2:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 218:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_CS_GPIO_Port, OLED_CS_Pin, GPIO_PIN_RESET);
 118              		.loc 1 218 0
 119 008c 2246     		mov	r2, r4
 120 008e 0221     		movs	r1, #2
 121 0090 2846     		mov	r0, r5
 122 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL3:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 7


 221:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 124              		.loc 1 221 0
 125 0096 4FF40053 		mov	r3, #8192
 126 009a 0593     		str	r3, [sp, #20]
 222:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 127              		.loc 1 222 0
 128 009c 0127     		movs	r7, #1
 129 009e 0697     		str	r7, [sp, #24]
 223:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 223 0
 131 00a0 0794     		str	r4, [sp, #28]
 224:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 224 0
 133 00a2 0894     		str	r4, [sp, #32]
 225:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 134              		.loc 1 225 0
 135 00a4 05A9     		add	r1, sp, #20
 136 00a6 3046     		mov	r0, r6
 137 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL4:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /*Configure GPIO pin : OLED_DC_Pin */
 228:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_DC_Pin;
 139              		.loc 1 228 0
 140 00ac 4023     		movs	r3, #64
 141 00ae 0593     		str	r3, [sp, #20]
 229:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 229 0
 143 00b0 0697     		str	r7, [sp, #24]
 230:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 230 0
 145 00b2 0794     		str	r4, [sp, #28]
 231:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 146              		.loc 1 231 0
 147 00b4 0326     		movs	r6, #3
 148 00b6 0896     		str	r6, [sp, #32]
 232:Core/Src/main.c ****   HAL_GPIO_Init(OLED_DC_GPIO_Port, &GPIO_InitStruct);
 149              		.loc 1 232 0
 150 00b8 05A9     		add	r1, sp, #20
 151 00ba 4046     		mov	r0, r8
 152 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL5:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pins : OLED_RST_Pin OLED_CS_Pin */
 235:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_RST_Pin|OLED_CS_Pin;
 154              		.loc 1 235 0
 155 00c0 0596     		str	r6, [sp, #20]
 236:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 156              		.loc 1 236 0
 157 00c2 0697     		str	r7, [sp, #24]
 237:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 237 0
 159 00c4 0794     		str	r4, [sp, #28]
 238:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 160              		.loc 1 238 0
 161 00c6 0896     		str	r6, [sp, #32]
 239:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 8


 162              		.loc 1 239 0
 163 00c8 05A9     		add	r1, sp, #20
 164 00ca 2846     		mov	r0, r5
 165 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL6:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 167              		.loc 1 241 0
 168 00d0 0AB0     		add	sp, sp, #40
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 24
 171              		@ sp needed
 172 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 173              	.L4:
 174 00d6 00BF     		.align	2
 175              	.L3:
 176 00d8 00380240 		.word	1073887232
 177 00dc 00080240 		.word	1073874944
 178 00e0 00040240 		.word	1073873920
 179 00e4 00000240 		.word	1073872896
 180              		.cfi_endproc
 181              	.LFE133:
 183              		.section	.text.Error_Handler,"ax",%progbits
 184              		.align	2
 185              		.global	Error_Handler
 186              		.thumb
 187              		.thumb_func
 189              	Error_Handler:
 190              	.LFB134:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /* USER CODE END 4 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** void Error_Handler(void)
 252:Core/Src/main.c **** {
 191              		.loc 1 252 0
 192              		.cfi_startproc
 193              		@ Volatile: function does not return.
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LBB8:
 198              	.LBB9:
 199              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 9


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 10


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 11


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 200              		.loc 2 142 0
 201              		.syntax unified
 202              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0000 72B6     		cpsid i
 204              	@ 0 "" 2
 205              		.thumb
 206              		.syntax unified
 207              	.L6:
 208 0002 FEE7     		b	.L6
 209              	.LBE9:
 210              	.LBE8:
 211              		.cfi_endproc
 212              	.LFE134:
 214              		.section	.text.MX_SPI1_Init,"ax",%progbits
 215              		.align	2
 216              		.thumb
 217              		.thumb_func
 219              	MX_SPI1_Init:
 220              	.LFB132:
 161:Core/Src/main.c **** 
 221              		.loc 1 161 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI3:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 171:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 230              		.loc 1 171 0
 231 0002 0D48     		ldr	r0, .L10
 232 0004 0D4B     		ldr	r3, .L10+4
 233 0006 0360     		str	r3, [r0]
 172:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 234              		.loc 1 172 0
 235 0008 4FF48273 		mov	r3, #260
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 12


 236 000c 4360     		str	r3, [r0, #4]
 173:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 237              		.loc 1 173 0
 238 000e 0023     		movs	r3, #0
 239 0010 8360     		str	r3, [r0, #8]
 174:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 240              		.loc 1 174 0
 241 0012 C360     		str	r3, [r0, #12]
 175:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 242              		.loc 1 175 0
 243 0014 0361     		str	r3, [r0, #16]
 176:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 244              		.loc 1 176 0
 245 0016 4361     		str	r3, [r0, #20]
 177:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 246              		.loc 1 177 0
 247 0018 4FF40072 		mov	r2, #512
 248 001c 8261     		str	r2, [r0, #24]
 178:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 249              		.loc 1 178 0
 250 001e 3822     		movs	r2, #56
 251 0020 C261     		str	r2, [r0, #28]
 179:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 252              		.loc 1 179 0
 253 0022 0362     		str	r3, [r0, #32]
 180:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 254              		.loc 1 180 0
 255 0024 4362     		str	r3, [r0, #36]
 181:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 256              		.loc 1 181 0
 257 0026 8362     		str	r3, [r0, #40]
 182:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 258              		.loc 1 182 0
 259 0028 0A23     		movs	r3, #10
 260 002a C362     		str	r3, [r0, #44]
 183:Core/Src/main.c ****   {
 261              		.loc 1 183 0
 262 002c FFF7FEFF 		bl	HAL_SPI_Init
 263              	.LVL7:
 264 0030 08B1     		cbz	r0, .L7
 185:Core/Src/main.c ****   }
 265              		.loc 1 185 0
 266 0032 FFF7FEFF 		bl	Error_Handler
 267              	.LVL8:
 268              	.L7:
 269 0036 08BD     		pop	{r3, pc}
 270              	.L11:
 271              		.align	2
 272              	.L10:
 273 0038 00000000 		.word	hspi1
 274 003c 00300140 		.word	1073819648
 275              		.cfi_endproc
 276              	.LFE132:
 278              		.section	.text.SystemClock_Config,"ax",%progbits
 279              		.align	2
 280              		.global	SystemClock_Config
 281              		.thumb
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 13


 282              		.thumb_func
 284              	SystemClock_Config:
 285              	.LFB131:
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 286              		.loc 1 117 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 80
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 00B5     		push	{lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 14, -4
 294 0002 95B0     		sub	sp, sp, #84
 295              	.LCFI5:
 296              		.cfi_def_cfa_offset 88
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 297              		.loc 1 118 0
 298 0004 3022     		movs	r2, #48
 299 0006 0021     		movs	r1, #0
 300 0008 08A8     		add	r0, sp, #32
 301 000a FFF7FEFF 		bl	memset
 302              	.LVL9:
 119:Core/Src/main.c **** 
 303              		.loc 1 119 0
 304 000e 0023     		movs	r3, #0
 305 0010 0393     		str	r3, [sp, #12]
 306 0012 0493     		str	r3, [sp, #16]
 307 0014 0593     		str	r3, [sp, #20]
 308 0016 0693     		str	r3, [sp, #24]
 309 0018 0793     		str	r3, [sp, #28]
 310              	.LBB10:
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 311              		.loc 1 123 0
 312 001a 0193     		str	r3, [sp, #4]
 313 001c 204A     		ldr	r2, .L16
 314 001e 116C     		ldr	r1, [r2, #64]
 315 0020 41F08051 		orr	r1, r1, #268435456
 316 0024 1164     		str	r1, [r2, #64]
 317 0026 126C     		ldr	r2, [r2, #64]
 318 0028 02F08052 		and	r2, r2, #268435456
 319 002c 0192     		str	r2, [sp, #4]
 320 002e 019A     		ldr	r2, [sp, #4]
 321              	.LBE10:
 322              	.LBB11:
 124:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 323              		.loc 1 124 0
 324 0030 0293     		str	r3, [sp, #8]
 325 0032 1C4A     		ldr	r2, .L16+4
 326 0034 1368     		ldr	r3, [r2]
 327 0036 23F44043 		bic	r3, r3, #49152
 328 003a 43F40043 		orr	r3, r3, #32768
 329 003e 1360     		str	r3, [r2]
 330 0040 1368     		ldr	r3, [r2]
 331 0042 03F44043 		and	r3, r3, #49152
 332 0046 0293     		str	r3, [sp, #8]
 333 0048 029B     		ldr	r3, [sp, #8]
 334              	.LBE11:
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 14


 128:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 335              		.loc 1 128 0
 336 004a 0123     		movs	r3, #1
 337 004c 0893     		str	r3, [sp, #32]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 338              		.loc 1 129 0
 339 004e 4FF48033 		mov	r3, #65536
 340 0052 0993     		str	r3, [sp, #36]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 341              		.loc 1 130 0
 342 0054 0223     		movs	r3, #2
 343 0056 0E93     		str	r3, [sp, #56]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 344              		.loc 1 131 0
 345 0058 4FF48002 		mov	r2, #4194304
 346 005c 0F92     		str	r2, [sp, #60]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 347              		.loc 1 132 0
 348 005e 1922     		movs	r2, #25
 349 0060 1092     		str	r2, [sp, #64]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 350              		.loc 1 133 0
 351 0062 A822     		movs	r2, #168
 352 0064 1192     		str	r2, [sp, #68]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 353              		.loc 1 134 0
 354 0066 1293     		str	r3, [sp, #72]
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 355              		.loc 1 135 0
 356 0068 0423     		movs	r3, #4
 357 006a 1393     		str	r3, [sp, #76]
 136:Core/Src/main.c ****   {
 358              		.loc 1 136 0
 359 006c 08A8     		add	r0, sp, #32
 360 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 361              	.LVL10:
 362 0072 08B1     		cbz	r0, .L13
 138:Core/Src/main.c ****   }
 363              		.loc 1 138 0
 364 0074 FFF7FEFF 		bl	Error_Handler
 365              	.LVL11:
 366              	.L13:
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 367              		.loc 1 142 0
 368 0078 0F23     		movs	r3, #15
 369 007a 0393     		str	r3, [sp, #12]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 370              		.loc 1 144 0
 371 007c 0221     		movs	r1, #2
 372 007e 0491     		str	r1, [sp, #16]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 373              		.loc 1 145 0
 374 0080 0023     		movs	r3, #0
 375 0082 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 376              		.loc 1 146 0
 377 0084 4FF48052 		mov	r2, #4096
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 15


 378 0088 0692     		str	r2, [sp, #24]
 147:Core/Src/main.c **** 
 379              		.loc 1 147 0
 380 008a 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   {
 381              		.loc 1 149 0
 382 008c 03A8     		add	r0, sp, #12
 383 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 384              	.LVL12:
 385 0092 08B1     		cbz	r0, .L12
 151:Core/Src/main.c ****   }
 386              		.loc 1 151 0
 387 0094 FFF7FEFF 		bl	Error_Handler
 388              	.LVL13:
 389              	.L12:
 153:Core/Src/main.c **** 
 390              		.loc 1 153 0
 391 0098 15B0     		add	sp, sp, #84
 392              	.LCFI6:
 393              		.cfi_def_cfa_offset 4
 394              		@ sp needed
 395 009a 5DF804FB 		ldr	pc, [sp], #4
 396              	.L17:
 397 009e 00BF     		.align	2
 398              	.L16:
 399 00a0 00380240 		.word	1073887232
 400 00a4 00700040 		.word	1073770496
 401              		.cfi_endproc
 402              	.LFE131:
 404              		.section	.text.main,"ax",%progbits
 405              		.align	2
 406              		.global	main
 407              		.thumb
 408              		.thumb_func
 410              	main:
 411              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 412              		.loc 1 67 0
 413              		.cfi_startproc
 414              		@ Volatile: function does not return.
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI7:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 422              		.loc 1 75 0
 423 0002 FFF7FEFF 		bl	HAL_Init
 424              	.LVL14:
  82:Core/Src/main.c **** 
 425              		.loc 1 82 0
 426 0006 FFF7FEFF 		bl	SystemClock_Config
 427              	.LVL15:
  89:Core/Src/main.c ****   MX_SPI1_Init();
 428              		.loc 1 89 0
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 16


 429 000a FFF7FEFF 		bl	MX_GPIO_Init
 430              	.LVL16:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 431              		.loc 1 90 0
 432 000e FFF7FEFF 		bl	MX_SPI1_Init
 433              	.LVL17:
 434              	.L19:
 104:Core/Src/main.c ****     }
 435              		.loc 1 104 0 discriminator 1
 436 0012 FFF7FEFF 		bl	setp
 437              	.LVL18:
 438 0016 FCE7     		b	.L19
 439              		.cfi_endproc
 440              	.LFE130:
 442              		.comm	hspi1,88,4
 443              		.text
 444              	.Letext0:
 445              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 446              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 447              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 448              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 449              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 450              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 451              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 452              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 453              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 454              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 455              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 456              		.file 14 "Core/Inc/mysetp.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\cccIViEk.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\cccIViEk.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cccIViEk.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\cccIViEk.s:176    .text.MX_GPIO_Init:000000d8 $d
C:\Users\master\AppData\Local\Temp\cccIViEk.s:184    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cccIViEk.s:189    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\cccIViEk.s:215    .text.MX_SPI1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cccIViEk.s:219    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\master\AppData\Local\Temp\cccIViEk.s:273    .text.MX_SPI1_Init:00000038 $d
                            *COM*:00000058 hspi1
C:\Users\master\AppData\Local\Temp\cccIViEk.s:279    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\cccIViEk.s:284    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\cccIViEk.s:399    .text.SystemClock_Config:000000a0 $d
C:\Users\master\AppData\Local\Temp\cccIViEk.s:405    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\cccIViEk.s:410    .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
setp
