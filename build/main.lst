ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB133:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_I2C1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 3


  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_I2C1_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****     while (1)
 103:Core/Src/main.c ****     {
 104:Core/Src/main.c ****        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 105:Core/Src/main.c ****        HAL_Delay(1000);
 106:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 107:Core/Src/main.c ****        HAL_Delay(1000);
 108:Core/Src/main.c ****     }
 109:Core/Src/main.c ****     
 110:Core/Src/main.c ****     
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief System Clock Configuration
 117:Core/Src/main.c ****   * @retval None
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c **** void SystemClock_Config(void)
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 144:Core/Src/main.c ****   */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 4


 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 160:Core/Src/main.c ****   * @param None
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** static void MX_I2C1_Init(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 173:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 174:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 175:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 176:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 177:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 178:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 179:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 180:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 181:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 182:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief GPIO Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_GPIO_Init(void)
 198:Core/Src/main.c **** {
  29              		.loc 1 198 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 5


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 199:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 199 0
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
  49              	.LBB4:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 202:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 202 0
  51 0010 0194     		str	r4, [sp, #4]
  52 0012 1E4B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F00402 		and	r2, r2, #4
  58 0022 0192     		str	r2, [sp, #4]
  59 0024 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              	.LBB5:
 203:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  62              		.loc 1 203 0
  63 0026 0294     		str	r4, [sp, #8]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F08002 		orr	r2, r2, #128
  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F08002 		and	r2, r2, #128
  69 0036 0292     		str	r2, [sp, #8]
  70 0038 029A     		ldr	r2, [sp, #8]
  71              	.LBE5:
  72              	.LBB6:
 204:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 204 0
  74 003a 0394     		str	r4, [sp, #12]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00102 		orr	r2, r2, #1
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F00102 		and	r2, r2, #1
  80 004a 0392     		str	r2, [sp, #12]
  81 004c 039A     		ldr	r2, [sp, #12]
  82              	.LBE6:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 6


  83              	.LBB7:
 205:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 205 0
  85 004e 0494     		str	r4, [sp, #16]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 42F00202 		orr	r2, r2, #2
  88 0056 1A63     		str	r2, [r3, #48]
  89 0058 1B6B     		ldr	r3, [r3, #48]
  90 005a 03F00203 		and	r3, r3, #2
  91 005e 0493     		str	r3, [sp, #16]
  92 0060 049B     		ldr	r3, [sp, #16]
  93              	.LBE7:
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  94              		.loc 1 208 0
  95 0062 0B4D     		ldr	r5, .L3+4
  96 0064 2246     		mov	r2, r4
  97 0066 4FF40051 		mov	r1, #8192
  98 006a 2846     		mov	r0, r5
  99 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 211:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 101              		.loc 1 211 0
 102 0070 4FF40053 		mov	r3, #8192
 103 0074 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 212 0
 105 0076 0123     		movs	r3, #1
 106 0078 0693     		str	r3, [sp, #24]
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 213 0
 108 007a 0794     		str	r4, [sp, #28]
 214:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 109              		.loc 1 214 0
 110 007c 0894     		str	r4, [sp, #32]
 215:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 111              		.loc 1 215 0
 112 007e 05A9     		add	r1, sp, #20
 113 0080 2846     		mov	r0, r5
 114 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL1:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** }
 116              		.loc 1 217 0
 117 0086 0BB0     		add	sp, sp, #44
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 12
 120              		@ sp needed
 121 0088 30BD     		pop	{r4, r5, pc}
 122              	.L4:
 123 008a 00BF     		.align	2
 124              	.L3:
 125 008c 00380240 		.word	1073887232
 126 0090 00080240 		.word	1073874944
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 7


 127              		.cfi_endproc
 128              	.LFE133:
 130              		.section	.text.Error_Handler,"ax",%progbits
 131              		.align	2
 132              		.global	Error_Handler
 133              		.thumb
 134              		.thumb_func
 136              	Error_Handler:
 137              	.LFB134:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /* USER CODE END 4 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** void Error_Handler(void)
 228:Core/Src/main.c **** {
 138              		.loc 1 228 0
 139              		.cfi_startproc
 140              		@ Volatile: function does not return.
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LBB8:
 145              	.LBB9:
 146              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 8


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 9


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 10


 147              		.loc 2 142 0
 148              		.syntax unified
 149              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 150 0000 72B6     		cpsid i
 151              	@ 0 "" 2
 152              		.thumb
 153              		.syntax unified
 154              	.L6:
 155 0002 FEE7     		b	.L6
 156              	.LBE9:
 157              	.LBE8:
 158              		.cfi_endproc
 159              	.LFE134:
 161              		.section	.text.MX_I2C1_Init,"ax",%progbits
 162              		.align	2
 163              		.thumb
 164              		.thumb_func
 166              	MX_I2C1_Init:
 167              	.LFB132:
 164:Core/Src/main.c **** 
 168              		.loc 1 164 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 173:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 177              		.loc 1 173 0
 178 0002 0A48     		ldr	r0, .L10
 179 0004 0A4B     		ldr	r3, .L10+4
 180 0006 0360     		str	r3, [r0]
 174:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 181              		.loc 1 174 0
 182 0008 0A4B     		ldr	r3, .L10+8
 183 000a 4360     		str	r3, [r0, #4]
 175:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 184              		.loc 1 175 0
 185 000c 0023     		movs	r3, #0
 186 000e 8360     		str	r3, [r0, #8]
 176:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 187              		.loc 1 176 0
 188 0010 C360     		str	r3, [r0, #12]
 177:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 189              		.loc 1 177 0
 190 0012 4FF48042 		mov	r2, #16384
 191 0016 0261     		str	r2, [r0, #16]
 178:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 192              		.loc 1 178 0
 193 0018 4361     		str	r3, [r0, #20]
 179:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 194              		.loc 1 179 0
 195 001a 8361     		str	r3, [r0, #24]
 180:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 196              		.loc 1 180 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 11


 197 001c C361     		str	r3, [r0, #28]
 181:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 198              		.loc 1 181 0
 199 001e 0362     		str	r3, [r0, #32]
 182:Core/Src/main.c ****   {
 200              		.loc 1 182 0
 201 0020 FFF7FEFF 		bl	HAL_I2C_Init
 202              	.LVL2:
 203 0024 08B1     		cbz	r0, .L7
 184:Core/Src/main.c ****   }
 204              		.loc 1 184 0
 205 0026 FFF7FEFF 		bl	Error_Handler
 206              	.LVL3:
 207              	.L7:
 208 002a 08BD     		pop	{r3, pc}
 209              	.L11:
 210              		.align	2
 211              	.L10:
 212 002c 00000000 		.word	hi2c1
 213 0030 00540040 		.word	1073763328
 214 0034 A0860100 		.word	100000
 215              		.cfi_endproc
 216              	.LFE132:
 218              		.section	.text.SystemClock_Config,"ax",%progbits
 219              		.align	2
 220              		.global	SystemClock_Config
 221              		.thumb
 222              		.thumb_func
 224              	SystemClock_Config:
 225              	.LFB131:
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 226              		.loc 1 120 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 80
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 00B5     		push	{lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 14, -4
 234 0002 95B0     		sub	sp, sp, #84
 235              	.LCFI5:
 236              		.cfi_def_cfa_offset 88
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 237              		.loc 1 121 0
 238 0004 3022     		movs	r2, #48
 239 0006 0021     		movs	r1, #0
 240 0008 08A8     		add	r0, sp, #32
 241 000a FFF7FEFF 		bl	memset
 242              	.LVL4:
 122:Core/Src/main.c **** 
 243              		.loc 1 122 0
 244 000e 0023     		movs	r3, #0
 245 0010 0393     		str	r3, [sp, #12]
 246 0012 0493     		str	r3, [sp, #16]
 247 0014 0593     		str	r3, [sp, #20]
 248 0016 0693     		str	r3, [sp, #24]
 249 0018 0793     		str	r3, [sp, #28]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 12


 250              	.LBB10:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 251              		.loc 1 126 0
 252 001a 0193     		str	r3, [sp, #4]
 253 001c 204A     		ldr	r2, .L16
 254 001e 116C     		ldr	r1, [r2, #64]
 255 0020 41F08051 		orr	r1, r1, #268435456
 256 0024 1164     		str	r1, [r2, #64]
 257 0026 126C     		ldr	r2, [r2, #64]
 258 0028 02F08052 		and	r2, r2, #268435456
 259 002c 0192     		str	r2, [sp, #4]
 260 002e 019A     		ldr	r2, [sp, #4]
 261              	.LBE10:
 262              	.LBB11:
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 263              		.loc 1 127 0
 264 0030 0293     		str	r3, [sp, #8]
 265 0032 1C4A     		ldr	r2, .L16+4
 266 0034 1368     		ldr	r3, [r2]
 267 0036 23F44043 		bic	r3, r3, #49152
 268 003a 43F40043 		orr	r3, r3, #32768
 269 003e 1360     		str	r3, [r2]
 270 0040 1368     		ldr	r3, [r2]
 271 0042 03F44043 		and	r3, r3, #49152
 272 0046 0293     		str	r3, [sp, #8]
 273 0048 029B     		ldr	r3, [sp, #8]
 274              	.LBE11:
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 275              		.loc 1 131 0
 276 004a 0123     		movs	r3, #1
 277 004c 0893     		str	r3, [sp, #32]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 278              		.loc 1 132 0
 279 004e 4FF48033 		mov	r3, #65536
 280 0052 0993     		str	r3, [sp, #36]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 281              		.loc 1 133 0
 282 0054 0223     		movs	r3, #2
 283 0056 0E93     		str	r3, [sp, #56]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 284              		.loc 1 134 0
 285 0058 4FF48002 		mov	r2, #4194304
 286 005c 0F92     		str	r2, [sp, #60]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 287              		.loc 1 135 0
 288 005e 1922     		movs	r2, #25
 289 0060 1092     		str	r2, [sp, #64]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 290              		.loc 1 136 0
 291 0062 A822     		movs	r2, #168
 292 0064 1192     		str	r2, [sp, #68]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 293              		.loc 1 137 0
 294 0066 1293     		str	r3, [sp, #72]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 295              		.loc 1 138 0
 296 0068 0423     		movs	r3, #4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 13


 297 006a 1393     		str	r3, [sp, #76]
 139:Core/Src/main.c ****   {
 298              		.loc 1 139 0
 299 006c 08A8     		add	r0, sp, #32
 300 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 301              	.LVL5:
 302 0072 08B1     		cbz	r0, .L13
 141:Core/Src/main.c ****   }
 303              		.loc 1 141 0
 304 0074 FFF7FEFF 		bl	Error_Handler
 305              	.LVL6:
 306              	.L13:
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 307              		.loc 1 145 0
 308 0078 0F23     		movs	r3, #15
 309 007a 0393     		str	r3, [sp, #12]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 310              		.loc 1 147 0
 311 007c 0221     		movs	r1, #2
 312 007e 0491     		str	r1, [sp, #16]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 313              		.loc 1 148 0
 314 0080 0023     		movs	r3, #0
 315 0082 0593     		str	r3, [sp, #20]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 316              		.loc 1 149 0
 317 0084 4FF48052 		mov	r2, #4096
 318 0088 0692     		str	r2, [sp, #24]
 150:Core/Src/main.c **** 
 319              		.loc 1 150 0
 320 008a 0793     		str	r3, [sp, #28]
 152:Core/Src/main.c ****   {
 321              		.loc 1 152 0
 322 008c 03A8     		add	r0, sp, #12
 323 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 324              	.LVL7:
 325 0092 08B1     		cbz	r0, .L12
 154:Core/Src/main.c ****   }
 326              		.loc 1 154 0
 327 0094 FFF7FEFF 		bl	Error_Handler
 328              	.LVL8:
 329              	.L12:
 156:Core/Src/main.c **** 
 330              		.loc 1 156 0
 331 0098 15B0     		add	sp, sp, #84
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 4
 334              		@ sp needed
 335 009a 5DF804FB 		ldr	pc, [sp], #4
 336              	.L17:
 337 009e 00BF     		.align	2
 338              	.L16:
 339 00a0 00380240 		.word	1073887232
 340 00a4 00700040 		.word	1073770496
 341              		.cfi_endproc
 342              	.LFE131:
 344              		.section	.text.main,"ax",%progbits
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 14


 345              		.align	2
 346              		.global	main
 347              		.thumb
 348              		.thumb_func
 350              	main:
 351              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 352              		.loc 1 67 0
 353              		.cfi_startproc
 354              		@ Volatile: function does not return.
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              	.LCFI7:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 362              		.loc 1 75 0
 363 0002 FFF7FEFF 		bl	HAL_Init
 364              	.LVL9:
  82:Core/Src/main.c **** 
 365              		.loc 1 82 0
 366 0006 FFF7FEFF 		bl	SystemClock_Config
 367              	.LVL10:
  89:Core/Src/main.c ****   MX_I2C1_Init();
 368              		.loc 1 89 0
 369 000a FFF7FEFF 		bl	MX_GPIO_Init
 370              	.LVL11:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 371              		.loc 1 90 0
 372 000e FFF7FEFF 		bl	MX_I2C1_Init
 373              	.LVL12:
 374              	.L19:
 104:Core/Src/main.c ****        HAL_Delay(1000);
 375              		.loc 1 104 0 discriminator 1
 376 0012 0B4C     		ldr	r4, .L21
 377 0014 0022     		movs	r2, #0
 378 0016 4FF40051 		mov	r1, #8192
 379 001a 2046     		mov	r0, r4
 380 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 381              	.LVL13:
 105:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 382              		.loc 1 105 0 discriminator 1
 383 0020 4FF47A70 		mov	r0, #1000
 384 0024 FFF7FEFF 		bl	HAL_Delay
 385              	.LVL14:
 106:Core/Src/main.c ****        HAL_Delay(1000);
 386              		.loc 1 106 0 discriminator 1
 387 0028 0122     		movs	r2, #1
 388 002a 4FF40051 		mov	r1, #8192
 389 002e 2046     		mov	r0, r4
 390 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 391              	.LVL15:
 107:Core/Src/main.c ****     }
 392              		.loc 1 107 0 discriminator 1
 393 0034 4FF47A70 		mov	r0, #1000
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 15


 394 0038 FFF7FEFF 		bl	HAL_Delay
 395              	.LVL16:
 396 003c E9E7     		b	.L19
 397              	.L22:
 398 003e 00BF     		.align	2
 399              	.L21:
 400 0040 00080240 		.word	1073874944
 401              		.cfi_endproc
 402              	.LFE130:
 404              		.comm	hi2c1,84,4
 405              		.text
 406              	.Letext0:
 407              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 408              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 409              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 410              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 411              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 412              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 413              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 414              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 415              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 416              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 417              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccxLSSXY.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:125    .text.MX_GPIO_Init:0000008c $d
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:131    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:136    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:162    .text.MX_I2C1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:166    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:212    .text.MX_I2C1_Init:0000002c $d
                            *COM*:00000054 hi2c1
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:219    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:224    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:339    .text.SystemClock_Config:000000a0 $d
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:345    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:350    .text.main:00000000 main
C:\Users\master\AppData\Local\Temp\ccxLSSXY.s:400    .text.main:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
