ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB139:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "mysetp.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** osThreadId defaultTaskHandle;
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_SPI1_Init(void);
  56:Core/Src/main.c **** static void MX_DMA_Init(void);
  57:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 3


  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_SPI1_Init();
  97:Core/Src/main.c ****   MX_DMA_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 103:Core/Src/main.c ****   /* add mutexes, ... */
 104:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 107:Core/Src/main.c ****   /* add semaphores, ... */
 108:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 111:Core/Src/main.c ****   /* start timers, add new ones, ... */
 112:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 115:Core/Src/main.c ****   /* add queues, ... */
 116:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Create the thread(s) */
 119:Core/Src/main.c ****   /* definition and creation of defaultTask */
 120:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 121:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 124:Core/Src/main.c ****   /* add threads, ... */
 125:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Start scheduler */
 128:Core/Src/main.c ****   osKernelStart();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****     while (1)
 139:Core/Src/main.c ****     {
 140:Core/Src/main.c ****             setp();
 141:Core/Src/main.c ****     }
 142:Core/Src/main.c ****     
 143:Core/Src/main.c ****     
 144:Core/Src/main.c ****   }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 4


 145:Core/Src/main.c ****   /* USER CODE END 3 */
 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief System Clock Configuration
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void SystemClock_Config(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 160:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 161:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 162:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_SPI1_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 5


 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 206:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 207:Core/Src/main.c ****   hspi1.Instance = SPI1;
 208:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 209:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 210:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 211:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 212:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 213:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 214:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 215:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 216:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 217:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 218:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 219:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * Enable DMA controller clock
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** static void MX_DMA_Init(void)
 233:Core/Src/main.c **** {
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* DMA controller clock enable */
 236:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* DMA interrupt init */
 239:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 240:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 241:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /**
 246:Core/Src/main.c ****   * @brief GPIO Initialization Function
 247:Core/Src/main.c ****   * @param None
 248:Core/Src/main.c ****   * @retval None
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c **** static void MX_GPIO_Init(void)
 251:Core/Src/main.c **** {
  29              		.loc 1 251 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 6


  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
  42 0004 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 252:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 252 0
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
  52              	.LBB4:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 255:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 255 0
  54 0012 0194     		str	r4, [sp, #4]
  55 0014 304B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59 001e 1A6B     		ldr	r2, [r3, #48]
  60 0020 02F00402 		and	r2, r2, #4
  61 0024 0192     		str	r2, [sp, #4]
  62 0026 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              	.LBB5:
 256:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 256 0
  66 0028 0294     		str	r4, [sp, #8]
  67 002a 1A6B     		ldr	r2, [r3, #48]
  68 002c 42F08002 		orr	r2, r2, #128
  69 0030 1A63     		str	r2, [r3, #48]
  70 0032 1A6B     		ldr	r2, [r3, #48]
  71 0034 02F08002 		and	r2, r2, #128
  72 0038 0292     		str	r2, [sp, #8]
  73 003a 029A     		ldr	r2, [sp, #8]
  74              	.LBE5:
  75              	.LBB6:
 257:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  76              		.loc 1 257 0
  77 003c 0394     		str	r4, [sp, #12]
  78 003e 1A6B     		ldr	r2, [r3, #48]
  79 0040 42F00102 		orr	r2, r2, #1
  80 0044 1A63     		str	r2, [r3, #48]
  81 0046 1A6B     		ldr	r2, [r3, #48]
  82 0048 02F00102 		and	r2, r2, #1
  83 004c 0392     		str	r2, [sp, #12]
  84 004e 039A     		ldr	r2, [sp, #12]
  85              	.LBE6:
  86              	.LBB7:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 7


 258:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 258 0
  88 0050 0494     		str	r4, [sp, #16]
  89 0052 1A6B     		ldr	r2, [r3, #48]
  90 0054 42F00202 		orr	r2, r2, #2
  91 0058 1A63     		str	r2, [r3, #48]
  92 005a 1B6B     		ldr	r3, [r3, #48]
  93 005c 03F00203 		and	r3, r3, #2
  94 0060 0493     		str	r3, [sp, #16]
  95 0062 049B     		ldr	r3, [sp, #16]
  96              	.LBE7:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 261:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  97              		.loc 1 261 0
  98 0064 1D4E     		ldr	r6, .L3+4
  99 0066 2246     		mov	r2, r4
 100 0068 4FF40051 		mov	r1, #8192
 101 006c 3046     		mov	r0, r6
 102 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL0:
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 264:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_DC_GPIO_Port, OLED_DC_Pin, GPIO_PIN_RESET);
 104              		.loc 1 264 0
 105 0072 DFF87080 		ldr	r8, .L3+12
 106 0076 2246     		mov	r2, r4
 107 0078 4021     		movs	r1, #64
 108 007a 4046     		mov	r0, r8
 109 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL1:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 267:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_RST_GPIO_Port, OLED_RST_Pin, GPIO_PIN_SET);
 111              		.loc 1 267 0
 112 0080 174D     		ldr	r5, .L3+8
 113 0082 0122     		movs	r2, #1
 114 0084 1146     		mov	r1, r2
 115 0086 2846     		mov	r0, r5
 116 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL2:
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 270:Core/Src/main.c ****   HAL_GPIO_WritePin(OLED_CS_GPIO_Port, OLED_CS_Pin, GPIO_PIN_RESET);
 118              		.loc 1 270 0
 119 008c 2246     		mov	r2, r4
 120 008e 0221     		movs	r1, #2
 121 0090 2846     		mov	r0, r5
 122 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL3:
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 273:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 124              		.loc 1 273 0
 125 0096 4FF40053 		mov	r3, #8192
 126 009a 0593     		str	r3, [sp, #20]
 274:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 8


 127              		.loc 1 274 0
 128 009c 0127     		movs	r7, #1
 129 009e 0697     		str	r7, [sp, #24]
 275:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 275 0
 131 00a0 0794     		str	r4, [sp, #28]
 276:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 276 0
 133 00a2 0894     		str	r4, [sp, #32]
 277:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 134              		.loc 1 277 0
 135 00a4 05A9     		add	r1, sp, #20
 136 00a6 3046     		mov	r0, r6
 137 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL4:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /*Configure GPIO pin : OLED_DC_Pin */
 280:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_DC_Pin;
 139              		.loc 1 280 0
 140 00ac 4023     		movs	r3, #64
 141 00ae 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 281 0
 143 00b0 0697     		str	r7, [sp, #24]
 282:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 282 0
 145 00b2 0794     		str	r4, [sp, #28]
 283:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 146              		.loc 1 283 0
 147 00b4 0326     		movs	r6, #3
 148 00b6 0896     		str	r6, [sp, #32]
 284:Core/Src/main.c ****   HAL_GPIO_Init(OLED_DC_GPIO_Port, &GPIO_InitStruct);
 149              		.loc 1 284 0
 150 00b8 05A9     		add	r1, sp, #20
 151 00ba 4046     		mov	r0, r8
 152 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL5:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pins : OLED_RST_Pin OLED_CS_Pin */
 287:Core/Src/main.c ****   GPIO_InitStruct.Pin = OLED_RST_Pin|OLED_CS_Pin;
 154              		.loc 1 287 0
 155 00c0 0596     		str	r6, [sp, #20]
 288:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 156              		.loc 1 288 0
 157 00c2 0697     		str	r7, [sp, #24]
 289:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 289 0
 159 00c4 0794     		str	r4, [sp, #28]
 290:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 160              		.loc 1 290 0
 161 00c6 0896     		str	r6, [sp, #32]
 291:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 162              		.loc 1 291 0
 163 00c8 05A9     		add	r1, sp, #20
 164 00ca 2846     		mov	r0, r5
 165 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL6:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 9


 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** }
 167              		.loc 1 293 0
 168 00d0 0AB0     		add	sp, sp, #40
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 24
 171              		@ sp needed
 172 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 173              	.L4:
 174 00d6 00BF     		.align	2
 175              	.L3:
 176 00d8 00380240 		.word	1073887232
 177 00dc 00080240 		.word	1073874944
 178 00e0 00040240 		.word	1073873920
 179 00e4 00000240 		.word	1073872896
 180              		.cfi_endproc
 181              	.LFE139:
 183              		.section	.text.MX_DMA_Init,"ax",%progbits
 184              		.align	2
 185              		.thumb
 186              		.thumb_func
 188              	MX_DMA_Init:
 189              	.LFB138:
 233:Core/Src/main.c **** 
 190              		.loc 1 233 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 00B5     		push	{lr}
 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 14, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 16
 201              	.LBB8:
 236:Core/Src/main.c **** 
 202              		.loc 1 236 0
 203 0004 0022     		movs	r2, #0
 204 0006 0192     		str	r2, [sp, #4]
 205 0008 094B     		ldr	r3, .L7
 206 000a 196B     		ldr	r1, [r3, #48]
 207 000c 41F48001 		orr	r1, r1, #4194304
 208 0010 1963     		str	r1, [r3, #48]
 209 0012 1B6B     		ldr	r3, [r3, #48]
 210 0014 03F48003 		and	r3, r3, #4194304
 211 0018 0193     		str	r3, [sp, #4]
 212 001a 019B     		ldr	r3, [sp, #4]
 213              	.LBE8:
 240:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 214              		.loc 1 240 0
 215 001c 0521     		movs	r1, #5
 216 001e 3B20     		movs	r0, #59
 217 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 218              	.LVL7:
 241:Core/Src/main.c **** 
 219              		.loc 1 241 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 10


 220 0024 3B20     		movs	r0, #59
 221 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 222              	.LVL8:
 243:Core/Src/main.c **** 
 223              		.loc 1 243 0
 224 002a 03B0     		add	sp, sp, #12
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 4
 227              		@ sp needed
 228 002c 5DF804FB 		ldr	pc, [sp], #4
 229              	.L8:
 230              		.align	2
 231              	.L7:
 232 0030 00380240 		.word	1073887232
 233              		.cfi_endproc
 234              	.LFE138:
 236              		.section	.text.StartDefaultTask,"ax",%progbits
 237              		.align	2
 238              		.global	StartDefaultTask
 239              		.thumb
 240              		.thumb_func
 242              	StartDefaultTask:
 243              	.LFB140:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /* USER CODE END 4 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 302:Core/Src/main.c ****   * @param  argument: Not used
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 306:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 307:Core/Src/main.c **** {
 244              		.loc 1 307 0
 245              		.cfi_startproc
 246              		@ Volatile: function does not return.
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL9:
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              	.LVL10:
 256              	.L10:
 308:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 309:Core/Src/main.c ****   /* Infinite loop */
 310:Core/Src/main.c ****   for(;;)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     osDelay(1);
 257              		.loc 1 312 0 discriminator 1
 258 0002 0120     		movs	r0, #1
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 11


 259 0004 FFF7FEFF 		bl	osDelay
 260              	.LVL11:
 261 0008 FBE7     		b	.L10
 262              		.cfi_endproc
 263              	.LFE140:
 265 000a 00BF     		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 266              		.align	2
 267              		.global	HAL_TIM_PeriodElapsedCallback
 268              		.thumb
 269              		.thumb_func
 271              	HAL_TIM_PeriodElapsedCallback:
 272              	.LFB141:
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   /* USER CODE END 5 */
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 319:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 320:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 321:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 322:Core/Src/main.c ****   * @param  htim : TIM handle
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 326:Core/Src/main.c **** {
 273              		.loc 1 326 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL12:
 278 0000 08B5     		push	{r3, lr}
 279              	.LCFI7:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 327:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 330:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 283              		.loc 1 330 0
 284 0002 0268     		ldr	r2, [r0]
 285 0004 024B     		ldr	r3, .L15
 286 0006 9A42     		cmp	r2, r3
 287 0008 01D1     		bne	.L12
 331:Core/Src/main.c ****     HAL_IncTick();
 288              		.loc 1 331 0
 289 000a FFF7FEFF 		bl	HAL_IncTick
 290              	.LVL13:
 291              	.L12:
 292 000e 08BD     		pop	{r3, pc}
 293              	.L16:
 294              		.align	2
 295              	.L15:
 296 0010 00000140 		.word	1073807360
 297              		.cfi_endproc
 298              	.LFE141:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 12


 300              		.section	.text.Error_Handler,"ax",%progbits
 301              		.align	2
 302              		.global	Error_Handler
 303              		.thumb
 304              		.thumb_func
 306              	Error_Handler:
 307              	.LFB142:
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /**
 339:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** void Error_Handler(void)
 343:Core/Src/main.c **** {
 308              		.loc 1 343 0
 309              		.cfi_startproc
 310              		@ Volatile: function does not return.
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LBB9:
 315              	.LBB10:
 316              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 13


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 14


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 317              		.loc 2 142 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 15


 318              		.syntax unified
 319              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 320 0000 72B6     		cpsid i
 321              	@ 0 "" 2
 322              		.thumb
 323              		.syntax unified
 324              	.L18:
 325 0002 FEE7     		b	.L18
 326              	.LBE10:
 327              	.LBE9:
 328              		.cfi_endproc
 329              	.LFE142:
 331              		.section	.text.MX_SPI1_Init,"ax",%progbits
 332              		.align	2
 333              		.thumb
 334              		.thumb_func
 336              	MX_SPI1_Init:
 337              	.LFB137:
 197:Core/Src/main.c **** 
 338              		.loc 1 197 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 08B5     		push	{r3, lr}
 343              	.LCFI8:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 3, -8
 346              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 347              		.loc 1 207 0
 348 0002 0D48     		ldr	r0, .L22
 349 0004 0D4B     		ldr	r3, .L22+4
 350 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 351              		.loc 1 208 0
 352 0008 4FF48273 		mov	r3, #260
 353 000c 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 354              		.loc 1 209 0
 355 000e 0023     		movs	r3, #0
 356 0010 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 357              		.loc 1 210 0
 358 0012 C360     		str	r3, [r0, #12]
 211:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 359              		.loc 1 211 0
 360 0014 0361     		str	r3, [r0, #16]
 212:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 361              		.loc 1 212 0
 362 0016 4361     		str	r3, [r0, #20]
 213:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 363              		.loc 1 213 0
 364 0018 4FF40072 		mov	r2, #512
 365 001c 8261     		str	r2, [r0, #24]
 214:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 366              		.loc 1 214 0
 367 001e C361     		str	r3, [r0, #28]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 16


 215:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 368              		.loc 1 215 0
 369 0020 0362     		str	r3, [r0, #32]
 216:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 370              		.loc 1 216 0
 371 0022 4362     		str	r3, [r0, #36]
 217:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 372              		.loc 1 217 0
 373 0024 8362     		str	r3, [r0, #40]
 218:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 374              		.loc 1 218 0
 375 0026 0A23     		movs	r3, #10
 376 0028 C362     		str	r3, [r0, #44]
 219:Core/Src/main.c ****   {
 377              		.loc 1 219 0
 378 002a FFF7FEFF 		bl	HAL_SPI_Init
 379              	.LVL14:
 380 002e 08B1     		cbz	r0, .L19
 221:Core/Src/main.c ****   }
 381              		.loc 1 221 0
 382 0030 FFF7FEFF 		bl	Error_Handler
 383              	.LVL15:
 384              	.L19:
 385 0034 08BD     		pop	{r3, pc}
 386              	.L23:
 387 0036 00BF     		.align	2
 388              	.L22:
 389 0038 00000000 		.word	hspi1
 390 003c 00300140 		.word	1073819648
 391              		.cfi_endproc
 392              	.LFE137:
 394              		.section	.text.SystemClock_Config,"ax",%progbits
 395              		.align	2
 396              		.global	SystemClock_Config
 397              		.thumb
 398              		.thumb_func
 400              	SystemClock_Config:
 401              	.LFB136:
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 402              		.loc 1 153 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 80
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 00B5     		push	{lr}
 407              	.LCFI9:
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 14, -4
 410 0002 95B0     		sub	sp, sp, #84
 411              	.LCFI10:
 412              		.cfi_def_cfa_offset 88
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 413              		.loc 1 154 0
 414 0004 3022     		movs	r2, #48
 415 0006 0021     		movs	r1, #0
 416 0008 08A8     		add	r0, sp, #32
 417 000a FFF7FEFF 		bl	memset
 418              	.LVL16:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 17


 155:Core/Src/main.c **** 
 419              		.loc 1 155 0
 420 000e 0023     		movs	r3, #0
 421 0010 0393     		str	r3, [sp, #12]
 422 0012 0493     		str	r3, [sp, #16]
 423 0014 0593     		str	r3, [sp, #20]
 424 0016 0693     		str	r3, [sp, #24]
 425 0018 0793     		str	r3, [sp, #28]
 426              	.LBB11:
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 427              		.loc 1 159 0
 428 001a 0193     		str	r3, [sp, #4]
 429 001c 204A     		ldr	r2, .L28
 430 001e 116C     		ldr	r1, [r2, #64]
 431 0020 41F08051 		orr	r1, r1, #268435456
 432 0024 1164     		str	r1, [r2, #64]
 433 0026 126C     		ldr	r2, [r2, #64]
 434 0028 02F08052 		and	r2, r2, #268435456
 435 002c 0192     		str	r2, [sp, #4]
 436 002e 019A     		ldr	r2, [sp, #4]
 437              	.LBE11:
 438              	.LBB12:
 160:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 439              		.loc 1 160 0
 440 0030 0293     		str	r3, [sp, #8]
 441 0032 1C4A     		ldr	r2, .L28+4
 442 0034 1368     		ldr	r3, [r2]
 443 0036 23F44043 		bic	r3, r3, #49152
 444 003a 43F40043 		orr	r3, r3, #32768
 445 003e 1360     		str	r3, [r2]
 446 0040 1368     		ldr	r3, [r2]
 447 0042 03F44043 		and	r3, r3, #49152
 448 0046 0293     		str	r3, [sp, #8]
 449 0048 029B     		ldr	r3, [sp, #8]
 450              	.LBE12:
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 451              		.loc 1 164 0
 452 004a 0123     		movs	r3, #1
 453 004c 0893     		str	r3, [sp, #32]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 454              		.loc 1 165 0
 455 004e 4FF48033 		mov	r3, #65536
 456 0052 0993     		str	r3, [sp, #36]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 457              		.loc 1 166 0
 458 0054 0223     		movs	r3, #2
 459 0056 0E93     		str	r3, [sp, #56]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 460              		.loc 1 167 0
 461 0058 4FF48002 		mov	r2, #4194304
 462 005c 0F92     		str	r2, [sp, #60]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 463              		.loc 1 168 0
 464 005e 1922     		movs	r2, #25
 465 0060 1092     		str	r2, [sp, #64]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 466              		.loc 1 169 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 18


 467 0062 A822     		movs	r2, #168
 468 0064 1192     		str	r2, [sp, #68]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 469              		.loc 1 170 0
 470 0066 1293     		str	r3, [sp, #72]
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 471              		.loc 1 171 0
 472 0068 0423     		movs	r3, #4
 473 006a 1393     		str	r3, [sp, #76]
 172:Core/Src/main.c ****   {
 474              		.loc 1 172 0
 475 006c 08A8     		add	r0, sp, #32
 476 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 477              	.LVL17:
 478 0072 08B1     		cbz	r0, .L25
 174:Core/Src/main.c ****   }
 479              		.loc 1 174 0
 480 0074 FFF7FEFF 		bl	Error_Handler
 481              	.LVL18:
 482              	.L25:
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 483              		.loc 1 178 0
 484 0078 0F23     		movs	r3, #15
 485 007a 0393     		str	r3, [sp, #12]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 486              		.loc 1 180 0
 487 007c 0221     		movs	r1, #2
 488 007e 0491     		str	r1, [sp, #16]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 489              		.loc 1 181 0
 490 0080 0023     		movs	r3, #0
 491 0082 0593     		str	r3, [sp, #20]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 492              		.loc 1 182 0
 493 0084 4FF48052 		mov	r2, #4096
 494 0088 0692     		str	r2, [sp, #24]
 183:Core/Src/main.c **** 
 495              		.loc 1 183 0
 496 008a 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   {
 497              		.loc 1 185 0
 498 008c 03A8     		add	r0, sp, #12
 499 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 500              	.LVL19:
 501 0092 08B1     		cbz	r0, .L24
 187:Core/Src/main.c ****   }
 502              		.loc 1 187 0
 503 0094 FFF7FEFF 		bl	Error_Handler
 504              	.LVL20:
 505              	.L24:
 189:Core/Src/main.c **** 
 506              		.loc 1 189 0
 507 0098 15B0     		add	sp, sp, #84
 508              	.LCFI11:
 509              		.cfi_def_cfa_offset 4
 510              		@ sp needed
 511 009a 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 19


 512              	.L29:
 513 009e 00BF     		.align	2
 514              	.L28:
 515 00a0 00380240 		.word	1073887232
 516 00a4 00700040 		.word	1073770496
 517              		.cfi_endproc
 518              	.LFE136:
 520              		.section	.text.main,"ax",%progbits
 521              		.align	2
 522              		.global	main
 523              		.thumb
 524              		.thumb_func
 526              	main:
 527              	.LFB135:
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 528              		.loc 1 73 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 32
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 0000 30B5     		push	{r4, r5, lr}
 533              	.LCFI12:
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538 0002 89B0     		sub	sp, sp, #36
 539              	.LCFI13:
 540              		.cfi_def_cfa_offset 48
  81:Core/Src/main.c **** 
 541              		.loc 1 81 0
 542 0004 FFF7FEFF 		bl	HAL_Init
 543              	.LVL21:
  88:Core/Src/main.c **** 
 544              		.loc 1 88 0
 545 0008 FFF7FEFF 		bl	SystemClock_Config
 546              	.LVL22:
  95:Core/Src/main.c ****   MX_SPI1_Init();
 547              		.loc 1 95 0
 548 000c FFF7FEFF 		bl	MX_GPIO_Init
 549              	.LVL23:
  96:Core/Src/main.c ****   MX_DMA_Init();
 550              		.loc 1 96 0
 551 0010 FFF7FEFF 		bl	MX_SPI1_Init
 552              	.LVL24:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 553              		.loc 1 97 0
 554 0014 FFF7FEFF 		bl	MX_DMA_Init
 555              	.LVL25:
 120:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 556              		.loc 1 120 0
 557 0018 01AC     		add	r4, sp, #4
 558 001a 094D     		ldr	r5, .L33
 559 001c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 560 001e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 561 0020 95E80700 		ldmia	r5, {r0, r1, r2}
 562 0024 84E80700 		stmia	r4, {r0, r1, r2}
 121:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 20


 563              		.loc 1 121 0
 564 0028 0021     		movs	r1, #0
 565 002a 01A8     		add	r0, sp, #4
 566 002c FFF7FEFF 		bl	osThreadCreate
 567              	.LVL26:
 568 0030 044B     		ldr	r3, .L33+4
 569 0032 1860     		str	r0, [r3]
 128:Core/Src/main.c **** 
 570              		.loc 1 128 0
 571 0034 FFF7FEFF 		bl	osKernelStart
 572              	.LVL27:
 573              	.L31:
 140:Core/Src/main.c ****     }
 574              		.loc 1 140 0 discriminator 1
 575 0038 FFF7FEFF 		bl	setp
 576              	.LVL28:
 577 003c FCE7     		b	.L31
 578              	.L34:
 579 003e 00BF     		.align	2
 580              	.L33:
 581 0040 00000000 		.word	.LANCHOR0
 582 0044 00000000 		.word	defaultTaskHandle
 583              		.cfi_endproc
 584              	.LFE135:
 586              		.comm	defaultTaskHandle,4,4
 587              		.comm	hdma_spi1_tx,96,4
 588              		.comm	hspi1,88,4
 589              		.section	.rodata
 590              		.align	2
 591              		.set	.LANCHOR0,. + 0
 592              	.LC2:
 593 0000 00000000 		.word	.LC0
 594 0004 00000000 		.word	StartDefaultTask
 595 0008 0000     		.short	0
 596 000a 0000     		.space	2
 597 000c 00000000 		.word	0
 598 0010 80000000 		.word	128
 599 0014 00000000 		.word	0
 600 0018 00000000 		.word	0
 601              		.section	.rodata.str1.4,"aMS",%progbits,1
 602              		.align	2
 603              	.LC0:
 604 0000 64656661 		.ascii	"defaultTask\000"
 604      756C7454 
 604      61736B00 
 605              		.text
 606              	.Letext0:
 607              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 608              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 609              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 610              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 611              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 612              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 613              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 614              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 615              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 616              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 21


 617              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 618              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 619              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 620              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 621              		.file 17 "Drivers/CMSIS/Include/core_cm4.h"
 622              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 623              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 624              		.file 20 "Core/Inc/mysetp.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEtcAM7.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:176    .text.MX_GPIO_Init:000000d8 $d
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:184    .text.MX_DMA_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:188    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:232    .text.MX_DMA_Init:00000030 $d
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:237    .text.StartDefaultTask:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:242    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:266    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:271    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:296    .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:301    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:306    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:332    .text.MX_SPI1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:336    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:389    .text.MX_SPI1_Init:00000038 $d
                            *COM*:00000058 hspi1
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:395    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:400    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:515    .text.SystemClock_Config:000000a0 $d
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:521    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:526    .text.main:00000000 main
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:581    .text.main:00000040 $d
                            *COM*:00000004 defaultTaskHandle
                            *COM*:00000060 hdma_spi1_tx
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:590    .rodata:00000000 $d
C:\Users\master\AppData\Local\Temp\ccEtcAM7.s:602    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
osDelay
HAL_IncTick
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
setp
