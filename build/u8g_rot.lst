ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"u8g_rot.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.u8g_dev_rot_dummy_fn,"ax",%progbits
  22              		.align	2
  23              		.global	u8g_dev_rot_dummy_fn
  24              		.thumb
  25              		.thumb_func
  27              	u8g_dev_rot_dummy_fn:
  28              	.LFB0:
  29              		.file 1 "u8glib/u8g_rot.c"
   1:u8glib/u8g_rot.c **** /*
   2:u8glib/u8g_rot.c **** 
   3:u8glib/u8g_rot.c ****   u8g_rot.c
   4:u8glib/u8g_rot.c **** 
   5:u8glib/u8g_rot.c ****   Universal 8bit Graphics Library
   6:u8glib/u8g_rot.c ****   
   7:u8glib/u8g_rot.c ****   Copyright (c) 2011, olikraus@gmail.com
   8:u8glib/u8g_rot.c ****   All rights reserved.
   9:u8glib/u8g_rot.c **** 
  10:u8glib/u8g_rot.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8glib/u8g_rot.c ****   are permitted provided that the following conditions are met:
  12:u8glib/u8g_rot.c **** 
  13:u8glib/u8g_rot.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8glib/u8g_rot.c ****     of conditions and the following disclaimer.
  15:u8glib/u8g_rot.c ****     
  16:u8glib/u8g_rot.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8glib/u8g_rot.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8glib/u8g_rot.c ****     materials provided with the distribution.
  19:u8glib/u8g_rot.c **** 
  20:u8glib/u8g_rot.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8glib/u8g_rot.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8glib/u8g_rot.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8glib/u8g_rot.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8glib/u8g_rot.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8glib/u8g_rot.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8glib/u8g_rot.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8glib/u8g_rot.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8glib/u8g_rot.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8glib/u8g_rot.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 2


  30:u8glib/u8g_rot.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8glib/u8g_rot.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8glib/u8g_rot.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8glib/u8g_rot.c ****   
  34:u8glib/u8g_rot.c ****   
  35:u8glib/u8g_rot.c **** */
  36:u8glib/u8g_rot.c **** 
  37:u8glib/u8g_rot.c **** #include "u8g.h"
  38:u8glib/u8g_rot.c **** 
  39:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot90_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg);
  40:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot180_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg);
  41:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot270_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg);
  42:u8glib/u8g_rot.c **** 
  43:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot_dummy_fn(u8g_t *u8g, u8g_dev_t*dev, uint8_t msg, void *arg)
  44:u8glib/u8g_rot.c **** {
  30              		.loc 1 44 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  45:u8glib/u8g_rot.c ****   return 0;
  46:u8glib/u8g_rot.c **** }
  36              		.loc 1 46 0
  37 0000 0020     		movs	r0, #0
  38              	.LVL1:
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE0:
  43              		.section	.text.u8g_dev_rot90_fn,"ax",%progbits
  44              		.align	2
  45              		.global	u8g_dev_rot90_fn
  46              		.thumb
  47              		.thumb_func
  49              	u8g_dev_rot90_fn:
  50              	.LFB5:
  47:u8glib/u8g_rot.c **** 
  48:u8glib/u8g_rot.c **** u8g_dev_t u8g_dev_rot = { u8g_dev_rot_dummy_fn, NULL, NULL };
  49:u8glib/u8g_rot.c **** 
  50:u8glib/u8g_rot.c **** 
  51:u8glib/u8g_rot.c **** void u8g_UndoRotation(u8g_t *u8g)
  52:u8glib/u8g_rot.c **** {
  53:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
  54:u8glib/u8g_rot.c ****     return;
  55:u8glib/u8g_rot.c ****   u8g->dev = u8g_dev_rot.dev_mem;
  56:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
  57:u8glib/u8g_rot.c **** }
  58:u8glib/u8g_rot.c **** 
  59:u8glib/u8g_rot.c **** void u8g_SetRot90(u8g_t *u8g)
  60:u8glib/u8g_rot.c **** {
  61:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
  62:u8glib/u8g_rot.c ****   {
  63:u8glib/u8g_rot.c ****     u8g_dev_rot.dev_mem = u8g->dev;
  64:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
  65:u8glib/u8g_rot.c ****   }
  66:u8glib/u8g_rot.c ****   u8g_dev_rot.dev_fn = u8g_dev_rot90_fn;
  67:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 3


  68:u8glib/u8g_rot.c **** }
  69:u8glib/u8g_rot.c **** 
  70:u8glib/u8g_rot.c **** void u8g_SetRot180(u8g_t *u8g)
  71:u8glib/u8g_rot.c **** {
  72:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
  73:u8glib/u8g_rot.c ****   {
  74:u8glib/u8g_rot.c ****     u8g_dev_rot.dev_mem = u8g->dev;
  75:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
  76:u8glib/u8g_rot.c ****   }
  77:u8glib/u8g_rot.c ****   u8g_dev_rot.dev_fn = u8g_dev_rot180_fn;
  78:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
  79:u8glib/u8g_rot.c **** }
  80:u8glib/u8g_rot.c **** 
  81:u8glib/u8g_rot.c **** void u8g_SetRot270(u8g_t *u8g)
  82:u8glib/u8g_rot.c **** {
  83:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
  84:u8glib/u8g_rot.c ****   {
  85:u8glib/u8g_rot.c ****     u8g_dev_rot.dev_mem = u8g->dev;
  86:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
  87:u8glib/u8g_rot.c ****   }
  88:u8glib/u8g_rot.c ****   u8g_dev_rot.dev_fn = u8g_dev_rot270_fn;
  89:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
  90:u8glib/u8g_rot.c **** }
  91:u8glib/u8g_rot.c **** 
  92:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot90_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
  93:u8glib/u8g_rot.c **** {
  51              		.loc 1 93 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 8
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL2:
  56 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 24
  59              		.cfi_offset 4, -24
  60              		.cfi_offset 5, -20
  61              		.cfi_offset 6, -16
  62              		.cfi_offset 7, -12
  63              		.cfi_offset 8, -8
  64              		.cfi_offset 14, -4
  65 0004 82B0     		sub	sp, sp, #8
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 32
  68 0006 0646     		mov	r6, r0
  69 0008 1546     		mov	r5, r2
  70 000a 1C46     		mov	r4, r3
  94:u8glib/u8g_rot.c ****   u8g_dev_t *rotation_chain = (u8g_dev_t *)(dev->dev_mem);
  71              		.loc 1 94 0
  72 000c 4F68     		ldr	r7, [r1, #4]
  73              	.LVL3:
  95:u8glib/u8g_rot.c ****   switch(msg)
  74              		.loc 1 95 0
  75 000e A2F11703 		sub	r3, r2, #23
  76              	.LVL4:
  77 0012 302B     		cmp	r3, #48
  78 0014 1AD8     		bhi	.L3
  79 0016 DFE803F0 		tbb	[pc, r3]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 4


  80              	.LVL5:
  81              	.L5:
  82 001a 1F       		.byte	(.L4-.L5)/2
  83 001b 19       		.byte	(.L3-.L5)/2
  84 001c 19       		.byte	(.L3-.L5)/2
  85 001d 19       		.byte	(.L3-.L5)/2
  86 001e 19       		.byte	(.L3-.L5)/2
  87 001f 19       		.byte	(.L3-.L5)/2
  88 0020 19       		.byte	(.L3-.L5)/2
  89 0021 19       		.byte	(.L3-.L5)/2
  90 0022 19       		.byte	(.L3-.L5)/2
  91 0023 19       		.byte	(.L3-.L5)/2
  92 0024 19       		.byte	(.L3-.L5)/2
  93 0025 19       		.byte	(.L3-.L5)/2
  94 0026 19       		.byte	(.L3-.L5)/2
  95 0027 19       		.byte	(.L3-.L5)/2
  96 0028 19       		.byte	(.L3-.L5)/2
  97 0029 19       		.byte	(.L3-.L5)/2
  98 002a 19       		.byte	(.L3-.L5)/2
  99 002b 19       		.byte	(.L3-.L5)/2
 100 002c 19       		.byte	(.L3-.L5)/2
 101 002d 19       		.byte	(.L3-.L5)/2
 102 002e 19       		.byte	(.L3-.L5)/2
 103 002f 40       		.byte	(.L6-.L5)/2
 104 0030 54       		.byte	(.L7-.L5)/2
 105 0031 19       		.byte	(.L3-.L5)/2
 106 0032 19       		.byte	(.L3-.L5)/2
 107 0033 19       		.byte	(.L3-.L5)/2
 108 0034 19       		.byte	(.L3-.L5)/2
 109 0035 40       		.byte	(.L6-.L5)/2
 110 0036 19       		.byte	(.L3-.L5)/2
 111 0037 19       		.byte	(.L3-.L5)/2
 112 0038 19       		.byte	(.L3-.L5)/2
 113 0039 19       		.byte	(.L3-.L5)/2
 114 003a 19       		.byte	(.L3-.L5)/2
 115 003b 19       		.byte	(.L3-.L5)/2
 116 003c 19       		.byte	(.L3-.L5)/2
 117 003d 19       		.byte	(.L3-.L5)/2
 118 003e 54       		.byte	(.L7-.L5)/2
 119 003f 19       		.byte	(.L3-.L5)/2
 120 0040 19       		.byte	(.L3-.L5)/2
 121 0041 19       		.byte	(.L3-.L5)/2
 122 0042 19       		.byte	(.L3-.L5)/2
 123 0043 19       		.byte	(.L3-.L5)/2
 124 0044 19       		.byte	(.L3-.L5)/2
 125 0045 19       		.byte	(.L3-.L5)/2
 126 0046 19       		.byte	(.L3-.L5)/2
 127 0047 19       		.byte	(.L3-.L5)/2
 128 0048 19       		.byte	(.L3-.L5)/2
 129 0049 34       		.byte	(.L8-.L5)/2
 130 004a 3A       		.byte	(.L9-.L5)/2
 131 004b 00       		.p2align 1
 132              	.L3:
  96:u8glib/u8g_rot.c ****   {
  97:u8glib/u8g_rot.c ****     default:
  98:u8glib/u8g_rot.c ****     /*
  99:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_INIT:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 5


 100:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_STOP:
 101:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_FIRST:
 102:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_NEXT:
 103:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_COLOR_ENTRY:
 104:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_XY_CB:
 105:u8glib/u8g_rot.c ****     */
 106:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 133              		.loc 1 106 0
 134 004c 2346     		mov	r3, r4
 135 004e 2A46     		mov	r2, r5
 136 0050 3946     		mov	r1, r7
 137              	.LVL6:
 138 0052 FFF7FEFF 		bl	u8g_call_dev_fn
 139              	.LVL7:
 140 0056 4CE0     		b	.L10
 141              	.LVL8:
 142              	.L4:
 107:u8glib/u8g_rot.c **** #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
 108:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_IS_BBX_INTERSECTION:
 109:u8glib/u8g_rot.c ****       {
 110:u8glib/u8g_rot.c ****         u8g_dev_arg_bbx_t *bbx = (u8g_dev_arg_bbx_t *)arg;
 111:u8glib/u8g_rot.c ****         u8g_uint_t x, y, tmp;
 112:u8glib/u8g_rot.c ****         
 113:u8glib/u8g_rot.c ****         /* transform the reference point */
 114:u8glib/u8g_rot.c ****         y = bbx->x;
 115:u8glib/u8g_rot.c ****         x = u8g->height;
 116:u8glib/u8g_rot.c ****         /* x = u8g_GetWidthLL(u8g, rotation_chain); */
 117:u8glib/u8g_rot.c ****         x -= bbx->y; 
 118:u8glib/u8g_rot.c ****         x--;
 119:u8glib/u8g_rot.c ****         
 120:u8glib/u8g_rot.c ****         /* adjust point to be the uppler left corner again */
 121:u8glib/u8g_rot.c ****         x -= bbx->h;
 122:u8glib/u8g_rot.c ****         x++;
 123:u8glib/u8g_rot.c ****         
 124:u8glib/u8g_rot.c ****         /* swap box dimensions */        
 125:u8glib/u8g_rot.c ****         tmp = bbx->w;
 126:u8glib/u8g_rot.c ****         bbx->w = bbx->h;
 127:u8glib/u8g_rot.c ****         bbx->h = tmp;
 128:u8glib/u8g_rot.c ****         
 129:u8glib/u8g_rot.c ****         /* store x,y */
 130:u8glib/u8g_rot.c ****         bbx->x = x;
 131:u8glib/u8g_rot.c ****         bbx->y = y;
 132:u8glib/u8g_rot.c ****       }
 133:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 134:u8glib/u8g_rot.c **** #endif /* U8G_DEV_MSG_IS_BBX_INTERSECTION */
 135:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_PAGE_BOX:
 136:u8glib/u8g_rot.c ****       /* get page size from next device in the chain */
 137:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 143              		.loc 1 137 0
 144 0058 2346     		mov	r3, r4
 145 005a 2A46     		mov	r2, r5
 146 005c 3946     		mov	r1, r7
 147              	.LVL9:
 148 005e FFF7FEFF 		bl	u8g_call_dev_fn
 149              	.LVL10:
 150              	.LBB2:
 138:u8glib/u8g_rot.c ****       //printf("pre x: %3d..%3d y: %3d..%3d   ", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 6


 139:u8glib/u8g_rot.c ****       {
 140:u8glib/u8g_rot.c **** 	u8g_box_t new_box;
 141:u8glib/u8g_rot.c **** 	//new_box.x0 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y1 - 1;
 142:u8glib/u8g_rot.c **** 	//new_box.x1 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y0 - 1;
 143:u8glib/u8g_rot.c **** 	
 144:u8glib/u8g_rot.c **** 	new_box.x0 = ((u8g_box_t *)arg)->y0;
 151              		.loc 1 144 0
 152 0062 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 153 0064 8DF80430 		strb	r3, [sp, #4]
 145:u8glib/u8g_rot.c **** 	new_box.x1 = ((u8g_box_t *)arg)->y1;
 154              		.loc 1 145 0
 155 0068 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 156 006a 8DF80630 		strb	r3, [sp, #6]
 146:u8glib/u8g_rot.c **** 	new_box.y0 = ((u8g_box_t *)arg)->x0;
 157              		.loc 1 146 0
 158 006e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 159 0070 8DF80530 		strb	r3, [sp, #5]
 147:u8glib/u8g_rot.c **** 	new_box.y1 = ((u8g_box_t *)arg)->x1;
 160              		.loc 1 147 0
 161 0074 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 162 0076 8DF80730 		strb	r3, [sp, #7]
 148:u8glib/u8g_rot.c **** 	*((u8g_box_t *)arg) = new_box;
 163              		.loc 1 148 0
 164 007a 0198     		ldr	r0, [sp, #4]	@ unaligned
 165 007c 2060     		str	r0, [r4]	@ unaligned
 166              	.LBE2:
 149:u8glib/u8g_rot.c **** 	//printf("post x: %3d..%3d y: %3d..%3d\n", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((u8g_b
 150:u8glib/u8g_rot.c ****       }
 151:u8glib/u8g_rot.c ****       break;
 152:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 153:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetHeightLL(u8g,rotation_chain);
 154:u8glib/u8g_rot.c ****       break;
 155:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 156:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetWidthLL(u8g, rotation_chain);
 157:u8glib/u8g_rot.c ****       break;
 158:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 159:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_TPIXEL:
 160:u8glib/u8g_rot.c ****       {
 161:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 162:u8glib/u8g_rot.c ****         y = ((u8g_dev_arg_pixel_t *)arg)->x;
 163:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 164:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 165:u8glib/u8g_rot.c ****         x--;
 166:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 167:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 168:u8glib/u8g_rot.c ****       }
 169:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 170:u8glib/u8g_rot.c ****       break;
 171:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 172:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_4TPIXEL:
 173:u8glib/u8g_rot.c ****       {
 174:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 175:u8glib/u8g_rot.c **** 	//uint16_t x,y;
 176:u8glib/u8g_rot.c ****         y = ((u8g_dev_arg_pixel_t *)arg)->x;
 177:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 178:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 179:u8glib/u8g_rot.c ****         x--;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 7


 180:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 181:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 182:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=1;
 183:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 184:u8glib/u8g_rot.c ****       }
 185:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 186:u8glib/u8g_rot.c ****       break;
 187:u8glib/u8g_rot.c ****   }
 188:u8glib/u8g_rot.c ****   return 1;
 167              		.loc 1 188 0
 168 007e 0120     		movs	r0, #1
 151:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 169              		.loc 1 151 0
 170 0080 37E0     		b	.L10
 171              	.LVL11:
 172              	.L8:
 153:u8glib/u8g_rot.c ****       break;
 173              		.loc 1 153 0
 174 0082 3946     		mov	r1, r7
 175              	.LVL12:
 176 0084 FFF7FEFF 		bl	u8g_GetHeightLL
 177              	.LVL13:
 178 0088 2070     		strb	r0, [r4]
 179              		.loc 1 188 0
 180 008a 0120     		movs	r0, #1
 154:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 181              		.loc 1 154 0
 182 008c 31E0     		b	.L10
 183              	.LVL14:
 184              	.L9:
 156:u8glib/u8g_rot.c ****       break;
 185              		.loc 1 156 0
 186 008e 3946     		mov	r1, r7
 187              	.LVL15:
 188 0090 FFF7FEFF 		bl	u8g_GetWidthLL
 189              	.LVL16:
 190 0094 2070     		strb	r0, [r4]
 191              		.loc 1 188 0
 192 0096 0120     		movs	r0, #1
 157:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 193              		.loc 1 157 0
 194 0098 2BE0     		b	.L10
 195              	.LVL17:
 196              	.L6:
 197              	.LBB3:
 162:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 198              		.loc 1 162 0
 199 009a 94F80080 		ldrb	r8, [r4]	@ zero_extendqisi2
 200              	.LVL18:
 163:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 201              		.loc 1 163 0
 202 009e 3946     		mov	r1, r7
 203              	.LVL19:
 204 00a0 FFF7FEFF 		bl	u8g_GetWidthLL
 205              	.LVL20:
 164:u8glib/u8g_rot.c ****         x--;
 206              		.loc 1 164 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 8


 207 00a4 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 208 00a6 C01A     		subs	r0, r0, r3
 209              	.LVL21:
 210 00a8 C3B2     		uxtb	r3, r0
 211              	.LVL22:
 165:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 212              		.loc 1 165 0
 213 00aa 013B     		subs	r3, r3, #1
 214              	.LVL23:
 166:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 215              		.loc 1 166 0
 216 00ac 2370     		strb	r3, [r4]
 167:u8glib/u8g_rot.c ****       }
 217              		.loc 1 167 0
 218 00ae 84F80180 		strb	r8, [r4, #1]
 219              	.LBE3:
 169:u8glib/u8g_rot.c ****       break;
 220              		.loc 1 169 0
 221 00b2 2346     		mov	r3, r4
 222              	.LVL24:
 223 00b4 2A46     		mov	r2, r5
 224 00b6 3946     		mov	r1, r7
 225 00b8 3046     		mov	r0, r6
 226 00ba FFF7FEFF 		bl	u8g_call_dev_fn
 227              	.LVL25:
 228              		.loc 1 188 0
 229 00be 0120     		movs	r0, #1
 170:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 230              		.loc 1 170 0
 231 00c0 17E0     		b	.L10
 232              	.LVL26:
 233              	.L7:
 234              	.LBB4:
 176:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 235              		.loc 1 176 0
 236 00c2 94F80080 		ldrb	r8, [r4]	@ zero_extendqisi2
 237              	.LVL27:
 177:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 238              		.loc 1 177 0
 239 00c6 3946     		mov	r1, r7
 240              	.LVL28:
 241 00c8 FFF7FEFF 		bl	u8g_GetWidthLL
 242              	.LVL29:
 178:u8glib/u8g_rot.c ****         x--;
 243              		.loc 1 178 0
 244 00cc 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 245 00ce C01A     		subs	r0, r0, r3
 246              	.LVL30:
 247 00d0 C3B2     		uxtb	r3, r0
 248              	.LVL31:
 179:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 249              		.loc 1 179 0
 250 00d2 013B     		subs	r3, r3, #1
 251              	.LVL32:
 180:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 252              		.loc 1 180 0
 253 00d4 2370     		strb	r3, [r4]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 9


 181:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=1;
 254              		.loc 1 181 0
 255 00d6 84F80180 		strb	r8, [r4, #1]
 182:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 256              		.loc 1 182 0
 257 00da E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 258              	.LVL33:
 259 00dc 0133     		adds	r3, r3, #1
 183:u8glib/u8g_rot.c ****       }
 260              		.loc 1 183 0
 261 00de 03F00303 		and	r3, r3, #3
 262 00e2 E370     		strb	r3, [r4, #3]
 263              	.LBE4:
 185:u8glib/u8g_rot.c ****       break;
 264              		.loc 1 185 0
 265 00e4 2346     		mov	r3, r4
 266 00e6 2A46     		mov	r2, r5
 267 00e8 3946     		mov	r1, r7
 268 00ea 3046     		mov	r0, r6
 269 00ec FFF7FEFF 		bl	u8g_call_dev_fn
 270              	.LVL34:
 271              		.loc 1 188 0
 272 00f0 0120     		movs	r0, #1
 273              	.LVL35:
 274              	.L10:
 189:u8glib/u8g_rot.c **** }
 275              		.loc 1 189 0
 276 00f2 02B0     		add	sp, sp, #8
 277              	.LCFI2:
 278              		.cfi_def_cfa_offset 24
 279              		@ sp needed
 280 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 281              		.cfi_endproc
 282              	.LFE5:
 284              		.section	.text.u8g_dev_rot180_fn,"ax",%progbits
 285              		.align	2
 286              		.global	u8g_dev_rot180_fn
 287              		.thumb
 288              		.thumb_func
 290              	u8g_dev_rot180_fn:
 291              	.LFB6:
 190:u8glib/u8g_rot.c **** 
 191:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot180_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
 192:u8glib/u8g_rot.c **** {
 292              		.loc 1 192 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL36:
 297 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 298              	.LCFI3:
 299              		.cfi_def_cfa_offset 24
 300              		.cfi_offset 4, -24
 301              		.cfi_offset 5, -20
 302              		.cfi_offset 6, -16
 303              		.cfi_offset 7, -12
 304              		.cfi_offset 8, -8
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 10


 305              		.cfi_offset 14, -4
 306 0004 82B0     		sub	sp, sp, #8
 307              	.LCFI4:
 308              		.cfi_def_cfa_offset 32
 309 0006 0546     		mov	r5, r0
 310 0008 1746     		mov	r7, r2
 311 000a 1C46     		mov	r4, r3
 193:u8glib/u8g_rot.c ****   u8g_dev_t *rotation_chain = (u8g_dev_t *)(dev->dev_mem);
 312              		.loc 1 193 0
 313 000c 4E68     		ldr	r6, [r1, #4]
 314              	.LVL37:
 194:u8glib/u8g_rot.c ****   switch(msg)
 315              		.loc 1 194 0
 316 000e A2F11703 		sub	r3, r2, #23
 317              	.LVL38:
 318 0012 302B     		cmp	r3, #48
 319 0014 1AD8     		bhi	.L13
 320 0016 DFE803F0 		tbb	[pc, r3]
 321              	.LVL39:
 322              	.L15:
 323 001a 1F       		.byte	(.L14-.L15)/2
 324 001b 19       		.byte	(.L13-.L15)/2
 325 001c 19       		.byte	(.L13-.L15)/2
 326 001d 19       		.byte	(.L13-.L15)/2
 327 001e 19       		.byte	(.L13-.L15)/2
 328 001f 19       		.byte	(.L13-.L15)/2
 329 0020 19       		.byte	(.L13-.L15)/2
 330 0021 19       		.byte	(.L13-.L15)/2
 331 0022 19       		.byte	(.L13-.L15)/2
 332 0023 19       		.byte	(.L13-.L15)/2
 333 0024 19       		.byte	(.L13-.L15)/2
 334 0025 19       		.byte	(.L13-.L15)/2
 335 0026 19       		.byte	(.L13-.L15)/2
 336 0027 19       		.byte	(.L13-.L15)/2
 337 0028 19       		.byte	(.L13-.L15)/2
 338 0029 19       		.byte	(.L13-.L15)/2
 339 002a 19       		.byte	(.L13-.L15)/2
 340 002b 19       		.byte	(.L13-.L15)/2
 341 002c 19       		.byte	(.L13-.L15)/2
 342 002d 19       		.byte	(.L13-.L15)/2
 343 002e 19       		.byte	(.L13-.L15)/2
 344 002f 58       		.byte	(.L16-.L15)/2
 345 0030 76       		.byte	(.L17-.L15)/2
 346 0031 19       		.byte	(.L13-.L15)/2
 347 0032 19       		.byte	(.L13-.L15)/2
 348 0033 19       		.byte	(.L13-.L15)/2
 349 0034 19       		.byte	(.L13-.L15)/2
 350 0035 58       		.byte	(.L16-.L15)/2
 351 0036 19       		.byte	(.L13-.L15)/2
 352 0037 19       		.byte	(.L13-.L15)/2
 353 0038 19       		.byte	(.L13-.L15)/2
 354 0039 19       		.byte	(.L13-.L15)/2
 355 003a 19       		.byte	(.L13-.L15)/2
 356 003b 19       		.byte	(.L13-.L15)/2
 357 003c 19       		.byte	(.L13-.L15)/2
 358 003d 19       		.byte	(.L13-.L15)/2
 359 003e 76       		.byte	(.L17-.L15)/2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 11


 360 003f 19       		.byte	(.L13-.L15)/2
 361 0040 19       		.byte	(.L13-.L15)/2
 362 0041 19       		.byte	(.L13-.L15)/2
 363 0042 19       		.byte	(.L13-.L15)/2
 364 0043 19       		.byte	(.L13-.L15)/2
 365 0044 19       		.byte	(.L13-.L15)/2
 366 0045 19       		.byte	(.L13-.L15)/2
 367 0046 19       		.byte	(.L13-.L15)/2
 368 0047 19       		.byte	(.L13-.L15)/2
 369 0048 19       		.byte	(.L13-.L15)/2
 370 0049 4C       		.byte	(.L18-.L15)/2
 371 004a 52       		.byte	(.L19-.L15)/2
 372 004b 00       		.p2align 1
 373              	.L13:
 195:u8glib/u8g_rot.c ****   {
 196:u8glib/u8g_rot.c ****     default:
 197:u8glib/u8g_rot.c ****     /*
 198:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_INIT:
 199:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_STOP:
 200:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_FIRST:
 201:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_NEXT:
 202:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_COLOR_ENTRY:
 203:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_XY_CB:
 204:u8glib/u8g_rot.c ****     */
 205:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 374              		.loc 1 205 0
 375 004c 2346     		mov	r3, r4
 376 004e 3A46     		mov	r2, r7
 377 0050 3146     		mov	r1, r6
 378              	.LVL40:
 379 0052 FFF7FEFF 		bl	u8g_call_dev_fn
 380              	.LVL41:
 381 0056 78E0     		b	.L20
 382              	.LVL42:
 383              	.L14:
 206:u8glib/u8g_rot.c **** #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
 207:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_IS_BBX_INTERSECTION:
 208:u8glib/u8g_rot.c ****       {
 209:u8glib/u8g_rot.c ****         u8g_dev_arg_bbx_t *bbx = (u8g_dev_arg_bbx_t *)arg;
 210:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 211:u8glib/u8g_rot.c ****         
 212:u8glib/u8g_rot.c ****         /* transform the reference point */
 213:u8glib/u8g_rot.c ****         //y = u8g_GetHeightLL(u8g, rotation_chain);
 214:u8glib/u8g_rot.c ****         y = u8g->height;
 215:u8glib/u8g_rot.c ****         y -= bbx->y; 
 216:u8glib/u8g_rot.c ****         y--;
 217:u8glib/u8g_rot.c ****         
 218:u8glib/u8g_rot.c ****         //x = u8g_GetWidthLL(u8g, rotation_chain);
 219:u8glib/u8g_rot.c ****         x = u8g->width;
 220:u8glib/u8g_rot.c ****         x -= bbx->x; 
 221:u8glib/u8g_rot.c ****         x--;
 222:u8glib/u8g_rot.c ****         
 223:u8glib/u8g_rot.c ****         /* adjust point to be the uppler left corner again */
 224:u8glib/u8g_rot.c ****         y -= bbx->h;
 225:u8glib/u8g_rot.c ****         y++;
 226:u8glib/u8g_rot.c ****         
 227:u8glib/u8g_rot.c ****         x -= bbx->w;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 12


 228:u8glib/u8g_rot.c ****         x++;
 229:u8glib/u8g_rot.c ****                 
 230:u8glib/u8g_rot.c ****         /* store x,y */
 231:u8glib/u8g_rot.c ****         bbx->x = x;
 232:u8glib/u8g_rot.c ****         bbx->y = y;
 233:u8glib/u8g_rot.c ****       }
 234:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 235:u8glib/u8g_rot.c **** #endif /* U8G_DEV_MSG_IS_BBX_INTERSECTION */
 236:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_PAGE_BOX:
 237:u8glib/u8g_rot.c ****       /* get page size from next device in the chain */
 238:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 384              		.loc 1 238 0
 385 0058 2346     		mov	r3, r4
 386 005a 3A46     		mov	r2, r7
 387 005c 3146     		mov	r1, r6
 388              	.LVL43:
 389 005e FFF7FEFF 		bl	u8g_call_dev_fn
 390              	.LVL44:
 391              	.LBB5:
 239:u8glib/u8g_rot.c ****       //printf("pre x: %3d..%3d y: %3d..%3d   ", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((
 240:u8glib/u8g_rot.c ****       {
 241:u8glib/u8g_rot.c **** 	u8g_box_t new_box;
 242:u8glib/u8g_rot.c **** 	
 243:u8glib/u8g_rot.c **** 	new_box.x0 = u8g_GetWidthLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->x1 - 1;
 392              		.loc 1 243 0
 393 0062 3146     		mov	r1, r6
 394 0064 2846     		mov	r0, r5
 395 0066 FFF7FEFF 		bl	u8g_GetWidthLL
 396              	.LVL45:
 397 006a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 398 006c C01A     		subs	r0, r0, r3
 399 006e 0138     		subs	r0, r0, #1
 400 0070 8DF80400 		strb	r0, [sp, #4]
 244:u8glib/u8g_rot.c **** 	new_box.x1 = u8g_GetWidthLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->x0 - 1;
 401              		.loc 1 244 0
 402 0074 3146     		mov	r1, r6
 403 0076 2846     		mov	r0, r5
 404 0078 FFF7FEFF 		bl	u8g_GetWidthLL
 405              	.LVL46:
 406 007c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 407 007e C01A     		subs	r0, r0, r3
 408 0080 0138     		subs	r0, r0, #1
 409 0082 8DF80600 		strb	r0, [sp, #6]
 245:u8glib/u8g_rot.c **** 	new_box.y0 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y1 - 1;
 410              		.loc 1 245 0
 411 0086 3146     		mov	r1, r6
 412 0088 2846     		mov	r0, r5
 413 008a FFF7FEFF 		bl	u8g_GetHeightLL
 414              	.LVL47:
 415 008e E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 416 0090 C01A     		subs	r0, r0, r3
 417 0092 0138     		subs	r0, r0, #1
 418 0094 8DF80500 		strb	r0, [sp, #5]
 246:u8glib/u8g_rot.c **** 	new_box.y1 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y0 - 1;
 419              		.loc 1 246 0
 420 0098 3146     		mov	r1, r6
 421 009a 2846     		mov	r0, r5
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 13


 422 009c FFF7FEFF 		bl	u8g_GetHeightLL
 423              	.LVL48:
 424 00a0 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 425 00a2 C01A     		subs	r0, r0, r3
 426 00a4 0138     		subs	r0, r0, #1
 427 00a6 8DF80700 		strb	r0, [sp, #7]
 247:u8glib/u8g_rot.c **** 	*((u8g_box_t *)arg) = new_box;
 428              		.loc 1 247 0
 429 00aa 0198     		ldr	r0, [sp, #4]	@ unaligned
 430 00ac 2060     		str	r0, [r4]	@ unaligned
 431              	.LBE5:
 248:u8glib/u8g_rot.c **** 	//printf("post x: %3d..%3d y: %3d..%3d\n", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((u8g_b
 249:u8glib/u8g_rot.c ****       }
 250:u8glib/u8g_rot.c ****       break;
 251:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 252:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetWidthLL(u8g,rotation_chain);
 253:u8glib/u8g_rot.c ****       break;
 254:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 255:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetHeightLL(u8g, rotation_chain);
 256:u8glib/u8g_rot.c ****       break;
 257:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 258:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_TPIXEL:
 259:u8glib/u8g_rot.c ****       {
 260:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 261:u8glib/u8g_rot.c **** 
 262:u8glib/u8g_rot.c ****         y = u8g_GetHeightLL(u8g, rotation_chain);
 263:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 264:u8glib/u8g_rot.c ****         y--;
 265:u8glib/u8g_rot.c ****         
 266:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 267:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 268:u8glib/u8g_rot.c ****         x--;
 269:u8glib/u8g_rot.c ****         
 270:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 271:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 272:u8glib/u8g_rot.c ****       }
 273:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 274:u8glib/u8g_rot.c ****       break;
 275:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 276:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_4TPIXEL:
 277:u8glib/u8g_rot.c ****       {
 278:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 279:u8glib/u8g_rot.c ****         
 280:u8glib/u8g_rot.c ****         y = u8g_GetHeightLL(u8g, rotation_chain);
 281:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 282:u8glib/u8g_rot.c ****         y--;
 283:u8glib/u8g_rot.c ****         
 284:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 285:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 286:u8glib/u8g_rot.c ****         x--;
 287:u8glib/u8g_rot.c ****         
 288:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 289:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 290:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=2;
 291:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 292:u8glib/u8g_rot.c ****       }
 293:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 14


 294:u8glib/u8g_rot.c ****       break;
 295:u8glib/u8g_rot.c ****   }
 296:u8glib/u8g_rot.c ****   return 1;
 432              		.loc 1 296 0
 433 00ae 0120     		movs	r0, #1
 250:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 434              		.loc 1 250 0
 435 00b0 4BE0     		b	.L20
 436              	.LVL49:
 437              	.L18:
 252:u8glib/u8g_rot.c ****       break;
 438              		.loc 1 252 0
 439 00b2 3146     		mov	r1, r6
 440              	.LVL50:
 441 00b4 FFF7FEFF 		bl	u8g_GetWidthLL
 442              	.LVL51:
 443 00b8 2070     		strb	r0, [r4]
 444              		.loc 1 296 0
 445 00ba 0120     		movs	r0, #1
 253:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 446              		.loc 1 253 0
 447 00bc 45E0     		b	.L20
 448              	.LVL52:
 449              	.L19:
 255:u8glib/u8g_rot.c ****       break;
 450              		.loc 1 255 0
 451 00be 3146     		mov	r1, r6
 452              	.LVL53:
 453 00c0 FFF7FEFF 		bl	u8g_GetHeightLL
 454              	.LVL54:
 455 00c4 2070     		strb	r0, [r4]
 456              		.loc 1 296 0
 457 00c6 0120     		movs	r0, #1
 256:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 458              		.loc 1 256 0
 459 00c8 3FE0     		b	.L20
 460              	.LVL55:
 461              	.L16:
 462              	.LBB6:
 262:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 463              		.loc 1 262 0
 464 00ca 3146     		mov	r1, r6
 465              	.LVL56:
 466 00cc FFF7FEFF 		bl	u8g_GetHeightLL
 467              	.LVL57:
 263:u8glib/u8g_rot.c ****         y--;
 468              		.loc 1 263 0
 469 00d0 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 470 00d2 C01A     		subs	r0, r0, r3
 471              	.LVL58:
 472 00d4 5FFA80F8 		uxtb	r8, r0
 473              	.LVL59:
 264:u8glib/u8g_rot.c ****         
 474              		.loc 1 264 0
 475 00d8 08F1FF38 		add	r8, r8, #-1
 476              	.LVL60:
 477 00dc 5FFA88F8 		uxtb	r8, r8
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 15


 478              	.LVL61:
 266:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 479              		.loc 1 266 0
 480 00e0 3146     		mov	r1, r6
 481 00e2 2846     		mov	r0, r5
 482 00e4 FFF7FEFF 		bl	u8g_GetWidthLL
 483              	.LVL62:
 267:u8glib/u8g_rot.c ****         x--;
 484              		.loc 1 267 0
 485 00e8 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 486 00ea C01A     		subs	r0, r0, r3
 487              	.LVL63:
 488 00ec C3B2     		uxtb	r3, r0
 489              	.LVL64:
 268:u8glib/u8g_rot.c ****         
 490              		.loc 1 268 0
 491 00ee 013B     		subs	r3, r3, #1
 492              	.LVL65:
 270:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 493              		.loc 1 270 0
 494 00f0 2370     		strb	r3, [r4]
 271:u8glib/u8g_rot.c ****       }
 495              		.loc 1 271 0
 496 00f2 84F80180 		strb	r8, [r4, #1]
 497              	.LBE6:
 273:u8glib/u8g_rot.c ****       break;
 498              		.loc 1 273 0
 499 00f6 2346     		mov	r3, r4
 500              	.LVL66:
 501 00f8 3A46     		mov	r2, r7
 502 00fa 3146     		mov	r1, r6
 503 00fc 2846     		mov	r0, r5
 504 00fe FFF7FEFF 		bl	u8g_call_dev_fn
 505              	.LVL67:
 506              		.loc 1 296 0
 507 0102 0120     		movs	r0, #1
 274:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 508              		.loc 1 274 0
 509 0104 21E0     		b	.L20
 510              	.LVL68:
 511              	.L17:
 512              	.LBB7:
 280:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 513              		.loc 1 280 0
 514 0106 3146     		mov	r1, r6
 515              	.LVL69:
 516 0108 FFF7FEFF 		bl	u8g_GetHeightLL
 517              	.LVL70:
 281:u8glib/u8g_rot.c ****         y--;
 518              		.loc 1 281 0
 519 010c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 520 010e C01A     		subs	r0, r0, r3
 521              	.LVL71:
 522 0110 5FFA80F8 		uxtb	r8, r0
 523              	.LVL72:
 282:u8glib/u8g_rot.c ****         
 524              		.loc 1 282 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 16


 525 0114 08F1FF38 		add	r8, r8, #-1
 526              	.LVL73:
 527 0118 5FFA88F8 		uxtb	r8, r8
 528              	.LVL74:
 284:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 529              		.loc 1 284 0
 530 011c 3146     		mov	r1, r6
 531 011e 2846     		mov	r0, r5
 532 0120 FFF7FEFF 		bl	u8g_GetWidthLL
 533              	.LVL75:
 285:u8glib/u8g_rot.c ****         x--;
 534              		.loc 1 285 0
 535 0124 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 536 0126 C01A     		subs	r0, r0, r3
 537              	.LVL76:
 538 0128 C3B2     		uxtb	r3, r0
 539              	.LVL77:
 286:u8glib/u8g_rot.c ****         
 540              		.loc 1 286 0
 541 012a 013B     		subs	r3, r3, #1
 542              	.LVL78:
 288:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 543              		.loc 1 288 0
 544 012c 2370     		strb	r3, [r4]
 289:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=2;
 545              		.loc 1 289 0
 546 012e 84F80180 		strb	r8, [r4, #1]
 290:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 547              		.loc 1 290 0
 548 0132 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 549              	.LVL79:
 550 0134 0233     		adds	r3, r3, #2
 291:u8glib/u8g_rot.c ****       }
 551              		.loc 1 291 0
 552 0136 03F00303 		and	r3, r3, #3
 553 013a E370     		strb	r3, [r4, #3]
 554              	.LBE7:
 293:u8glib/u8g_rot.c ****       break;
 555              		.loc 1 293 0
 556 013c 2346     		mov	r3, r4
 557 013e 3A46     		mov	r2, r7
 558 0140 3146     		mov	r1, r6
 559 0142 2846     		mov	r0, r5
 560 0144 FFF7FEFF 		bl	u8g_call_dev_fn
 561              	.LVL80:
 562              		.loc 1 296 0
 563 0148 0120     		movs	r0, #1
 564              	.LVL81:
 565              	.L20:
 297:u8glib/u8g_rot.c **** }
 566              		.loc 1 297 0
 567 014a 02B0     		add	sp, sp, #8
 568              	.LCFI5:
 569              		.cfi_def_cfa_offset 24
 570              		@ sp needed
 571 014c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 572              		.cfi_endproc
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 17


 573              	.LFE6:
 575              		.section	.text.u8g_dev_rot270_fn,"ax",%progbits
 576              		.align	2
 577              		.global	u8g_dev_rot270_fn
 578              		.thumb
 579              		.thumb_func
 581              	u8g_dev_rot270_fn:
 582              	.LFB7:
 298:u8glib/u8g_rot.c **** 
 299:u8glib/u8g_rot.c **** uint8_t u8g_dev_rot270_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
 300:u8glib/u8g_rot.c **** {
 583              		.loc 1 300 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL82:
 588 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 589              	.LCFI6:
 590              		.cfi_def_cfa_offset 24
 591              		.cfi_offset 4, -24
 592              		.cfi_offset 5, -20
 593              		.cfi_offset 6, -16
 594              		.cfi_offset 7, -12
 595              		.cfi_offset 8, -8
 596              		.cfi_offset 14, -4
 597 0004 82B0     		sub	sp, sp, #8
 598              	.LCFI7:
 599              		.cfi_def_cfa_offset 32
 600 0006 0546     		mov	r5, r0
 601 0008 1746     		mov	r7, r2
 602 000a 1C46     		mov	r4, r3
 301:u8glib/u8g_rot.c ****   u8g_dev_t *rotation_chain = (u8g_dev_t *)(dev->dev_mem);
 603              		.loc 1 301 0
 604 000c 4E68     		ldr	r6, [r1, #4]
 605              	.LVL83:
 302:u8glib/u8g_rot.c ****   switch(msg)
 606              		.loc 1 302 0
 607 000e A2F11703 		sub	r3, r2, #23
 608              	.LVL84:
 609 0012 302B     		cmp	r3, #48
 610 0014 1AD8     		bhi	.L23
 611 0016 DFE803F0 		tbb	[pc, r3]
 612              	.LVL85:
 613              	.L25:
 614 001a 1F       		.byte	(.L24-.L25)/2
 615 001b 19       		.byte	(.L23-.L25)/2
 616 001c 19       		.byte	(.L23-.L25)/2
 617 001d 19       		.byte	(.L23-.L25)/2
 618 001e 19       		.byte	(.L23-.L25)/2
 619 001f 19       		.byte	(.L23-.L25)/2
 620 0020 19       		.byte	(.L23-.L25)/2
 621 0021 19       		.byte	(.L23-.L25)/2
 622 0022 19       		.byte	(.L23-.L25)/2
 623 0023 19       		.byte	(.L23-.L25)/2
 624 0024 19       		.byte	(.L23-.L25)/2
 625 0025 19       		.byte	(.L23-.L25)/2
 626 0026 19       		.byte	(.L23-.L25)/2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 18


 627 0027 19       		.byte	(.L23-.L25)/2
 628 0028 19       		.byte	(.L23-.L25)/2
 629 0029 19       		.byte	(.L23-.L25)/2
 630 002a 19       		.byte	(.L23-.L25)/2
 631 002b 19       		.byte	(.L23-.L25)/2
 632 002c 19       		.byte	(.L23-.L25)/2
 633 002d 19       		.byte	(.L23-.L25)/2
 634 002e 19       		.byte	(.L23-.L25)/2
 635 002f 58       		.byte	(.L26-.L25)/2
 636 0030 6C       		.byte	(.L27-.L25)/2
 637 0031 19       		.byte	(.L23-.L25)/2
 638 0032 19       		.byte	(.L23-.L25)/2
 639 0033 19       		.byte	(.L23-.L25)/2
 640 0034 19       		.byte	(.L23-.L25)/2
 641 0035 58       		.byte	(.L26-.L25)/2
 642 0036 19       		.byte	(.L23-.L25)/2
 643 0037 19       		.byte	(.L23-.L25)/2
 644 0038 19       		.byte	(.L23-.L25)/2
 645 0039 19       		.byte	(.L23-.L25)/2
 646 003a 19       		.byte	(.L23-.L25)/2
 647 003b 19       		.byte	(.L23-.L25)/2
 648 003c 19       		.byte	(.L23-.L25)/2
 649 003d 19       		.byte	(.L23-.L25)/2
 650 003e 6C       		.byte	(.L27-.L25)/2
 651 003f 19       		.byte	(.L23-.L25)/2
 652 0040 19       		.byte	(.L23-.L25)/2
 653 0041 19       		.byte	(.L23-.L25)/2
 654 0042 19       		.byte	(.L23-.L25)/2
 655 0043 19       		.byte	(.L23-.L25)/2
 656 0044 19       		.byte	(.L23-.L25)/2
 657 0045 19       		.byte	(.L23-.L25)/2
 658 0046 19       		.byte	(.L23-.L25)/2
 659 0047 19       		.byte	(.L23-.L25)/2
 660 0048 19       		.byte	(.L23-.L25)/2
 661 0049 4C       		.byte	(.L28-.L25)/2
 662 004a 52       		.byte	(.L29-.L25)/2
 663 004b 00       		.p2align 1
 664              	.L23:
 303:u8glib/u8g_rot.c ****   {
 304:u8glib/u8g_rot.c ****     default:
 305:u8glib/u8g_rot.c ****     /*
 306:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_INIT:
 307:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_STOP:
 308:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_FIRST:
 309:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_PAGE_NEXT:
 310:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_COLOR_ENTRY:
 311:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_XY_CB:
 312:u8glib/u8g_rot.c ****     */
 313:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 665              		.loc 1 313 0
 666 004c 2346     		mov	r3, r4
 667 004e 3A46     		mov	r2, r7
 668 0050 3146     		mov	r1, r6
 669              	.LVL86:
 670 0052 FFF7FEFF 		bl	u8g_call_dev_fn
 671              	.LVL87:
 672 0056 64E0     		b	.L30
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 19


 673              	.LVL88:
 674              	.L24:
 314:u8glib/u8g_rot.c **** #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
 315:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_IS_BBX_INTERSECTION:
 316:u8glib/u8g_rot.c ****       {
 317:u8glib/u8g_rot.c ****         u8g_dev_arg_bbx_t *bbx = (u8g_dev_arg_bbx_t *)arg;
 318:u8glib/u8g_rot.c ****         u8g_uint_t x, y, tmp;
 319:u8glib/u8g_rot.c ****         
 320:u8glib/u8g_rot.c ****         /* transform the reference point */
 321:u8glib/u8g_rot.c ****         x = bbx->y;
 322:u8glib/u8g_rot.c ****         
 323:u8glib/u8g_rot.c ****         y = u8g->width;
 324:u8glib/u8g_rot.c ****         /* y = u8g_GetHeightLL(u8g, rotation_chain); */
 325:u8glib/u8g_rot.c ****         y -= bbx->x; 
 326:u8glib/u8g_rot.c ****         y--;
 327:u8glib/u8g_rot.c ****                 
 328:u8glib/u8g_rot.c ****         /* adjust point to be the uppler left corner again */
 329:u8glib/u8g_rot.c ****         y -= bbx->w;
 330:u8glib/u8g_rot.c ****         y++;
 331:u8glib/u8g_rot.c ****         
 332:u8glib/u8g_rot.c ****         /* swap box dimensions */        
 333:u8glib/u8g_rot.c ****         tmp = bbx->w;
 334:u8glib/u8g_rot.c ****         bbx->w = bbx->h;
 335:u8glib/u8g_rot.c ****         bbx->h = tmp;
 336:u8glib/u8g_rot.c ****         
 337:u8glib/u8g_rot.c ****         /* store x,y */
 338:u8glib/u8g_rot.c ****         bbx->x = x;
 339:u8glib/u8g_rot.c ****         bbx->y = y;
 340:u8glib/u8g_rot.c ****       }
 341:u8glib/u8g_rot.c ****       return u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 342:u8glib/u8g_rot.c **** #endif /* U8G_DEV_MSG_IS_BBX_INTERSECTION */
 343:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_PAGE_BOX:
 344:u8glib/u8g_rot.c ****       /* get page size from next device in the chain */
 345:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 675              		.loc 1 345 0
 676 0058 2346     		mov	r3, r4
 677 005a 3A46     		mov	r2, r7
 678 005c 3146     		mov	r1, r6
 679              	.LVL89:
 680 005e FFF7FEFF 		bl	u8g_call_dev_fn
 681              	.LVL90:
 682              	.LBB8:
 346:u8glib/u8g_rot.c ****       //printf("pre x: %3d..%3d y: %3d..%3d   ", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((
 347:u8glib/u8g_rot.c ****       {
 348:u8glib/u8g_rot.c **** 	u8g_box_t new_box;
 349:u8glib/u8g_rot.c **** 	
 350:u8glib/u8g_rot.c **** 	new_box.x0 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y1 - 1;
 683              		.loc 1 350 0
 684 0062 3146     		mov	r1, r6
 685 0064 2846     		mov	r0, r5
 686 0066 FFF7FEFF 		bl	u8g_GetHeightLL
 687              	.LVL91:
 688 006a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 689 006c C01A     		subs	r0, r0, r3
 690 006e 0138     		subs	r0, r0, #1
 691 0070 8DF80400 		strb	r0, [sp, #4]
 351:u8glib/u8g_rot.c **** 	new_box.x1 = u8g_GetHeightLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->y0 - 1;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 20


 692              		.loc 1 351 0
 693 0074 3146     		mov	r1, r6
 694 0076 2846     		mov	r0, r5
 695 0078 FFF7FEFF 		bl	u8g_GetHeightLL
 696              	.LVL92:
 697 007c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 698 007e C01A     		subs	r0, r0, r3
 699 0080 0138     		subs	r0, r0, #1
 700 0082 8DF80600 		strb	r0, [sp, #6]
 352:u8glib/u8g_rot.c **** 	new_box.y0 = u8g_GetWidthLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->x1 - 1;
 701              		.loc 1 352 0
 702 0086 3146     		mov	r1, r6
 703 0088 2846     		mov	r0, r5
 704 008a FFF7FEFF 		bl	u8g_GetWidthLL
 705              	.LVL93:
 706 008e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 707 0090 C01A     		subs	r0, r0, r3
 708 0092 0138     		subs	r0, r0, #1
 709 0094 8DF80500 		strb	r0, [sp, #5]
 353:u8glib/u8g_rot.c **** 	new_box.y1 = u8g_GetWidthLL(u8g,rotation_chain) - ((u8g_box_t *)arg)->x0 - 1;
 710              		.loc 1 353 0
 711 0098 3146     		mov	r1, r6
 712 009a 2846     		mov	r0, r5
 713 009c FFF7FEFF 		bl	u8g_GetWidthLL
 714              	.LVL94:
 715 00a0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 716 00a2 C01A     		subs	r0, r0, r3
 717 00a4 0138     		subs	r0, r0, #1
 718 00a6 8DF80700 		strb	r0, [sp, #7]
 354:u8glib/u8g_rot.c **** 	*((u8g_box_t *)arg) = new_box;
 719              		.loc 1 354 0
 720 00aa 0198     		ldr	r0, [sp, #4]	@ unaligned
 721 00ac 2060     		str	r0, [r4]	@ unaligned
 722              	.LBE8:
 355:u8glib/u8g_rot.c **** 	//printf("post x: %3d..%3d y: %3d..%3d\n", ((u8g_box_t *)arg)->x0, ((u8g_box_t *)arg)->x1, ((u8g_b
 356:u8glib/u8g_rot.c ****       }
 357:u8glib/u8g_rot.c ****       break;
 358:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 359:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetHeightLL(u8g,rotation_chain);
 360:u8glib/u8g_rot.c ****       break;
 361:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 362:u8glib/u8g_rot.c ****       *((u8g_uint_t *)arg) = u8g_GetWidthLL(u8g, rotation_chain);
 363:u8glib/u8g_rot.c ****       break;
 364:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 365:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_TPIXEL:
 366:u8glib/u8g_rot.c ****       {
 367:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 368:u8glib/u8g_rot.c ****         x = ((u8g_dev_arg_pixel_t *)arg)->y;
 369:u8glib/u8g_rot.c ****         
 370:u8glib/u8g_rot.c ****         y = u8g_GetHeightLL(u8g, rotation_chain);
 371:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 372:u8glib/u8g_rot.c ****         y--;
 373:u8glib/u8g_rot.c ****           
 374:u8glib/u8g_rot.c ****         /*
 375:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 376:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 377:u8glib/u8g_rot.c ****         x--;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 21


 378:u8glib/u8g_rot.c ****         */
 379:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 380:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 381:u8glib/u8g_rot.c ****       }
 382:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 383:u8glib/u8g_rot.c ****       break;
 384:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 385:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_4TPIXEL:
 386:u8glib/u8g_rot.c ****       {
 387:u8glib/u8g_rot.c ****         u8g_uint_t x, y;
 388:u8glib/u8g_rot.c ****         x = ((u8g_dev_arg_pixel_t *)arg)->y;
 389:u8glib/u8g_rot.c ****         
 390:u8glib/u8g_rot.c ****         y = u8g_GetHeightLL(u8g, rotation_chain);
 391:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 392:u8glib/u8g_rot.c ****         y--;
 393:u8glib/u8g_rot.c ****           
 394:u8glib/u8g_rot.c ****         /*
 395:u8glib/u8g_rot.c ****         x = u8g_GetWidthLL(u8g, rotation_chain);
 396:u8glib/u8g_rot.c ****         x -= ((u8g_dev_arg_pixel_t *)arg)->y; 
 397:u8glib/u8g_rot.c ****         x--;
 398:u8glib/u8g_rot.c ****         */
 399:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->x = x;
 400:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 401:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=3;
 402:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 403:u8glib/u8g_rot.c ****       }
 404:u8glib/u8g_rot.c ****       u8g_call_dev_fn(u8g, rotation_chain, msg, arg);
 405:u8glib/u8g_rot.c ****       break;
 406:u8glib/u8g_rot.c ****   }
 407:u8glib/u8g_rot.c ****   return 1;
 723              		.loc 1 407 0
 724 00ae 0120     		movs	r0, #1
 357:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_WIDTH:
 725              		.loc 1 357 0
 726 00b0 37E0     		b	.L30
 727              	.LVL95:
 728              	.L28:
 359:u8glib/u8g_rot.c ****       break;
 729              		.loc 1 359 0
 730 00b2 3146     		mov	r1, r6
 731              	.LVL96:
 732 00b4 FFF7FEFF 		bl	u8g_GetHeightLL
 733              	.LVL97:
 734 00b8 2070     		strb	r0, [r4]
 735              		.loc 1 407 0
 736 00ba 0120     		movs	r0, #1
 360:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 737              		.loc 1 360 0
 738 00bc 31E0     		b	.L30
 739              	.LVL98:
 740              	.L29:
 362:u8glib/u8g_rot.c ****       break;
 741              		.loc 1 362 0
 742 00be 3146     		mov	r1, r6
 743              	.LVL99:
 744 00c0 FFF7FEFF 		bl	u8g_GetWidthLL
 745              	.LVL100:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 22


 746 00c4 2070     		strb	r0, [r4]
 747              		.loc 1 407 0
 748 00c6 0120     		movs	r0, #1
 363:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_PIXEL:
 749              		.loc 1 363 0
 750 00c8 2BE0     		b	.L30
 751              	.LVL101:
 752              	.L26:
 753              	.LBB9:
 368:u8glib/u8g_rot.c ****         
 754              		.loc 1 368 0
 755 00ca 94F80180 		ldrb	r8, [r4, #1]	@ zero_extendqisi2
 756              	.LVL102:
 370:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 757              		.loc 1 370 0
 758 00ce 3146     		mov	r1, r6
 759              	.LVL103:
 760 00d0 FFF7FEFF 		bl	u8g_GetHeightLL
 761              	.LVL104:
 371:u8glib/u8g_rot.c ****         y--;
 762              		.loc 1 371 0
 763 00d4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 764 00d6 C01A     		subs	r0, r0, r3
 765              	.LVL105:
 766 00d8 C3B2     		uxtb	r3, r0
 767              	.LVL106:
 372:u8glib/u8g_rot.c ****           
 768              		.loc 1 372 0
 769 00da 013B     		subs	r3, r3, #1
 770              	.LVL107:
 379:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 771              		.loc 1 379 0
 772 00dc 84F80080 		strb	r8, [r4]
 380:u8glib/u8g_rot.c ****       }
 773              		.loc 1 380 0
 774 00e0 6370     		strb	r3, [r4, #1]
 775              	.LBE9:
 382:u8glib/u8g_rot.c ****       break;
 776              		.loc 1 382 0
 777 00e2 2346     		mov	r3, r4
 778              	.LVL108:
 779 00e4 3A46     		mov	r2, r7
 780 00e6 3146     		mov	r1, r6
 781 00e8 2846     		mov	r0, r5
 782 00ea FFF7FEFF 		bl	u8g_call_dev_fn
 783              	.LVL109:
 784              		.loc 1 407 0
 785 00ee 0120     		movs	r0, #1
 383:u8glib/u8g_rot.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 786              		.loc 1 383 0
 787 00f0 17E0     		b	.L30
 788              	.LVL110:
 789              	.L27:
 790              	.LBB10:
 388:u8glib/u8g_rot.c ****         
 791              		.loc 1 388 0
 792 00f2 94F80180 		ldrb	r8, [r4, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 23


 793              	.LVL111:
 390:u8glib/u8g_rot.c ****         y -= ((u8g_dev_arg_pixel_t *)arg)->x; 
 794              		.loc 1 390 0
 795 00f6 3146     		mov	r1, r6
 796              	.LVL112:
 797 00f8 FFF7FEFF 		bl	u8g_GetHeightLL
 798              	.LVL113:
 391:u8glib/u8g_rot.c ****         y--;
 799              		.loc 1 391 0
 800 00fc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 801 00fe C01A     		subs	r0, r0, r3
 802              	.LVL114:
 803 0100 C3B2     		uxtb	r3, r0
 804              	.LVL115:
 392:u8glib/u8g_rot.c ****           
 805              		.loc 1 392 0
 806 0102 013B     		subs	r3, r3, #1
 807              	.LVL116:
 399:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->y = y;
 808              		.loc 1 399 0
 809 0104 84F80080 		strb	r8, [r4]
 400:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir+=3;
 810              		.loc 1 400 0
 811 0108 6370     		strb	r3, [r4, #1]
 401:u8glib/u8g_rot.c ****         ((u8g_dev_arg_pixel_t *)arg)->dir &= 3;
 812              		.loc 1 401 0
 813 010a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 814              	.LVL117:
 815 010c 0333     		adds	r3, r3, #3
 402:u8glib/u8g_rot.c ****       }
 816              		.loc 1 402 0
 817 010e 03F00303 		and	r3, r3, #3
 818 0112 E370     		strb	r3, [r4, #3]
 819              	.LBE10:
 404:u8glib/u8g_rot.c ****       break;
 820              		.loc 1 404 0
 821 0114 2346     		mov	r3, r4
 822 0116 3A46     		mov	r2, r7
 823 0118 3146     		mov	r1, r6
 824 011a 2846     		mov	r0, r5
 825 011c FFF7FEFF 		bl	u8g_call_dev_fn
 826              	.LVL118:
 827              		.loc 1 407 0
 828 0120 0120     		movs	r0, #1
 829              	.LVL119:
 830              	.L30:
 408:u8glib/u8g_rot.c **** }
 831              		.loc 1 408 0
 832 0122 02B0     		add	sp, sp, #8
 833              	.LCFI8:
 834              		.cfi_def_cfa_offset 24
 835              		@ sp needed
 836 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 837              		.cfi_endproc
 838              	.LFE7:
 840              		.section	.text.u8g_UndoRotation,"ax",%progbits
 841              		.align	2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 24


 842              		.global	u8g_UndoRotation
 843              		.thumb
 844              		.thumb_func
 846              	u8g_UndoRotation:
 847              	.LFB1:
  52:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
 848              		.loc 1 52 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              	.LVL120:
 853 0000 08B5     		push	{r3, lr}
 854              	.LCFI9:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
  53:u8glib/u8g_rot.c ****     return;
 858              		.loc 1 53 0
 859 0002 4268     		ldr	r2, [r0, #4]
 860 0004 034B     		ldr	r3, .L35
 861 0006 9A42     		cmp	r2, r3
 862 0008 03D1     		bne	.L32
  55:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
 863              		.loc 1 55 0
 864 000a 5B68     		ldr	r3, [r3, #4]
 865 000c 4360     		str	r3, [r0, #4]
  56:u8glib/u8g_rot.c **** }
 866              		.loc 1 56 0
 867 000e FFF7FEFF 		bl	u8g_UpdateDimension
 868              	.LVL121:
 869              	.L32:
 870 0012 08BD     		pop	{r3, pc}
 871              	.L36:
 872              		.align	2
 873              	.L35:
 874 0014 00000000 		.word	.LANCHOR0
 875              		.cfi_endproc
 876              	.LFE1:
 878              		.section	.text.u8g_SetRot90,"ax",%progbits
 879              		.align	2
 880              		.global	u8g_SetRot90
 881              		.thumb
 882              		.thumb_func
 884              	u8g_SetRot90:
 885              	.LFB2:
  60:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
 886              		.loc 1 60 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL122:
 891 0000 08B5     		push	{r3, lr}
 892              	.LCFI10:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 3, -8
 895              		.cfi_offset 14, -4
  61:u8glib/u8g_rot.c ****   {
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 25


 896              		.loc 1 61 0
 897 0002 4368     		ldr	r3, [r0, #4]
 898 0004 054A     		ldr	r2, .L40
 899 0006 9342     		cmp	r3, r2
 900 0008 01D0     		beq	.L38
  63:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
 901              		.loc 1 63 0
 902 000a 5360     		str	r3, [r2, #4]
  64:u8glib/u8g_rot.c ****   }
 903              		.loc 1 64 0
 904 000c 4260     		str	r2, [r0, #4]
 905              	.L38:
  66:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
 906              		.loc 1 66 0
 907 000e 044A     		ldr	r2, .L40+4
 908 0010 024B     		ldr	r3, .L40
 909 0012 1A60     		str	r2, [r3]
  67:u8glib/u8g_rot.c **** }
 910              		.loc 1 67 0
 911 0014 FFF7FEFF 		bl	u8g_UpdateDimension
 912              	.LVL123:
 913 0018 08BD     		pop	{r3, pc}
 914              	.L41:
 915 001a 00BF     		.align	2
 916              	.L40:
 917 001c 00000000 		.word	.LANCHOR0
 918 0020 00000000 		.word	u8g_dev_rot90_fn
 919              		.cfi_endproc
 920              	.LFE2:
 922              		.section	.text.u8g_SetRot180,"ax",%progbits
 923              		.align	2
 924              		.global	u8g_SetRot180
 925              		.thumb
 926              		.thumb_func
 928              	u8g_SetRot180:
 929              	.LFB3:
  71:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
 930              		.loc 1 71 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL124:
 935 0000 08B5     		push	{r3, lr}
 936              	.LCFI11:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 3, -8
 939              		.cfi_offset 14, -4
  72:u8glib/u8g_rot.c ****   {
 940              		.loc 1 72 0
 941 0002 4368     		ldr	r3, [r0, #4]
 942 0004 054A     		ldr	r2, .L45
 943 0006 9342     		cmp	r3, r2
 944 0008 01D0     		beq	.L43
  74:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
 945              		.loc 1 74 0
 946 000a 5360     		str	r3, [r2, #4]
  75:u8glib/u8g_rot.c ****   }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 26


 947              		.loc 1 75 0
 948 000c 4260     		str	r2, [r0, #4]
 949              	.L43:
  77:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
 950              		.loc 1 77 0
 951 000e 044A     		ldr	r2, .L45+4
 952 0010 024B     		ldr	r3, .L45
 953 0012 1A60     		str	r2, [r3]
  78:u8glib/u8g_rot.c **** }
 954              		.loc 1 78 0
 955 0014 FFF7FEFF 		bl	u8g_UpdateDimension
 956              	.LVL125:
 957 0018 08BD     		pop	{r3, pc}
 958              	.L46:
 959 001a 00BF     		.align	2
 960              	.L45:
 961 001c 00000000 		.word	.LANCHOR0
 962 0020 00000000 		.word	u8g_dev_rot180_fn
 963              		.cfi_endproc
 964              	.LFE3:
 966              		.section	.text.u8g_SetRot270,"ax",%progbits
 967              		.align	2
 968              		.global	u8g_SetRot270
 969              		.thumb
 970              		.thumb_func
 972              	u8g_SetRot270:
 973              	.LFB4:
  82:u8glib/u8g_rot.c ****   if ( u8g->dev != &u8g_dev_rot )
 974              		.loc 1 82 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              	.LVL126:
 979 0000 08B5     		push	{r3, lr}
 980              	.LCFI12:
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 3, -8
 983              		.cfi_offset 14, -4
  83:u8glib/u8g_rot.c ****   {
 984              		.loc 1 83 0
 985 0002 4368     		ldr	r3, [r0, #4]
 986 0004 054A     		ldr	r2, .L50
 987 0006 9342     		cmp	r3, r2
 988 0008 01D0     		beq	.L48
  85:u8glib/u8g_rot.c ****     u8g->dev = &u8g_dev_rot;
 989              		.loc 1 85 0
 990 000a 5360     		str	r3, [r2, #4]
  86:u8glib/u8g_rot.c ****   }
 991              		.loc 1 86 0
 992 000c 4260     		str	r2, [r0, #4]
 993              	.L48:
  88:u8glib/u8g_rot.c ****   u8g_UpdateDimension(u8g);
 994              		.loc 1 88 0
 995 000e 044A     		ldr	r2, .L50+4
 996 0010 024B     		ldr	r3, .L50
 997 0012 1A60     		str	r2, [r3]
  89:u8glib/u8g_rot.c **** }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 27


 998              		.loc 1 89 0
 999 0014 FFF7FEFF 		bl	u8g_UpdateDimension
 1000              	.LVL127:
 1001 0018 08BD     		pop	{r3, pc}
 1002              	.L51:
 1003 001a 00BF     		.align	2
 1004              	.L50:
 1005 001c 00000000 		.word	.LANCHOR0
 1006 0020 00000000 		.word	u8g_dev_rot270_fn
 1007              		.cfi_endproc
 1008              	.LFE4:
 1010              		.global	u8g_dev_rot
 1011              		.section	.data.u8g_dev_rot,"aw",%progbits
 1012              		.align	2
 1013              		.set	.LANCHOR0,. + 0
 1016              	u8g_dev_rot:
 1017 0000 00000000 		.word	u8g_dev_rot_dummy_fn
 1018 0004 00000000 		.word	0
 1019 0008 00000000 		.word	0
 1020              		.text
 1021              	.Letext0:
 1022              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 1023              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 1024              		.file 4 "u8glib/u8g.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccfC9e1v.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 u8g_rot.c
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:22     .text.u8g_dev_rot_dummy_fn:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:27     .text.u8g_dev_rot_dummy_fn:00000000 u8g_dev_rot_dummy_fn
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:44     .text.u8g_dev_rot90_fn:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:49     .text.u8g_dev_rot90_fn:00000000 u8g_dev_rot90_fn
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:82     .text.u8g_dev_rot90_fn:0000001a $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:285    .text.u8g_dev_rot180_fn:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:290    .text.u8g_dev_rot180_fn:00000000 u8g_dev_rot180_fn
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:323    .text.u8g_dev_rot180_fn:0000001a $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:576    .text.u8g_dev_rot270_fn:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:581    .text.u8g_dev_rot270_fn:00000000 u8g_dev_rot270_fn
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:614    .text.u8g_dev_rot270_fn:0000001a $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:841    .text.u8g_UndoRotation:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:846    .text.u8g_UndoRotation:00000000 u8g_UndoRotation
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:874    .text.u8g_UndoRotation:00000014 $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:879    .text.u8g_SetRot90:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:884    .text.u8g_SetRot90:00000000 u8g_SetRot90
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:917    .text.u8g_SetRot90:0000001c $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:923    .text.u8g_SetRot180:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:928    .text.u8g_SetRot180:00000000 u8g_SetRot180
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:961    .text.u8g_SetRot180:0000001c $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:967    .text.u8g_SetRot270:00000000 $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:972    .text.u8g_SetRot270:00000000 u8g_SetRot270
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:1005   .text.u8g_SetRot270:0000001c $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:1016   .data.u8g_dev_rot:00000000 u8g_dev_rot
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:1012   .data.u8g_dev_rot:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:131    .text.u8g_dev_rot90_fn:0000004b $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:131    .text.u8g_dev_rot90_fn:0000004c $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:372    .text.u8g_dev_rot180_fn:0000004b $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:372    .text.u8g_dev_rot180_fn:0000004c $t
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:663    .text.u8g_dev_rot270_fn:0000004b $d
C:\Users\master\AppData\Local\Temp\ccfC9e1v.s:663    .text.u8g_dev_rot270_fn:0000004c $t

UNDEFINED SYMBOLS
u8g_call_dev_fn
u8g_GetHeightLL
u8g_GetWidthLL
u8g_UpdateDimension
