ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"queue.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	prvGetDisinheritPriorityAfterTimeout:
  27              	.LFB28:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Not used in this path. */
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 34


1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 35


1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 36


1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 37


2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  29              		.loc 1 2050 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  35              		.loc 1 2059 0
  36 0000 436A     		ldr	r3, [r0, #36]
  37 0002 23B1     		cbz	r3, .L3
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  38              		.loc 1 2061 0
  39 0004 036B     		ldr	r3, [r0, #48]
  40 0006 1868     		ldr	r0, [r3]
  41              	.LVL1:
  42 0008 C0F10700 		rsb	r0, r0, #7
  43              	.LVL2:
  44 000c 7047     		bx	lr
  45              	.LVL3:
  46              	.L3:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 38


2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  47              		.loc 1 2065 0
  48 000e 0020     		movs	r0, #0
  49              	.LVL4:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  50              		.loc 1 2069 0
  51 0010 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE28:
  55 0012 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
  56              		.align	2
  57              		.thumb
  58              		.thumb_func
  60              	prvIsQueueFull:
  61              	.LFB34:
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2332 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 43


  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2335 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2337 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 01D1     		bne	.L6
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
  81              		.loc 1 2339 0
  82 0010 0124     		movs	r4, #1
  83              	.LVL7:
  84 0012 00E0     		b	.L5
  85              	.LVL8:
  86              	.L6:
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  87              		.loc 1 2343 0
  88 0014 0024     		movs	r4, #0
  89              	.LVL9:
  90              	.L5:
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  91              		.loc 1 2346 0
  92 0016 FFF7FEFF 		bl	vPortExitCritical
  93              	.LVL10:
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  94              		.loc 1 2349 0
  95 001a 2046     		mov	r0, r4
  96 001c 10BD     		pop	{r4, pc}
  97              		.cfi_endproc
  98              	.LFE34:
 100 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	2
 102              		.thumb
 103              		.thumb_func
 105              	prvIsQueueEmpty:
 106              	.LFB32:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 44


 107              		.loc 1 2292 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL11:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 118              		.loc 1 2295 0
 119 0004 FFF7FEFF 		bl	vPortEnterCritical
 120              	.LVL12:
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 121              		.loc 1 2297 0
 122 0008 A36B     		ldr	r3, [r4, #56]
 123 000a 0BB9     		cbnz	r3, .L10
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 124              		.loc 1 2299 0
 125 000c 0124     		movs	r4, #1
 126              	.LVL13:
 127 000e 00E0     		b	.L9
 128              	.LVL14:
 129              	.L10:
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 130              		.loc 1 2303 0
 131 0010 0024     		movs	r4, #0
 132              	.LVL15:
 133              	.L9:
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 134              		.loc 1 2306 0
 135 0012 FFF7FEFF 		bl	vPortExitCritical
 136              	.LVL16:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 137              		.loc 1 2309 0
 138 0016 2046     		mov	r0, r4
 139 0018 10BD     		pop	{r4, pc}
 140              		.cfi_endproc
 141              	.LFE32:
 143 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 144              		.align	2
 145              		.thumb
 146              		.thumb_func
 148              	prvCopyDataToQueue:
 149              	.LFB29:
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 150              		.loc 1 2075 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL17:
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 4, -16
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 45


 159              		.cfi_offset 5, -12
 160              		.cfi_offset 6, -8
 161              		.cfi_offset 14, -4
 162 0002 0446     		mov	r4, r0
 163 0004 1646     		mov	r6, r2
 164              	.LVL18:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165              		.loc 1 2081 0
 166 0006 856B     		ldr	r5, [r0, #56]
 167              	.LVL19:
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 168              		.loc 1 2083 0
 169 0008 026C     		ldr	r2, [r0, #64]
 170              	.LVL20:
 171 000a 3AB9     		cbnz	r2, .L13
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 172              		.loc 1 2087 0
 173 000c 0368     		ldr	r3, [r0]
 174 000e 43BB     		cbnz	r3, .L17
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 175              		.loc 1 2090 0
 176 0010 8068     		ldr	r0, [r0, #8]
 177              	.LVL21:
 178 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 179              	.LVL22:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 180              		.loc 1 2091 0
 181 0016 0023     		movs	r3, #0
 182 0018 A360     		str	r3, [r4, #8]
 183 001a 29E0     		b	.L14
 184              	.LVL23:
 185              	.L13:
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 186              		.loc 1 2100 0
 187 001c 6EB9     		cbnz	r6, .L15
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 188              		.loc 1 2102 0
 189 001e 4068     		ldr	r0, [r0, #4]
 190              	.LVL24:
 191 0020 FFF7FEFF 		bl	memcpy
 192              	.LVL25:
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 193              		.loc 1 2103 0
 194 0024 6268     		ldr	r2, [r4, #4]
 195 0026 236C     		ldr	r3, [r4, #64]
 196 0028 1344     		add	r3, r3, r2
 197 002a 6360     		str	r3, [r4, #4]
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 198              		.loc 1 2104 0
 199 002c A268     		ldr	r2, [r4, #8]
 200 002e 9342     		cmp	r3, r2
 201 0030 19D3     		bcc	.L18
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 202              		.loc 1 2106 0
 203 0032 2368     		ldr	r3, [r4]
 204 0034 6360     		str	r3, [r4, #4]
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 46


 205              		.loc 1 2076 0
 206 0036 0020     		movs	r0, #0
 207 0038 1AE0     		b	.L14
 208              	.LVL26:
 209              	.L15:
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 210              		.loc 1 2115 0
 211 003a C068     		ldr	r0, [r0, #12]
 212              	.LVL27:
 213 003c FFF7FEFF 		bl	memcpy
 214              	.LVL28:
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 215              		.loc 1 2116 0
 216 0040 236C     		ldr	r3, [r4, #64]
 217 0042 5B42     		negs	r3, r3
 218 0044 E268     		ldr	r2, [r4, #12]
 219 0046 1A44     		add	r2, r2, r3
 220 0048 E260     		str	r2, [r4, #12]
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 221              		.loc 1 2117 0
 222 004a 2168     		ldr	r1, [r4]
 223 004c 8A42     		cmp	r2, r1
 224 004e 02D2     		bcs	.L16
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 225              		.loc 1 2119 0
 226 0050 A268     		ldr	r2, [r4, #8]
 227 0052 1344     		add	r3, r3, r2
 228 0054 E360     		str	r3, [r4, #12]
 229              	.L16:
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 230              		.loc 1 2126 0
 231 0056 022E     		cmp	r6, #2
 232 0058 07D1     		bne	.L19
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 233              		.loc 1 2128 0
 234 005a 45B1     		cbz	r5, .L20
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 235              		.loc 1 2134 0
 236 005c 013D     		subs	r5, r5, #1
 237              	.LVL29:
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 238              		.loc 1 2076 0
 239 005e 0020     		movs	r0, #0
 240 0060 06E0     		b	.L14
 241              	.LVL30:
 242              	.L17:
 243 0062 0020     		movs	r0, #0
 244              	.LVL31:
 245 0064 04E0     		b	.L14
 246              	.LVL32:
 247              	.L18:
 248 0066 0020     		movs	r0, #0
 249 0068 02E0     		b	.L14
 250              	.L19:
 251 006a 0020     		movs	r0, #0
 252 006c 00E0     		b	.L14
 253              	.L20:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 47


 254 006e 0020     		movs	r0, #0
 255              	.LVL33:
 256              	.L14:
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 257              		.loc 1 2147 0
 258 0070 0135     		adds	r5, r5, #1
 259              	.LVL34:
 260 0072 A563     		str	r5, [r4, #56]
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 261              		.loc 1 2150 0
 262 0074 70BD     		pop	{r4, r5, r6, pc}
 263              		.cfi_endproc
 264              	.LFE29:
 266 0076 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 267              		.align	2
 268              		.thumb
 269              		.thumb_func
 271              	prvCopyDataFromQueue:
 272              	.LFB30:
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 273              		.loc 1 2154 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL35:
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 278              		.loc 1 2155 0
 279 0000 026C     		ldr	r2, [r0, #64]
 280 0002 72B1     		cbz	r2, .L26
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 281              		.loc 1 2154 0
 282 0004 10B5     		push	{r4, lr}
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
 286              		.cfi_offset 14, -4
 287 0006 0346     		mov	r3, r0
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 288              		.loc 1 2157 0
 289 0008 C468     		ldr	r4, [r0, #12]
 290 000a 1444     		add	r4, r4, r2
 291 000c C460     		str	r4, [r0, #12]
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 292              		.loc 1 2158 0
 293 000e 8068     		ldr	r0, [r0, #8]
 294              	.LVL36:
 295 0010 8442     		cmp	r4, r0
 296 0012 01D3     		bcc	.L24
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 297              		.loc 1 2160 0
 298 0014 1868     		ldr	r0, [r3]
 299 0016 D860     		str	r0, [r3, #12]
 300              	.L24:
 301 0018 0846     		mov	r0, r1
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 302              		.loc 1 2166 0
 303 001a D968     		ldr	r1, [r3, #12]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 48


 304              	.LVL37:
 305 001c FFF7FEFF 		bl	memcpy
 306              	.LVL38:
 307 0020 10BD     		pop	{r4, pc}
 308              	.LVL39:
 309              	.L26:
 310              	.LCFI4:
 311              		.cfi_def_cfa_offset 0
 312              		.cfi_restore 4
 313              		.cfi_restore 14
 314 0022 7047     		bx	lr
 315              		.cfi_endproc
 316              	.LFE30:
 318              		.section	.text.prvUnlockQueue,"ax",%progbits
 319              		.align	2
 320              		.thumb
 321              		.thumb_func
 323              	prvUnlockQueue:
 324              	.LFB31:
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 325              		.loc 1 2172 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL40:
 330 0000 38B5     		push	{r3, r4, r5, lr}
 331              	.LCFI5:
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 3, -16
 334              		.cfi_offset 4, -12
 335              		.cfi_offset 5, -8
 336              		.cfi_offset 14, -4
 337 0002 0546     		mov	r5, r0
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 338              		.loc 1 2179 0
 339 0004 FFF7FEFF 		bl	vPortEnterCritical
 340              	.LVL41:
 341              	.LBB116:
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 342              		.loc 1 2181 0
 343 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 344 000c 64B2     		sxtb	r4, r4
 345              	.LVL42:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 346              		.loc 1 2184 0
 347 000e 0AE0     		b	.L28
 348              	.L31:
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 349              		.loc 1 2232 0
 350 0010 6B6A     		ldr	r3, [r5, #36]
 351 0012 53B1     		cbz	r3, .L29
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 352              		.loc 1 2234 0
 353 0014 05F12400 		add	r0, r5, #36
 354 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 355              	.LVL43:
 356 001c 08B1     		cbz	r0, .L30
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 49


2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 357              		.loc 1 2238 0
 358 001e FFF7FEFF 		bl	vTaskMissedYield
 359              	.LVL44:
 360              	.L30:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 361              		.loc 1 2252 0
 362 0022 013C     		subs	r4, r4, #1
 363              	.LVL45:
 364 0024 64B2     		sxtb	r4, r4
 365              	.LVL46:
 366              	.L28:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 367              		.loc 1 2184 0
 368 0026 002C     		cmp	r4, #0
 369 0028 F2DC     		bgt	.L31
 370              	.L29:
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 371              		.loc 1 2255 0
 372 002a FF23     		movs	r3, #255
 373 002c 85F84530 		strb	r3, [r5, #69]
 374              	.LBE116:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 375              		.loc 1 2257 0
 376 0030 FFF7FEFF 		bl	vPortExitCritical
 377              	.LVL47:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 378              		.loc 1 2260 0
 379 0034 FFF7FEFF 		bl	vPortEnterCritical
 380              	.LVL48:
 381              	.LBB117:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 382              		.loc 1 2262 0
 383 0038 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 384              	.LVL49:
 385 003c 64B2     		sxtb	r4, r4
 386              	.LVL50:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 387              		.loc 1 2264 0
 388 003e 0AE0     		b	.L32
 389              	.L35:
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 390              		.loc 1 2266 0
 391 0040 2B69     		ldr	r3, [r5, #16]
 392 0042 53B1     		cbz	r3, .L33
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 393              		.loc 1 2268 0
 394 0044 05F11000 		add	r0, r5, #16
 395 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 396              	.LVL51:
 397 004c 08B1     		cbz	r0, .L34
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 398              		.loc 1 2270 0
 399 004e FFF7FEFF 		bl	vTaskMissedYield
 400              	.LVL52:
 401              	.L34:
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 50


 402              		.loc 1 2277 0
 403 0052 013C     		subs	r4, r4, #1
 404              	.LVL53:
 405 0054 64B2     		sxtb	r4, r4
 406              	.LVL54:
 407              	.L32:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 408              		.loc 1 2264 0
 409 0056 002C     		cmp	r4, #0
 410 0058 F2DC     		bgt	.L35
 411              	.L33:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 412              		.loc 1 2285 0
 413 005a FF23     		movs	r3, #255
 414 005c 85F84430 		strb	r3, [r5, #68]
 415              	.LBE117:
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 416              		.loc 1 2287 0
 417 0060 FFF7FEFF 		bl	vPortExitCritical
 418              	.LVL55:
 419 0064 38BD     		pop	{r3, r4, r5, pc}
 420              		.cfi_endproc
 421              	.LFE31:
 423 0066 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 424              		.align	2
 425              		.global	xQueueGenericReset
 426              		.thumb
 427              		.thumb_func
 429              	xQueueGenericReset:
 430              	.LFB5:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 431              		.loc 1 256 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL56:
 436 0000 38B5     		push	{r3, r4, r5, lr}
 437              	.LCFI6:
 438              		.cfi_def_cfa_offset 16
 439              		.cfi_offset 3, -16
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 5, -8
 442              		.cfi_offset 14, -4
 443              	.LVL57:
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 444              		.loc 1 259 0
 445 0002 40B9     		cbnz	r0, .L38
 446              	.LBB118:
 447              	.LBB119:
 448              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 51


   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 52


  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 53


 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 54


 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 449              		.loc 2 195 0
 450              		.syntax unified
 451              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 452 0004 4FF05003 			mov r3, #80												
 453 0008 83F31188 		msr basepri, r3											
 454 000c BFF36F8F 		isb														
 455 0010 BFF34F8F 		dsb														
 456              	
 457              	@ 0 "" 2
 458              	.LVL58:
 459              		.thumb
 460              		.syntax unified
 461              	.L39:
 462 0014 FEE7     		b	.L39
 463              	.L38:
 464 0016 0446     		mov	r4, r0
 465 0018 0D46     		mov	r5, r1
 466              	.LBE119:
 467              	.LBE118:
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468              		.loc 1 261 0
 469 001a FFF7FEFF 		bl	vPortEnterCritical
 470              	.LVL59:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 471              		.loc 1 263 0
 472 001e 2168     		ldr	r1, [r4]
 473 0020 E26B     		ldr	r2, [r4, #60]
 474 0022 236C     		ldr	r3, [r4, #64]
 475 0024 03FB0210 		mla	r0, r3, r2, r1
 476 0028 A060     		str	r0, [r4, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 477              		.loc 1 264 0
 478 002a 0020     		movs	r0, #0
 479 002c A063     		str	r0, [r4, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 480              		.loc 1 265 0
 481 002e 6160     		str	r1, [r4, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 482              		.loc 1 266 0
 483 0030 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 55


 484 0032 02FB0313 		mla	r3, r2, r3, r1
 485 0036 E360     		str	r3, [r4, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 486              		.loc 1 267 0
 487 0038 FF23     		movs	r3, #255
 488 003a 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 489              		.loc 1 268 0
 490 003e 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 491              		.loc 1 270 0
 492 0042 7DB9     		cbnz	r5, .L40
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 493              		.loc 1 277 0
 494 0044 2369     		ldr	r3, [r4, #16]
 495 0046 ABB1     		cbz	r3, .L41
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 496              		.loc 1 279 0
 497 0048 04F11000 		add	r0, r4, #16
 498 004c FFF7FEFF 		bl	xTaskRemoveFromEventList
 499              	.LVL60:
 500 0050 80B1     		cbz	r0, .L41
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 501              		.loc 1 281 0
 502 0052 4FF08052 		mov	r2, #268435456
 503 0056 094B     		ldr	r3, .L43
 504 0058 1A60     		str	r2, [r3]
 505              		.syntax unified
 506              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 507 005a BFF34F8F 		dsb
 508              	@ 0 "" 2
 509              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 510 005e BFF36F8F 		isb
 511              	@ 0 "" 2
 512              		.thumb
 513              		.syntax unified
 514 0062 07E0     		b	.L41
 515              	.L40:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 516              		.loc 1 296 0
 517 0064 04F11000 		add	r0, r4, #16
 518 0068 FFF7FEFF 		bl	vListInitialise
 519              	.LVL61:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 520              		.loc 1 297 0
 521 006c 04F12400 		add	r0, r4, #36
 522 0070 FFF7FEFF 		bl	vListInitialise
 523              	.LVL62:
 524              	.L41:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 525              		.loc 1 300 0
 526 0074 FFF7FEFF 		bl	vPortExitCritical
 527              	.LVL63:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 528              		.loc 1 305 0
 529 0078 0120     		movs	r0, #1
 530 007a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 56


 531              	.LVL64:
 532              	.L44:
 533              		.align	2
 534              	.L43:
 535 007c 04ED00E0 		.word	-536810236
 536              		.cfi_endproc
 537              	.LFE5:
 539              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 540              		.align	2
 541              		.thumb
 542              		.thumb_func
 544              	prvInitialiseNewQueue:
 545              	.LFB8:
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 546              		.loc 1 423 0
 547              		.cfi_startproc
 548              		@ args = 4, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL65:
 551 0000 10B5     		push	{r4, lr}
 552              	.LCFI7:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 4, -8
 555              		.cfi_offset 14, -4
 556 0002 029B     		ldr	r3, [sp, #8]
 557              	.LVL66:
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 558              		.loc 1 428 0
 559 0004 0C46     		mov	r4, r1
 560 0006 09B9     		cbnz	r1, .L46
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 561              		.loc 1 434 0
 562 0008 1B60     		str	r3, [r3]
 563 000a 00E0     		b	.L47
 564              	.L46:
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 565              		.loc 1 439 0
 566 000c 1A60     		str	r2, [r3]
 567              	.L47:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 568              		.loc 1 444 0
 569 000e D863     		str	r0, [r3, #60]
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 570              		.loc 1 445 0
 571 0010 1C64     		str	r4, [r3, #64]
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572              		.loc 1 446 0
 573 0012 0121     		movs	r1, #1
 574              	.LVL67:
 575 0014 1846     		mov	r0, r3
 576              	.LVL68:
 577 0016 FFF7FEFF 		bl	xQueueGenericReset
 578              	.LVL69:
 579 001a 10BD     		pop	{r4, pc}
 580              		.cfi_endproc
 581              	.LFE8:
 583              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 57


 584              		.align	2
 585              		.global	xQueueGenericCreateStatic
 586              		.thumb
 587              		.thumb_func
 589              	xQueueGenericCreateStatic:
 590              	.LFB6:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 591              		.loc 1 311 0
 592              		.cfi_startproc
 593              		@ args = 4, pretend = 0, frame = 8
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL70:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596              		.loc 1 314 0
 597 0000 40B9     		cbnz	r0, .L50
 598              	.LBB120:
 599              	.LBB121:
 600              		.loc 2 195 0
 601              		.syntax unified
 602              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 603 0002 4FF05003 			mov r3, #80												
 604 0006 83F31188 		msr basepri, r3											
 605 000a BFF36F8F 		isb														
 606 000e BFF34F8F 		dsb														
 607              	
 608              	@ 0 "" 2
 609              	.LVL71:
 610              		.thumb
 611              		.syntax unified
 612              	.L51:
 613 0012 FEE7     		b	.L51
 614              	.LVL72:
 615              	.L50:
 616              	.LBE121:
 617              	.LBE120:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 618              		.loc 1 311 0
 619 0014 10B5     		push	{r4, lr}
 620              	.LCFI8:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 624 0016 84B0     		sub	sp, sp, #16
 625              	.LCFI9:
 626              		.cfi_def_cfa_offset 24
 627 0018 0446     		mov	r4, r0
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 628              		.loc 1 318 0
 629 001a 43B9     		cbnz	r3, .L52
 630              	.LBB122:
 631              	.LBB123:
 632              		.loc 2 195 0
 633              		.syntax unified
 634              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 635 001c 4FF05003 			mov r3, #80												
 636 0020 83F31188 		msr basepri, r3											
 637 0024 BFF36F8F 		isb														
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 58


 638 0028 BFF34F8F 		dsb														
 639              	
 640              	@ 0 "" 2
 641              	.LVL73:
 642              		.thumb
 643              		.syntax unified
 644              	.L53:
 645 002c FEE7     		b	.L53
 646              	.LVL74:
 647              	.L52:
 648              	.LBE123:
 649              	.LBE122:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 650              		.loc 1 322 0
 651 002e 12B1     		cbz	r2, .L63
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 652              		.loc 1 322 0 is_stmt 0 discriminator 2
 653 0030 19B1     		cbz	r1, .L64
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 654              		.loc 1 322 0
 655 0032 0120     		movs	r0, #1
 656              	.LVL75:
 657 0034 02E0     		b	.L54
 658              	.LVL76:
 659              	.L63:
 660 0036 0120     		movs	r0, #1
 661              	.LVL77:
 662 0038 00E0     		b	.L54
 663              	.LVL78:
 664              	.L64:
 665 003a 0020     		movs	r0, #0
 666              	.LVL79:
 667              	.L54:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 668              		.loc 1 322 0 discriminator 6
 669 003c 40B9     		cbnz	r0, .L55
 670              	.LBB124:
 671              	.LBB125:
 672              		.loc 2 195 0 is_stmt 1
 673              		.syntax unified
 674              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 675 003e 4FF05003 			mov r3, #80												
 676 0042 83F31188 		msr basepri, r3											
 677 0046 BFF36F8F 		isb														
 678 004a BFF34F8F 		dsb														
 679              	
 680              	@ 0 "" 2
 681              	.LVL80:
 682              		.thumb
 683              		.syntax unified
 684              	.L56:
 685 004e FEE7     		b	.L56
 686              	.LVL81:
 687              	.L55:
 688              	.LBE125:
 689              	.LBE124:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 59


 690              		.loc 1 323 0
 691 0050 12B9     		cbnz	r2, .L65
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692              		.loc 1 323 0 is_stmt 0 discriminator 2
 693 0052 19B9     		cbnz	r1, .L66
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694              		.loc 1 323 0
 695 0054 0120     		movs	r0, #1
 696 0056 02E0     		b	.L57
 697              	.L65:
 698 0058 0120     		movs	r0, #1
 699 005a 00E0     		b	.L57
 700              	.L66:
 701 005c 0020     		movs	r0, #0
 702              	.L57:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703              		.loc 1 323 0 discriminator 6
 704 005e 40B9     		cbnz	r0, .L58
 705              	.LBB126:
 706              	.LBB127:
 707              		.loc 2 195 0 is_stmt 1
 708              		.syntax unified
 709              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 710 0060 4FF05003 			mov r3, #80												
 711 0064 83F31188 		msr basepri, r3											
 712 0068 BFF36F8F 		isb														
 713 006c BFF34F8F 		dsb														
 714              	
 715              	@ 0 "" 2
 716              	.LVL82:
 717              		.thumb
 718              		.syntax unified
 719              	.L59:
 720 0070 FEE7     		b	.L59
 721              	.LVL83:
 722              	.L58:
 723              	.LBE127:
 724              	.LBE126:
 725              	.LBB128:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 726              		.loc 1 330 0
 727 0072 4820     		movs	r0, #72
 728 0074 0390     		str	r0, [sp, #12]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 729              		.loc 1 331 0
 730 0076 0398     		ldr	r0, [sp, #12]
 731 0078 4828     		cmp	r0, #72
 732 007a 08D0     		beq	.L60
 733              	.LBB129:
 734              	.LBB130:
 735              		.loc 2 195 0
 736              		.syntax unified
 737              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 738 007c 4FF05003 			mov r3, #80												
 739 0080 83F31188 		msr basepri, r3											
 740 0084 BFF36F8F 		isb														
 741 0088 BFF34F8F 		dsb														
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 60


 742              	
 743              	@ 0 "" 2
 744              	.LVL84:
 745              		.thumb
 746              		.syntax unified
 747              	.L61:
 748 008c FEE7     		b	.L61
 749              	.LVL85:
 750              	.L60:
 751 008e 2046     		mov	r0, r4
 752 0090 1C46     		mov	r4, r3
 753              	.LVL86:
 754              	.LBE130:
 755              	.LBE129:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 756              		.loc 1 332 0
 757 0092 039B     		ldr	r3, [sp, #12]
 758              	.LVL87:
 759              	.LBE128:
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 760              		.loc 1 341 0
 761 0094 3CB1     		cbz	r4, .L62
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 762              		.loc 1 348 0
 763 0096 0123     		movs	r3, #1
 764 0098 84F84630 		strb	r3, [r4, #70]
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 765              		.loc 1 352 0
 766 009c 0094     		str	r4, [sp]
 767 009e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 768 00a2 FFF7FEFF 		bl	prvInitialiseNewQueue
 769              	.LVL88:
 770              	.L62:
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771              		.loc 1 361 0
 772 00a6 2046     		mov	r0, r4
 773 00a8 04B0     		add	sp, sp, #16
 774              	.LCFI10:
 775              		.cfi_def_cfa_offset 8
 776              		@ sp needed
 777 00aa 10BD     		pop	{r4, pc}
 778              		.cfi_endproc
 779              	.LFE6:
 781              		.section	.text.xQueueGenericCreate,"ax",%progbits
 782              		.align	2
 783              		.global	xQueueGenericCreate
 784              		.thumb
 785              		.thumb_func
 787              	xQueueGenericCreate:
 788              	.LFB7:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 789              		.loc 1 369 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL89:
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 61


 794              		.loc 1 374 0
 795 0000 40B9     		cbnz	r0, .L69
 796              	.LBB131:
 797              	.LBB132:
 798              		.loc 2 195 0
 799              		.syntax unified
 800              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 801 0002 4FF05003 			mov r3, #80												
 802 0006 83F31188 		msr basepri, r3											
 803 000a BFF36F8F 		isb														
 804 000e BFF34F8F 		dsb														
 805              	
 806              	@ 0 "" 2
 807              	.LVL90:
 808              		.thumb
 809              		.syntax unified
 810              	.L70:
 811 0012 FEE7     		b	.L70
 812              	.L69:
 813              	.LBE132:
 814              	.LBE131:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 815              		.loc 1 369 0
 816 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 817              	.LCFI11:
 818              		.cfi_def_cfa_offset 20
 819              		.cfi_offset 4, -20
 820              		.cfi_offset 5, -16
 821              		.cfi_offset 6, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0016 83B0     		sub	sp, sp, #12
 825              	.LCFI12:
 826              		.cfi_def_cfa_offset 32
 827 0018 0546     		mov	r5, r0
 828 001a 1746     		mov	r7, r2
 829 001c 0E46     		mov	r6, r1
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 830              		.loc 1 379 0
 831 001e 01FB00F0 		mul	r0, r1, r0
 832              	.LVL91:
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 833              		.loc 1 390 0
 834 0022 4830     		adds	r0, r0, #72
 835              	.LVL92:
 836 0024 FFF7FEFF 		bl	pvPortMalloc
 837              	.LVL93:
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 838              		.loc 1 392 0
 839 0028 0446     		mov	r4, r0
 840 002a 50B1     		cbz	r0, .L71
 841              	.LVL94:
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 842              		.loc 1 404 0
 843 002c 0023     		movs	r3, #0
 844 002e 80F84630 		strb	r3, [r0, #70]
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 62


 845              		.loc 1 408 0
 846 0032 0090     		str	r0, [sp]
 847 0034 3B46     		mov	r3, r7
 848 0036 00F14802 		add	r2, r0, #72
 849              	.LVL95:
 850 003a 3146     		mov	r1, r6
 851 003c 2846     		mov	r0, r5
 852              	.LVL96:
 853 003e FFF7FEFF 		bl	prvInitialiseNewQueue
 854              	.LVL97:
 855              	.L71:
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 856              		.loc 1 417 0
 857 0042 2046     		mov	r0, r4
 858 0044 03B0     		add	sp, sp, #12
 859              	.LCFI13:
 860              		.cfi_def_cfa_offset 20
 861              		@ sp needed
 862 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 863              		.cfi_endproc
 864              	.LFE7:
 866              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 867              		.align	2
 868              		.global	xQueueCreateCountingSemaphoreStatic
 869              		.thumb
 870              		.thumb_func
 872              	xQueueCreateCountingSemaphoreStatic:
 873              	.LFB14:
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 874              		.loc 1 687 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL98:
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 879              		.loc 1 690 0
 880 0000 40B9     		cbnz	r0, .L74
 881              	.LBB133:
 882              	.LBB134:
 883              		.loc 2 195 0
 884              		.syntax unified
 885              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 886 0002 4FF05003 			mov r3, #80												
 887 0006 83F31188 		msr basepri, r3											
 888 000a BFF36F8F 		isb														
 889 000e BFF34F8F 		dsb														
 890              	
 891              	@ 0 "" 2
 892              	.LVL99:
 893              		.thumb
 894              		.syntax unified
 895              	.L75:
 896 0012 FEE7     		b	.L75
 897              	.L74:
 898              	.LBE134:
 899              	.LBE133:
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 63


 900              		.loc 1 691 0
 901 0014 8842     		cmp	r0, r1
 902 0016 08D2     		bcs	.L76
 903              	.LBB135:
 904              	.LBB136:
 905              		.loc 2 195 0
 906              		.syntax unified
 907              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 908 0018 4FF05003 			mov r3, #80												
 909 001c 83F31188 		msr basepri, r3											
 910 0020 BFF36F8F 		isb														
 911 0024 BFF34F8F 		dsb														
 912              	
 913              	@ 0 "" 2
 914              	.LVL100:
 915              		.thumb
 916              		.syntax unified
 917              	.L77:
 918 0028 FEE7     		b	.L77
 919              	.L76:
 920              	.LBE136:
 921              	.LBE135:
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 922              		.loc 1 687 0
 923 002a 10B5     		push	{r4, lr}
 924              	.LCFI14:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 002c 82B0     		sub	sp, sp, #8
 929              	.LCFI15:
 930              		.cfi_def_cfa_offset 16
 931 002e 1346     		mov	r3, r2
 932 0030 0C46     		mov	r4, r1
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933              		.loc 1 693 0
 934 0032 0222     		movs	r2, #2
 935              	.LVL101:
 936 0034 0092     		str	r2, [sp]
 937 0036 0022     		movs	r2, #0
 938 0038 1146     		mov	r1, r2
 939              	.LVL102:
 940 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 941              	.LVL103:
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 942              		.loc 1 695 0
 943 003e 0346     		mov	r3, r0
 944 0040 00B1     		cbz	r0, .L78
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 945              		.loc 1 697 0
 946 0042 8463     		str	r4, [r0, #56]
 947              	.L78:
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 948              		.loc 1 707 0
 949 0044 1846     		mov	r0, r3
 950              	.LVL104:
 951 0046 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 64


 952              	.LCFI16:
 953              		.cfi_def_cfa_offset 8
 954              		@ sp needed
 955 0048 10BD     		pop	{r4, pc}
 956              		.cfi_endproc
 957              	.LFE14:
 959 004a 00BF     		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 960              		.align	2
 961              		.global	xQueueCreateCountingSemaphore
 962              		.thumb
 963              		.thumb_func
 965              	xQueueCreateCountingSemaphore:
 966              	.LFB15:
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 967              		.loc 1 715 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL105:
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 972              		.loc 1 718 0
 973 0000 40B9     		cbnz	r0, .L81
 974              	.LBB137:
 975              	.LBB138:
 976              		.loc 2 195 0
 977              		.syntax unified
 978              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 979 0002 4FF05003 			mov r3, #80												
 980 0006 83F31188 		msr basepri, r3											
 981 000a BFF36F8F 		isb														
 982 000e BFF34F8F 		dsb														
 983              	
 984              	@ 0 "" 2
 985              	.LVL106:
 986              		.thumb
 987              		.syntax unified
 988              	.L82:
 989 0012 FEE7     		b	.L82
 990              	.L81:
 991              	.LBE138:
 992              	.LBE137:
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 993              		.loc 1 719 0
 994 0014 8842     		cmp	r0, r1
 995 0016 08D2     		bcs	.L83
 996              	.LBB139:
 997              	.LBB140:
 998              		.loc 2 195 0
 999              		.syntax unified
 1000              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1001 0018 4FF05003 			mov r3, #80												
 1002 001c 83F31188 		msr basepri, r3											
 1003 0020 BFF36F8F 		isb														
 1004 0024 BFF34F8F 		dsb														
 1005              	
 1006              	@ 0 "" 2
 1007              	.LVL107:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 65


 1008              		.thumb
 1009              		.syntax unified
 1010              	.L84:
 1011 0028 FEE7     		b	.L84
 1012              	.L83:
 1013              	.LBE140:
 1014              	.LBE139:
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1015              		.loc 1 715 0
 1016 002a 10B5     		push	{r4, lr}
 1017              	.LCFI17:
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 4, -8
 1020              		.cfi_offset 14, -4
 1021 002c 0C46     		mov	r4, r1
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1022              		.loc 1 721 0
 1023 002e 0222     		movs	r2, #2
 1024 0030 0021     		movs	r1, #0
 1025              	.LVL108:
 1026 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1027              	.LVL109:
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1028              		.loc 1 723 0
 1029 0036 0346     		mov	r3, r0
 1030 0038 00B1     		cbz	r0, .L85
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1031              		.loc 1 725 0
 1032 003a 8463     		str	r4, [r0, #56]
 1033              	.L85:
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1034              		.loc 1 735 0
 1035 003c 1846     		mov	r0, r3
 1036              	.LVL110:
 1037 003e 10BD     		pop	{r4, pc}
 1038              		.cfi_endproc
 1039              	.LFE15:
 1041              		.section	.text.xQueueGenericSend,"ax",%progbits
 1042              		.align	2
 1043              		.global	xQueueGenericSend
 1044              		.thumb
 1045              		.thumb_func
 1047              	xQueueGenericSend:
 1048              	.LFB16:
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1049              		.loc 1 741 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL111:
 1054 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1055              	.LCFI18:
 1056              		.cfi_def_cfa_offset 20
 1057              		.cfi_offset 4, -20
 1058              		.cfi_offset 5, -16
 1059              		.cfi_offset 6, -12
 1060              		.cfi_offset 7, -8
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 66


 1061              		.cfi_offset 14, -4
 1062 0002 85B0     		sub	sp, sp, #20
 1063              	.LCFI19:
 1064              		.cfi_def_cfa_offset 40
 1065 0004 0192     		str	r2, [sp, #4]
 1066              	.LVL112:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1067              		.loc 1 746 0
 1068 0006 40B9     		cbnz	r0, .L88
 1069              	.LBB141:
 1070              	.LBB142:
 1071              		.loc 2 195 0
 1072              		.syntax unified
 1073              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1074 0008 4FF05003 			mov r3, #80												
 1075 000c 83F31188 		msr basepri, r3											
 1076 0010 BFF36F8F 		isb														
 1077 0014 BFF34F8F 		dsb														
 1078              	
 1079              	@ 0 "" 2
 1080              	.LVL113:
 1081              		.thumb
 1082              		.syntax unified
 1083              	.L89:
 1084 0018 FEE7     		b	.L89
 1085              	.LVL114:
 1086              	.L88:
 1087 001a 0446     		mov	r4, r0
 1088              	.LBE142:
 1089              	.LBE141:
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1090              		.loc 1 747 0
 1091 001c 19B9     		cbnz	r1, .L111
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1092              		.loc 1 747 0 is_stmt 0 discriminator 2
 1093 001e 026C     		ldr	r2, [r0, #64]
 1094              	.LVL115:
 1095 0020 1AB9     		cbnz	r2, .L112
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1096              		.loc 1 747 0
 1097 0022 0122     		movs	r2, #1
 1098 0024 02E0     		b	.L90
 1099              	.LVL116:
 1100              	.L111:
 1101 0026 0122     		movs	r2, #1
 1102              	.LVL117:
 1103 0028 00E0     		b	.L90
 1104              	.L112:
 1105 002a 0022     		movs	r2, #0
 1106              	.L90:
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1107              		.loc 1 747 0 discriminator 6
 1108 002c 42B9     		cbnz	r2, .L91
 1109              	.LBB143:
 1110              	.LBB144:
 1111              		.loc 2 195 0 is_stmt 1
 1112              		.syntax unified
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 67


 1113              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1114 002e 4FF05003 			mov r3, #80												
 1115 0032 83F31188 		msr basepri, r3											
 1116 0036 BFF36F8F 		isb														
 1117 003a BFF34F8F 		dsb														
 1118              	
 1119              	@ 0 "" 2
 1120              	.LVL118:
 1121              		.thumb
 1122              		.syntax unified
 1123              	.L92:
 1124 003e FEE7     		b	.L92
 1125              	.LVL119:
 1126              	.L91:
 1127              	.LBE144:
 1128              	.LBE143:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1129              		.loc 1 748 0
 1130 0040 022B     		cmp	r3, #2
 1131 0042 03D1     		bne	.L113
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1132              		.loc 1 748 0 is_stmt 0 discriminator 2
 1133 0044 E26B     		ldr	r2, [r4, #60]
 1134 0046 012A     		cmp	r2, #1
 1135 0048 02D1     		bne	.L114
 1136 004a 02E0     		b	.L93
 1137              	.L113:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1138              		.loc 1 748 0
 1139 004c 0122     		movs	r2, #1
 1140 004e 00E0     		b	.L93
 1141              	.L114:
 1142 0050 0022     		movs	r2, #0
 1143              	.L93:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1144              		.loc 1 748 0 discriminator 6
 1145 0052 42B9     		cbnz	r2, .L94
 1146              	.LBB145:
 1147              	.LBB146:
 1148              		.loc 2 195 0 is_stmt 1
 1149              		.syntax unified
 1150              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1151 0054 4FF05003 			mov r3, #80												
 1152 0058 83F31188 		msr basepri, r3											
 1153 005c BFF36F8F 		isb														
 1154 0060 BFF34F8F 		dsb														
 1155              	
 1156              	@ 0 "" 2
 1157              	.LVL120:
 1158              		.thumb
 1159              		.syntax unified
 1160              	.L95:
 1161 0064 FEE7     		b	.L95
 1162              	.LVL121:
 1163              	.L94:
 1164 0066 1D46     		mov	r5, r3
 1165 0068 0E46     		mov	r6, r1
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 68


 1166              	.LBE146:
 1167              	.LBE145:
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1168              		.loc 1 751 0
 1169 006a FFF7FEFF 		bl	xTaskGetSchedulerState
 1170              	.LVL122:
 1171 006e 18B9     		cbnz	r0, .L115
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1172              		.loc 1 751 0 is_stmt 0 discriminator 2
 1173 0070 019B     		ldr	r3, [sp, #4]
 1174 0072 1BB9     		cbnz	r3, .L116
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1175              		.loc 1 751 0
 1176 0074 0123     		movs	r3, #1
 1177 0076 02E0     		b	.L96
 1178              	.L115:
 1179 0078 0123     		movs	r3, #1
 1180 007a 00E0     		b	.L96
 1181              	.L116:
 1182 007c 0023     		movs	r3, #0
 1183              	.L96:
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1184              		.loc 1 751 0 discriminator 6
 1185 007e 43B9     		cbnz	r3, .L117
 1186              	.LBB147:
 1187              	.LBB148:
 1188              		.loc 2 195 0 is_stmt 1
 1189              		.syntax unified
 1190              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1191 0080 4FF05003 			mov r3, #80												
 1192 0084 83F31188 		msr basepri, r3											
 1193 0088 BFF36F8F 		isb														
 1194 008c BFF34F8F 		dsb														
 1195              	
 1196              	@ 0 "" 2
 1197              	.LVL123:
 1198              		.thumb
 1199              		.syntax unified
 1200              	.L98:
 1201 0090 FEE7     		b	.L98
 1202              	.L117:
 1203              	.LBE148:
 1204              	.LBE147:
 1205 0092 0027     		movs	r7, #0
 1206              	.LVL124:
 1207              	.L97:
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1208              		.loc 1 761 0
 1209 0094 FFF7FEFF 		bl	vPortEnterCritical
 1210              	.LVL125:
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1211              		.loc 1 767 0
 1212 0098 A26B     		ldr	r2, [r4, #56]
 1213 009a E36B     		ldr	r3, [r4, #60]
 1214 009c 9A42     		cmp	r2, r3
 1215 009e 01D3     		bcc	.L99
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 69


 1216              		.loc 1 767 0 is_stmt 0 discriminator 1
 1217 00a0 022D     		cmp	r5, #2
 1218 00a2 21D1     		bne	.L100
 1219              	.L99:
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1220              		.loc 1 833 0 is_stmt 1
 1221 00a4 2A46     		mov	r2, r5
 1222 00a6 3146     		mov	r1, r6
 1223 00a8 2046     		mov	r0, r4
 1224 00aa FFF7FEFF 		bl	prvCopyDataToQueue
 1225              	.LVL126:
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1226              		.loc 1 837 0
 1227 00ae 636A     		ldr	r3, [r4, #36]
 1228 00b0 6BB1     		cbz	r3, .L101
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1229              		.loc 1 839 0
 1230 00b2 04F12400 		add	r0, r4, #36
 1231              	.LVL127:
 1232 00b6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1233              	.LVL128:
 1234 00ba 88B1     		cbz	r0, .L102
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1235              		.loc 1 845 0
 1236 00bc 4FF08052 		mov	r2, #268435456
 1237 00c0 324B     		ldr	r3, .L119
 1238 00c2 1A60     		str	r2, [r3]
 1239              		.syntax unified
 1240              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1241 00c4 BFF34F8F 		dsb
 1242              	@ 0 "" 2
 1243              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1244 00c8 BFF36F8F 		isb
 1245              	@ 0 "" 2
 1246              		.thumb
 1247              		.syntax unified
 1248 00cc 08E0     		b	.L102
 1249              	.LVL129:
 1250              	.L101:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1251              		.loc 1 852 0
 1252 00ce 38B1     		cbz	r0, .L102
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1253              		.loc 1 858 0
 1254 00d0 4FF08052 		mov	r2, #268435456
 1255 00d4 2D4B     		ldr	r3, .L119
 1256 00d6 1A60     		str	r2, [r3]
 1257              		.syntax unified
 1258              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1259 00d8 BFF34F8F 		dsb
 1260              	@ 0 "" 2
 1261              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1262 00dc BFF36F8F 		isb
 1263              	@ 0 "" 2
 1264              	.LVL130:
 1265              		.thumb
 1266              		.syntax unified
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 70


 1267              	.L102:
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1268              		.loc 1 867 0
 1269 00e0 FFF7FEFF 		bl	vPortExitCritical
 1270              	.LVL131:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1271              		.loc 1 868 0
 1272 00e4 0120     		movs	r0, #1
 1273 00e6 4EE0     		b	.L103
 1274              	.L100:
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1275              		.loc 1 872 0
 1276 00e8 019B     		ldr	r3, [sp, #4]
 1277 00ea 1BB9     		cbnz	r3, .L104
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1278              		.loc 1 876 0
 1279 00ec FFF7FEFF 		bl	vPortExitCritical
 1280              	.LVL132:
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1281              		.loc 1 881 0
 1282 00f0 0020     		movs	r0, #0
 1283 00f2 48E0     		b	.L103
 1284              	.L104:
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1285              		.loc 1 883 0
 1286 00f4 1FB9     		cbnz	r7, .L105
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1287              		.loc 1 887 0
 1288 00f6 02A8     		add	r0, sp, #8
 1289 00f8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1290              	.LVL133:
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1291              		.loc 1 888 0
 1292 00fc 0127     		movs	r7, #1
 1293              	.LVL134:
 1294              	.L105:
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1295              		.loc 1 897 0
 1296 00fe FFF7FEFF 		bl	vPortExitCritical
 1297              	.LVL135:
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1298              		.loc 1 902 0
 1299 0102 FFF7FEFF 		bl	vTaskSuspendAll
 1300              	.LVL136:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1301              		.loc 1 903 0
 1302 0106 FFF7FEFF 		bl	vPortEnterCritical
 1303              	.LVL137:
 1304 010a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1305 010e 5BB2     		sxtb	r3, r3
 1306 0110 B3F1FF3F 		cmp	r3, #-1
 1307 0114 02D1     		bne	.L106
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1308              		.loc 1 903 0 is_stmt 0 discriminator 1
 1309 0116 0023     		movs	r3, #0
 1310 0118 84F84430 		strb	r3, [r4, #68]
 1311              	.L106:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 71


 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1312              		.loc 1 903 0 discriminator 3
 1313 011c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1314 0120 5BB2     		sxtb	r3, r3
 1315 0122 B3F1FF3F 		cmp	r3, #-1
 1316 0126 02D1     		bne	.L107
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1317              		.loc 1 903 0 discriminator 4
 1318 0128 0023     		movs	r3, #0
 1319 012a 84F84530 		strb	r3, [r4, #69]
 1320              	.L107:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1321              		.loc 1 903 0 discriminator 6
 1322 012e FFF7FEFF 		bl	vPortExitCritical
 1323              	.LVL138:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1324              		.loc 1 906 0 is_stmt 1 discriminator 6
 1325 0132 01A9     		add	r1, sp, #4
 1326              	.LVL139:
 1327 0134 02A8     		add	r0, sp, #8
 1328 0136 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1329              	.LVL140:
 1330 013a F0B9     		cbnz	r0, .L108
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1331              		.loc 1 908 0
 1332 013c 2046     		mov	r0, r4
 1333 013e FFF7FEFF 		bl	prvIsQueueFull
 1334              	.LVL141:
 1335 0142 A0B1     		cbz	r0, .L109
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1336              		.loc 1 911 0
 1337 0144 0199     		ldr	r1, [sp, #4]
 1338 0146 04F11000 		add	r0, r4, #16
 1339 014a FFF7FEFF 		bl	vTaskPlaceOnEventList
 1340              	.LVL142:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1341              		.loc 1 918 0
 1342 014e 2046     		mov	r0, r4
 1343 0150 FFF7FEFF 		bl	prvUnlockQueue
 1344              	.LVL143:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1345              		.loc 1 925 0
 1346 0154 FFF7FEFF 		bl	xTaskResumeAll
 1347              	.LVL144:
 1348 0158 0028     		cmp	r0, #0
 1349 015a 9BD1     		bne	.L97
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1350              		.loc 1 927 0
 1351 015c 4FF08052 		mov	r2, #268435456
 1352 0160 0A4B     		ldr	r3, .L119
 1353 0162 1A60     		str	r2, [r3]
 1354              		.syntax unified
 1355              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1356 0164 BFF34F8F 		dsb
 1357              	@ 0 "" 2
 1358              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1359 0168 BFF36F8F 		isb
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 72


 1360              	@ 0 "" 2
 1361              		.thumb
 1362              		.syntax unified
 1363 016c 92E7     		b	.L97
 1364              	.L109:
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1365              		.loc 1 933 0
 1366 016e 2046     		mov	r0, r4
 1367 0170 FFF7FEFF 		bl	prvUnlockQueue
 1368              	.LVL145:
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1369              		.loc 1 934 0
 1370 0174 FFF7FEFF 		bl	xTaskResumeAll
 1371              	.LVL146:
 1372 0178 8CE7     		b	.L97
 1373              	.L108:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1374              		.loc 1 940 0
 1375 017a 2046     		mov	r0, r4
 1376 017c FFF7FEFF 		bl	prvUnlockQueue
 1377              	.LVL147:
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1378              		.loc 1 941 0
 1379 0180 FFF7FEFF 		bl	xTaskResumeAll
 1380              	.LVL148:
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1381              		.loc 1 944 0
 1382 0184 0020     		movs	r0, #0
 1383              	.L103:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1384              		.loc 1 947 0
 1385 0186 05B0     		add	sp, sp, #20
 1386              	.LCFI20:
 1387              		.cfi_def_cfa_offset 20
 1388              		@ sp needed
 1389 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 1390              	.LVL149:
 1391              	.L120:
 1392 018a 00BF     		.align	2
 1393              	.L119:
 1394 018c 04ED00E0 		.word	-536810236
 1395              		.cfi_endproc
 1396              	.LFE16:
 1398              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1399              		.align	2
 1400              		.thumb
 1401              		.thumb_func
 1403              	prvInitialiseMutex:
 1404              	.LFB9:
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1405              		.loc 1 467 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              	.LVL150:
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1410              		.loc 1 468 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 73


 1411 0000 48B1     		cbz	r0, .L124
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1412              		.loc 1 467 0
 1413 0002 08B5     		push	{r3, lr}
 1414              	.LCFI21:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 3, -8
 1417              		.cfi_offset 14, -4
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1418              		.loc 1 474 0
 1419 0004 0021     		movs	r1, #0
 1420 0006 8160     		str	r1, [r0, #8]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1421              		.loc 1 475 0
 1422 0008 0160     		str	r1, [r0]
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1423              		.loc 1 478 0
 1424 000a C160     		str	r1, [r0, #12]
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1425              		.loc 1 483 0
 1426 000c 0B46     		mov	r3, r1
 1427 000e 0A46     		mov	r2, r1
 1428 0010 FFF7FEFF 		bl	xQueueGenericSend
 1429              	.LVL151:
 1430 0014 08BD     		pop	{r3, pc}
 1431              	.LVL152:
 1432              	.L124:
 1433              	.LCFI22:
 1434              		.cfi_def_cfa_offset 0
 1435              		.cfi_restore 3
 1436              		.cfi_restore 14
 1437 0016 7047     		bx	lr
 1438              		.cfi_endproc
 1439              	.LFE9:
 1441              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1442              		.align	2
 1443              		.global	xQueueCreateMutex
 1444              		.thumb
 1445              		.thumb_func
 1447              	xQueueCreateMutex:
 1448              	.LFB10:
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1449              		.loc 1 497 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453              	.LVL153:
 1454 0000 10B5     		push	{r4, lr}
 1455              	.LCFI23:
 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 4, -8
 1458              		.cfi_offset 14, -4
 1459              	.LVL154:
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1460              		.loc 1 501 0
 1461 0002 0246     		mov	r2, r0
 1462 0004 0021     		movs	r1, #0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 74


 1463 0006 0120     		movs	r0, #1
 1464              	.LVL155:
 1465 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1466              	.LVL156:
 1467 000c 0446     		mov	r4, r0
 1468              	.LVL157:
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1469              		.loc 1 502 0
 1470 000e FFF7FEFF 		bl	prvInitialiseMutex
 1471              	.LVL158:
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1472              		.loc 1 505 0
 1473 0012 2046     		mov	r0, r4
 1474 0014 10BD     		pop	{r4, pc}
 1475              		.cfi_endproc
 1476              	.LFE10:
 1478 0016 00BF     		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1479              		.align	2
 1480              		.global	xQueueCreateMutexStatic
 1481              		.thumb
 1482              		.thumb_func
 1484              	xQueueCreateMutexStatic:
 1485              	.LFB11:
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1486              		.loc 1 513 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              	.LVL159:
 1491 0000 10B5     		push	{r4, lr}
 1492              	.LCFI24:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
 1496 0002 82B0     		sub	sp, sp, #8
 1497              	.LCFI25:
 1498              		.cfi_def_cfa_offset 16
 1499              	.LVL160:
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1500              		.loc 1 521 0
 1501 0004 0090     		str	r0, [sp]
 1502 0006 0B46     		mov	r3, r1
 1503 0008 0022     		movs	r2, #0
 1504 000a 1146     		mov	r1, r2
 1505              	.LVL161:
 1506 000c 0120     		movs	r0, #1
 1507              	.LVL162:
 1508 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1509              	.LVL163:
 1510 0012 0446     		mov	r4, r0
 1511              	.LVL164:
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1512              		.loc 1 522 0
 1513 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1514              	.LVL165:
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1515              		.loc 1 525 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 75


 1516 0018 2046     		mov	r0, r4
 1517 001a 02B0     		add	sp, sp, #8
 1518              	.LCFI26:
 1519              		.cfi_def_cfa_offset 8
 1520              		@ sp needed
 1521 001c 10BD     		pop	{r4, pc}
 1522              		.cfi_endproc
 1523              	.LFE11:
 1525 001e 00BF     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1526              		.align	2
 1527              		.global	xQueueGiveMutexRecursive
 1528              		.thumb
 1529              		.thumb_func
 1531              	xQueueGiveMutexRecursive:
 1532              	.LFB12:
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1533              		.loc 1 590 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              	.LVL166:
 1538 0000 38B5     		push	{r3, r4, r5, lr}
 1539              	.LCFI27:
 1540              		.cfi_def_cfa_offset 16
 1541              		.cfi_offset 3, -16
 1542              		.cfi_offset 4, -12
 1543              		.cfi_offset 5, -8
 1544              		.cfi_offset 14, -4
 1545              	.LVL167:
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1546              		.loc 1 594 0
 1547 0002 40B9     		cbnz	r0, .L130
 1548              	.LBB149:
 1549              	.LBB150:
 1550              		.loc 2 195 0
 1551              		.syntax unified
 1552              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1553 0004 4FF05003 			mov r3, #80												
 1554 0008 83F31188 		msr basepri, r3											
 1555 000c BFF36F8F 		isb														
 1556 0010 BFF34F8F 		dsb														
 1557              	
 1558              	@ 0 "" 2
 1559              	.LVL168:
 1560              		.thumb
 1561              		.syntax unified
 1562              	.L131:
 1563 0014 FEE7     		b	.L131
 1564              	.L130:
 1565 0016 0446     		mov	r4, r0
 1566              	.LBE150:
 1567              	.LBE149:
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1568              		.loc 1 602 0
 1569 0018 8568     		ldr	r5, [r0, #8]
 1570 001a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1571              	.LVL169:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 76


 1572 001e 8542     		cmp	r5, r0
 1573 0020 0AD1     		bne	.L133
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1574              		.loc 1 611 0
 1575 0022 E368     		ldr	r3, [r4, #12]
 1576 0024 013B     		subs	r3, r3, #1
 1577 0026 E360     		str	r3, [r4, #12]
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1578              		.loc 1 614 0
 1579 0028 43B9     		cbnz	r3, .L134
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1580              		.loc 1 618 0
 1581 002a 1A46     		mov	r2, r3
 1582 002c 1946     		mov	r1, r3
 1583 002e 2046     		mov	r0, r4
 1584 0030 FFF7FEFF 		bl	xQueueGenericSend
 1585              	.LVL170:
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1586              		.loc 1 625 0
 1587 0034 0120     		movs	r0, #1
 1588 0036 38BD     		pop	{r3, r4, r5, pc}
 1589              	.LVL171:
 1590              	.L133:
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1591              		.loc 1 631 0
 1592 0038 0020     		movs	r0, #0
 1593 003a 38BD     		pop	{r3, r4, r5, pc}
 1594              	.LVL172:
 1595              	.L134:
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1596              		.loc 1 625 0
 1597 003c 0120     		movs	r0, #1
 1598              	.LVL173:
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1599              		.loc 1 637 0
 1600 003e 38BD     		pop	{r3, r4, r5, pc}
 1601              		.cfi_endproc
 1602              	.LFE12:
 1604              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1605              		.align	2
 1606              		.global	xQueueGenericSendFromISR
 1607              		.thumb
 1608              		.thumb_func
 1610              	xQueueGenericSendFromISR:
 1611              	.LFB17:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1612              		.loc 1 951 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              	.LVL174:
 1617 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1618              	.LCFI28:
 1619              		.cfi_def_cfa_offset 32
 1620              		.cfi_offset 3, -32
 1621              		.cfi_offset 4, -28
 1622              		.cfi_offset 5, -24
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 77


 1623              		.cfi_offset 6, -20
 1624              		.cfi_offset 7, -16
 1625              		.cfi_offset 8, -12
 1626              		.cfi_offset 9, -8
 1627              		.cfi_offset 14, -4
 1628              	.LVL175:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1629              		.loc 1 956 0
 1630 0004 40B9     		cbnz	r0, .L137
 1631              	.LBB151:
 1632              	.LBB152:
 1633              		.loc 2 195 0
 1634              		.syntax unified
 1635              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1636 0006 4FF05003 			mov r3, #80												
 1637 000a 83F31188 		msr basepri, r3											
 1638 000e BFF36F8F 		isb														
 1639 0012 BFF34F8F 		dsb														
 1640              	
 1641              	@ 0 "" 2
 1642              	.LVL176:
 1643              		.thumb
 1644              		.syntax unified
 1645              	.L138:
 1646 0016 FEE7     		b	.L138
 1647              	.LVL177:
 1648              	.L137:
 1649 0018 0446     		mov	r4, r0
 1650              	.LBE152:
 1651              	.LBE151:
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1652              		.loc 1 957 0
 1653 001a 19B9     		cbnz	r1, .L148
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1654              		.loc 1 957 0 is_stmt 0 discriminator 2
 1655 001c 006C     		ldr	r0, [r0, #64]
 1656              	.LVL178:
 1657 001e 18B9     		cbnz	r0, .L149
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1658              		.loc 1 957 0
 1659 0020 0120     		movs	r0, #1
 1660 0022 02E0     		b	.L139
 1661              	.LVL179:
 1662              	.L148:
 1663 0024 0120     		movs	r0, #1
 1664              	.LVL180:
 1665 0026 00E0     		b	.L139
 1666              	.L149:
 1667 0028 0020     		movs	r0, #0
 1668              	.L139:
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1669              		.loc 1 957 0 discriminator 6
 1670 002a 40B9     		cbnz	r0, .L140
 1671              	.LBB153:
 1672              	.LBB154:
 1673              		.loc 2 195 0 is_stmt 1
 1674              		.syntax unified
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 78


 1675              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1676 002c 4FF05003 			mov r3, #80												
 1677 0030 83F31188 		msr basepri, r3											
 1678 0034 BFF36F8F 		isb														
 1679 0038 BFF34F8F 		dsb														
 1680              	
 1681              	@ 0 "" 2
 1682              	.LVL181:
 1683              		.thumb
 1684              		.syntax unified
 1685              	.L141:
 1686 003c FEE7     		b	.L141
 1687              	.LVL182:
 1688              	.L140:
 1689              	.LBE154:
 1690              	.LBE153:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1691              		.loc 1 958 0
 1692 003e 022B     		cmp	r3, #2
 1693 0040 03D1     		bne	.L150
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1694              		.loc 1 958 0 is_stmt 0 discriminator 2
 1695 0042 E06B     		ldr	r0, [r4, #60]
 1696 0044 0128     		cmp	r0, #1
 1697 0046 02D1     		bne	.L151
 1698 0048 02E0     		b	.L142
 1699              	.L150:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1700              		.loc 1 958 0
 1701 004a 0120     		movs	r0, #1
 1702 004c 00E0     		b	.L142
 1703              	.L151:
 1704 004e 0020     		movs	r0, #0
 1705              	.L142:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1706              		.loc 1 958 0 discriminator 6
 1707 0050 40B9     		cbnz	r0, .L143
 1708              	.LBB155:
 1709              	.LBB156:
 1710              		.loc 2 195 0 is_stmt 1
 1711              		.syntax unified
 1712              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1713 0052 4FF05003 			mov r3, #80												
 1714 0056 83F31188 		msr basepri, r3											
 1715 005a BFF36F8F 		isb														
 1716 005e BFF34F8F 		dsb														
 1717              	
 1718              	@ 0 "" 2
 1719              	.LVL183:
 1720              		.thumb
 1721              		.syntax unified
 1722              	.L144:
 1723 0062 FEE7     		b	.L144
 1724              	.LVL184:
 1725              	.L143:
 1726 0064 1F46     		mov	r7, r3
 1727 0066 9046     		mov	r8, r2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 79


 1728 0068 8946     		mov	r9, r1
 1729              	.LBE156:
 1730              	.LBE155:
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1731              		.loc 1 974 0
 1732 006a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1733              	.LVL185:
 1734              	.LBB157:
 1735              	.LBB158:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1736              		.loc 2 211 0
 1737              		.syntax unified
 1738              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1739 006e EFF31186 			mrs r6, basepri											
 1740 0072 4FF05003 		mov r3, #80												
 1741 0076 83F31188 		msr basepri, r3											
 1742 007a BFF36F8F 		isb														
 1743 007e BFF34F8F 		dsb														
 1744              	
 1745              	@ 0 "" 2
 1746              		.thumb
 1747              		.syntax unified
 1748              	.LBE158:
 1749              	.LBE157:
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1750              		.loc 1 983 0
 1751 0082 A26B     		ldr	r2, [r4, #56]
 1752 0084 E36B     		ldr	r3, [r4, #60]
 1753 0086 9A42     		cmp	r2, r3
 1754 0088 01D3     		bcc	.L145
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1755              		.loc 1 983 0 is_stmt 0 discriminator 1
 1756 008a 022F     		cmp	r7, #2
 1757 008c 1FD1     		bne	.L152
 1758              	.L145:
 1759              	.LBB159:
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1760              		.loc 1 985 0 is_stmt 1
 1761 008e 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1762 0092 6DB2     		sxtb	r5, r5
 1763              	.LVL186:
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 80


 1764              		.loc 1 986 0
 1765 0094 A36B     		ldr	r3, [r4, #56]
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1766              		.loc 1 995 0
 1767 0096 3A46     		mov	r2, r7
 1768 0098 4946     		mov	r1, r9
 1769 009a 2046     		mov	r0, r4
 1770 009c FFF7FEFF 		bl	prvCopyDataToQueue
 1771              	.LVL187:
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1772              		.loc 1 999 0
 1773 00a0 B5F1FF3F 		cmp	r5, #-1
 1774 00a4 0DD1     		bne	.L147
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1775              		.loc 1 1061 0
 1776 00a6 636A     		ldr	r3, [r4, #36]
 1777 00a8 9BB1     		cbz	r3, .L153
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1778              		.loc 1 1063 0
 1779 00aa 04F12400 		add	r0, r4, #36
 1780 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList
 1781              	.LVL188:
 1782 00b2 80B1     		cbz	r0, .L154
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1783              		.loc 1 1067 0
 1784 00b4 B8F1000F 		cmp	r8, #0
 1785 00b8 0FD0     		beq	.L155
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1786              		.loc 1 1069 0
 1787 00ba 0120     		movs	r0, #1
 1788 00bc C8F80000 		str	r0, [r8]
 1789 00c0 0CE0     		b	.L146
 1790              	.L147:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1791              		.loc 1 1095 0
 1792 00c2 6B1C     		adds	r3, r5, #1
 1793 00c4 5BB2     		sxtb	r3, r3
 1794 00c6 84F84530 		strb	r3, [r4, #69]
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1795              		.loc 1 1098 0
 1796 00ca 0120     		movs	r0, #1
 1797 00cc 06E0     		b	.L146
 1798              	.LVL189:
 1799              	.L152:
 1800              	.LBE159:
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1801              		.loc 1 1103 0
 1802 00ce 0020     		movs	r0, #0
 1803 00d0 04E0     		b	.L146
 1804              	.LVL190:
 1805              	.L153:
 1806              	.LBB160:
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1807              		.loc 1 1098 0
 1808 00d2 0120     		movs	r0, #1
 1809 00d4 02E0     		b	.L146
 1810              	.L154:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 81


 1811 00d6 0120     		movs	r0, #1
 1812 00d8 00E0     		b	.L146
 1813              	.L155:
 1814 00da 0120     		movs	r0, #1
 1815              	.LVL191:
 1816              	.L146:
 1817              	.LBE160:
 1818              	.LBB161:
 1819              	.LBB162:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1820              		.loc 2 229 0
 1821              		.syntax unified
 1822              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1823 00dc 86F31188 			msr basepri, r6	
 1824              	@ 0 "" 2
 1825              	.LVL192:
 1826              		.thumb
 1827              		.syntax unified
 1828              	.LBE162:
 1829              	.LBE161:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1830              		.loc 1 1109 0
 1831 00e0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1832              		.cfi_endproc
 1833              	.LFE17:
 1835              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1836              		.align	2
 1837              		.global	xQueueGiveFromISR
 1838              		.thumb
 1839              		.thumb_func
 1841              	xQueueGiveFromISR:
 1842              	.LFB18:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1843              		.loc 1 1113 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              	.LVL193:
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1848              		.loc 1 1124 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 82


 1849 0000 40B9     		cbnz	r0, .L158
 1850              	.LBB163:
 1851              	.LBB164:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1852              		.loc 2 195 0
 1853              		.syntax unified
 1854              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1855 0002 4FF05003 			mov r3, #80												
 1856 0006 83F31188 		msr basepri, r3											
 1857 000a BFF36F8F 		isb														
 1858 000e BFF34F8F 		dsb														
 1859              	
 1860              	@ 0 "" 2
 1861              	.LVL194:
 1862              		.thumb
 1863              		.syntax unified
 1864              	.L159:
 1865 0012 FEE7     		b	.L159
 1866              	.L158:
 1867              	.LBE164:
 1868              	.LBE163:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1869              		.loc 1 1113 0
 1870 0014 70B5     		push	{r4, r5, r6, lr}
 1871              	.LCFI29:
 1872              		.cfi_def_cfa_offset 16
 1873              		.cfi_offset 4, -16
 1874              		.cfi_offset 5, -12
 1875              		.cfi_offset 6, -8
 1876              		.cfi_offset 14, -4
 1877 0016 0446     		mov	r4, r0
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1878              		.loc 1 1128 0
 1879 0018 036C     		ldr	r3, [r0, #64]
 1880 001a 43B1     		cbz	r3, .L160
 1881              	.LBB165:
 1882              	.LBB166:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1883              		.loc 2 195 0
 1884              		.syntax unified
 1885              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1886 001c 4FF05003 			mov r3, #80												
 1887 0020 83F31188 		msr basepri, r3											
 1888 0024 BFF36F8F 		isb														
 1889 0028 BFF34F8F 		dsb														
 1890              	
 1891              	@ 0 "" 2
 1892              	.LVL195:
 1893              		.thumb
 1894              		.syntax unified
 1895              	.L161:
 1896 002c FEE7     		b	.L161
 1897              	.L160:
 1898              	.LBE166:
 1899              	.LBE165:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1900              		.loc 1 1133 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 83


 1901 002e 0368     		ldr	r3, [r0]
 1902 0030 1BB9     		cbnz	r3, .L167
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1903              		.loc 1 1133 0 is_stmt 0 discriminator 2
 1904 0032 8368     		ldr	r3, [r0, #8]
 1905 0034 1BB9     		cbnz	r3, .L168
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1906              		.loc 1 1133 0
 1907 0036 0123     		movs	r3, #1
 1908 0038 02E0     		b	.L162
 1909              	.L167:
 1910 003a 0123     		movs	r3, #1
 1911 003c 00E0     		b	.L162
 1912              	.L168:
 1913 003e 0023     		movs	r3, #0
 1914              	.L162:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1915              		.loc 1 1133 0 discriminator 6
 1916 0040 43B9     		cbnz	r3, .L163
 1917              	.LBB167:
 1918              	.LBB168:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1919              		.loc 2 195 0 is_stmt 1
 1920              		.syntax unified
 1921              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1922 0042 4FF05003 			mov r3, #80												
 1923 0046 83F31188 		msr basepri, r3											
 1924 004a BFF36F8F 		isb														
 1925 004e BFF34F8F 		dsb														
 1926              	
 1927              	@ 0 "" 2
 1928              	.LVL196:
 1929              		.thumb
 1930              		.syntax unified
 1931              	.L164:
 1932 0052 FEE7     		b	.L164
 1933              	.L163:
 1934 0054 0E46     		mov	r6, r1
 1935              	.LBE168:
 1936              	.LBE167:
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1937              		.loc 1 1149 0
 1938 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1939              	.LVL197:
 1940              	.LBB169:
 1941              	.LBB170:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1942              		.loc 2 211 0
 1943              		.syntax unified
 1944              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1945 005a EFF31185 			mrs r5, basepri											
 1946 005e 4FF05003 		mov r3, #80												
 1947 0062 83F31188 		msr basepri, r3											
 1948 0066 BFF36F8F 		isb														
 1949 006a BFF34F8F 		dsb														
 1950              	
 1951              	@ 0 "" 2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 84


 1952              		.thumb
 1953              		.syntax unified
 1954              	.LBE170:
 1955              	.LBE169:
 1956              	.LBB171:
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1957              		.loc 1 1153 0
 1958 006e A26B     		ldr	r2, [r4, #56]
 1959              	.LVL198:
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1960              		.loc 1 1158 0
 1961 0070 E36B     		ldr	r3, [r4, #60]
 1962 0072 9A42     		cmp	r2, r3
 1963 0074 18D2     		bcs	.L169
 1964              	.LBB172:
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1965              		.loc 1 1160 0
 1966 0076 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1967 007a 5BB2     		sxtb	r3, r3
 1968              	.LVL199:
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1969              		.loc 1 1170 0
 1970 007c 0132     		adds	r2, r2, #1
 1971              	.LVL200:
 1972 007e A263     		str	r2, [r4, #56]
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1973              		.loc 1 1174 0
 1974 0080 B3F1FF3F 		cmp	r3, #-1
 1975 0084 0AD1     		bne	.L166
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1976              		.loc 1 1229 0
 1977 0086 636A     		ldr	r3, [r4, #36]
 1978              	.LVL201:
 1979 0088 83B1     		cbz	r3, .L170
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1980              		.loc 1 1231 0
 1981 008a 04F12400 		add	r0, r4, #36
 1982 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1983              	.LVL202:
 1984 0092 68B1     		cbz	r0, .L171
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1985              		.loc 1 1235 0
 1986 0094 76B1     		cbz	r6, .L172
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1987              		.loc 1 1237 0
 1988 0096 0120     		movs	r0, #1
 1989 0098 3060     		str	r0, [r6]
 1990 009a 0CE0     		b	.L165
 1991              	.LVL203:
 1992              	.L166:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1993              		.loc 1 1260 0
 1994 009c 0133     		adds	r3, r3, #1
 1995              	.LVL204:
 1996 009e 5BB2     		sxtb	r3, r3
 1997              	.LVL205:
 1998 00a0 84F84530 		strb	r3, [r4, #69]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 85


1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1999              		.loc 1 1263 0
 2000 00a4 0120     		movs	r0, #1
 2001 00a6 06E0     		b	.L165
 2002              	.LVL206:
 2003              	.L169:
 2004              	.LBE172:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2005              		.loc 1 1268 0
 2006 00a8 0020     		movs	r0, #0
 2007 00aa 04E0     		b	.L165
 2008              	.LVL207:
 2009              	.L170:
 2010              	.LBB173:
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2011              		.loc 1 1263 0
 2012 00ac 0120     		movs	r0, #1
 2013 00ae 02E0     		b	.L165
 2014              	.LVL208:
 2015              	.L171:
 2016 00b0 0120     		movs	r0, #1
 2017 00b2 00E0     		b	.L165
 2018              	.L172:
 2019 00b4 0120     		movs	r0, #1
 2020              	.L165:
 2021              	.LVL209:
 2022              	.LBE173:
 2023              	.LBE171:
 2024              	.LBB174:
 2025              	.LBB175:
 2026              		.loc 2 229 0
 2027              		.syntax unified
 2028              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2029 00b6 85F31188 			msr basepri, r5	
 2030              	@ 0 "" 2
 2031              	.LVL210:
 2032              		.thumb
 2033              		.syntax unified
 2034              	.LBE175:
 2035              	.LBE174:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2036              		.loc 1 1274 0
 2037 00ba 70BD     		pop	{r4, r5, r6, pc}
 2038              		.cfi_endproc
 2039              	.LFE18:
 2041              		.section	.text.xQueueReceive,"ax",%progbits
 2042              		.align	2
 2043              		.global	xQueueReceive
 2044              		.thumb
 2045              		.thumb_func
 2047              	xQueueReceive:
 2048              	.LFB19:
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2049              		.loc 1 1278 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 16
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 86


 2053              	.LVL211:
 2054 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2055              	.LCFI30:
 2056              		.cfi_def_cfa_offset 20
 2057              		.cfi_offset 4, -20
 2058              		.cfi_offset 5, -16
 2059              		.cfi_offset 6, -12
 2060              		.cfi_offset 7, -8
 2061              		.cfi_offset 14, -4
 2062 0002 85B0     		sub	sp, sp, #20
 2063              	.LCFI31:
 2064              		.cfi_def_cfa_offset 40
 2065 0004 0192     		str	r2, [sp, #4]
 2066              	.LVL212:
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2067              		.loc 1 1284 0
 2068 0006 40B9     		cbnz	r0, .L175
 2069              	.LBB176:
 2070              	.LBB177:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2071              		.loc 2 195 0
 2072              		.syntax unified
 2073              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2074 0008 4FF05003 			mov r3, #80												
 2075 000c 83F31188 		msr basepri, r3											
 2076 0010 BFF36F8F 		isb														
 2077 0014 BFF34F8F 		dsb														
 2078              	
 2079              	@ 0 "" 2
 2080              	.LVL213:
 2081              		.thumb
 2082              		.syntax unified
 2083              	.L176:
 2084 0018 FEE7     		b	.L176
 2085              	.L175:
 2086 001a 0446     		mov	r4, r0
 2087              	.LBE177:
 2088              	.LBE176:
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2089              		.loc 1 1288 0
 2090 001c 19B9     		cbnz	r1, .L193
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2091              		.loc 1 1288 0 is_stmt 0 discriminator 2
 2092 001e 036C     		ldr	r3, [r0, #64]
 2093 0020 1BB9     		cbnz	r3, .L194
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2094              		.loc 1 1288 0
 2095 0022 0123     		movs	r3, #1
 2096 0024 02E0     		b	.L177
 2097              	.L193:
 2098 0026 0123     		movs	r3, #1
 2099 0028 00E0     		b	.L177
 2100              	.L194:
 2101 002a 0023     		movs	r3, #0
 2102              	.L177:
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2103              		.loc 1 1288 0 discriminator 6
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 87


 2104 002c 43B9     		cbnz	r3, .L178
 2105              	.LBB178:
 2106              	.LBB179:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2107              		.loc 2 195 0 is_stmt 1
 2108              		.syntax unified
 2109              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2110 002e 4FF05003 			mov r3, #80												
 2111 0032 83F31188 		msr basepri, r3											
 2112 0036 BFF36F8F 		isb														
 2113 003a BFF34F8F 		dsb														
 2114              	
 2115              	@ 0 "" 2
 2116              	.LVL214:
 2117              		.thumb
 2118              		.syntax unified
 2119              	.L179:
 2120 003e FEE7     		b	.L179
 2121              	.L178:
 2122 0040 0E46     		mov	r6, r1
 2123              	.LBE179:
 2124              	.LBE178:
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2125              		.loc 1 1293 0
 2126 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2127              	.LVL215:
 2128 0046 18B9     		cbnz	r0, .L195
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2129              		.loc 1 1293 0 is_stmt 0 discriminator 2
 2130 0048 019B     		ldr	r3, [sp, #4]
 2131 004a 1BB9     		cbnz	r3, .L196
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2132              		.loc 1 1293 0
 2133 004c 0123     		movs	r3, #1
 2134 004e 02E0     		b	.L180
 2135              	.L195:
 2136 0050 0123     		movs	r3, #1
 2137 0052 00E0     		b	.L180
 2138              	.L196:
 2139 0054 0023     		movs	r3, #0
 2140              	.L180:
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2141              		.loc 1 1293 0 discriminator 6
 2142 0056 43B9     		cbnz	r3, .L197
 2143              	.LBB180:
 2144              	.LBB181:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2145              		.loc 2 195 0 is_stmt 1
 2146              		.syntax unified
 2147              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2148 0058 4FF05003 			mov r3, #80												
 2149 005c 83F31188 		msr basepri, r3											
 2150 0060 BFF36F8F 		isb														
 2151 0064 BFF34F8F 		dsb														
 2152              	
 2153              	@ 0 "" 2
 2154              	.LVL216:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 88


 2155              		.thumb
 2156              		.syntax unified
 2157              	.L182:
 2158 0068 FEE7     		b	.L182
 2159              	.L197:
 2160              	.LBE181:
 2161              	.LBE180:
 2162 006a 0027     		movs	r7, #0
 2163              	.LVL217:
 2164              	.L181:
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2165              		.loc 1 1303 0
 2166 006c FFF7FEFF 		bl	vPortEnterCritical
 2167              	.LVL218:
 2168              	.LBB182:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2169              		.loc 1 1305 0
 2170 0070 A56B     		ldr	r5, [r4, #56]
 2171              	.LVL219:
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2172              		.loc 1 1309 0
 2173 0072 C5B1     		cbz	r5, .L183
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2174              		.loc 1 1312 0
 2175 0074 3146     		mov	r1, r6
 2176 0076 2046     		mov	r0, r4
 2177 0078 FFF7FEFF 		bl	prvCopyDataFromQueue
 2178              	.LVL220:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2179              		.loc 1 1314 0
 2180 007c 013D     		subs	r5, r5, #1
 2181              	.LVL221:
 2182 007e A563     		str	r5, [r4, #56]
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2183              		.loc 1 1319 0
 2184 0080 2369     		ldr	r3, [r4, #16]
 2185 0082 63B1     		cbz	r3, .L184
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2186              		.loc 1 1321 0
 2187 0084 04F11000 		add	r0, r4, #16
 2188 0088 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2189              	.LVL222:
 2190 008c 38B1     		cbz	r0, .L184
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2191              		.loc 1 1323 0
 2192 008e 4FF08052 		mov	r2, #268435456
 2193 0092 304B     		ldr	r3, .L199
 2194 0094 1A60     		str	r2, [r3]
 2195              		.syntax unified
 2196              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2197 0096 BFF34F8F 		dsb
 2198              	@ 0 "" 2
 2199              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2200 009a BFF36F8F 		isb
 2201              	@ 0 "" 2
 2202              		.thumb
 2203              		.syntax unified
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 89


 2204              	.L184:
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2205              		.loc 1 1335 0
 2206 009e FFF7FEFF 		bl	vPortExitCritical
 2207              	.LVL223:
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2208              		.loc 1 1336 0
 2209 00a2 0120     		movs	r0, #1
 2210 00a4 53E0     		b	.L185
 2211              	.LVL224:
 2212              	.L183:
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2213              		.loc 1 1340 0
 2214 00a6 019B     		ldr	r3, [sp, #4]
 2215 00a8 1BB9     		cbnz	r3, .L186
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2216              		.loc 1 1344 0
 2217 00aa FFF7FEFF 		bl	vPortExitCritical
 2218              	.LVL225:
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2219              		.loc 1 1346 0
 2220 00ae 0020     		movs	r0, #0
 2221 00b0 4DE0     		b	.L185
 2222              	.L186:
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2223              		.loc 1 1348 0
 2224 00b2 1FB9     		cbnz	r7, .L187
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2225              		.loc 1 1352 0
 2226 00b4 02A8     		add	r0, sp, #8
 2227 00b6 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2228              	.LVL226:
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2229              		.loc 1 1353 0
 2230 00ba 0127     		movs	r7, #1
 2231              	.LVL227:
 2232              	.L187:
 2233              	.LBE182:
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2234              		.loc 1 1362 0
 2235 00bc FFF7FEFF 		bl	vPortExitCritical
 2236              	.LVL228:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2237              		.loc 1 1367 0
 2238 00c0 FFF7FEFF 		bl	vTaskSuspendAll
 2239              	.LVL229:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2240              		.loc 1 1368 0
 2241 00c4 FFF7FEFF 		bl	vPortEnterCritical
 2242              	.LVL230:
 2243 00c8 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2244 00cc 5BB2     		sxtb	r3, r3
 2245 00ce B3F1FF3F 		cmp	r3, #-1
 2246 00d2 02D1     		bne	.L188
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2247              		.loc 1 1368 0 is_stmt 0 discriminator 1
 2248 00d4 0023     		movs	r3, #0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 90


 2249 00d6 84F84430 		strb	r3, [r4, #68]
 2250              	.L188:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2251              		.loc 1 1368 0 discriminator 3
 2252 00da 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2253 00de 5BB2     		sxtb	r3, r3
 2254 00e0 B3F1FF3F 		cmp	r3, #-1
 2255 00e4 02D1     		bne	.L189
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2256              		.loc 1 1368 0 discriminator 4
 2257 00e6 0023     		movs	r3, #0
 2258 00e8 84F84530 		strb	r3, [r4, #69]
 2259              	.L189:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2260              		.loc 1 1368 0 discriminator 6
 2261 00ec FFF7FEFF 		bl	vPortExitCritical
 2262              	.LVL231:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2263              		.loc 1 1371 0 is_stmt 1 discriminator 6
 2264 00f0 01A9     		add	r1, sp, #4
 2265              	.LVL232:
 2266 00f2 02A8     		add	r0, sp, #8
 2267 00f4 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2268              	.LVL233:
 2269 00f8 F0B9     		cbnz	r0, .L190
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2270              		.loc 1 1375 0
 2271 00fa 2046     		mov	r0, r4
 2272 00fc FFF7FEFF 		bl	prvIsQueueEmpty
 2273              	.LVL234:
 2274 0100 A0B1     		cbz	r0, .L191
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2275              		.loc 1 1378 0
 2276 0102 0199     		ldr	r1, [sp, #4]
 2277 0104 04F12400 		add	r0, r4, #36
 2278 0108 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2279              	.LVL235:
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2280              		.loc 1 1379 0
 2281 010c 2046     		mov	r0, r4
 2282 010e FFF7FEFF 		bl	prvUnlockQueue
 2283              	.LVL236:
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2284              		.loc 1 1380 0
 2285 0112 FFF7FEFF 		bl	xTaskResumeAll
 2286              	.LVL237:
 2287 0116 0028     		cmp	r0, #0
 2288 0118 A8D1     		bne	.L181
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2289              		.loc 1 1382 0
 2290 011a 4FF08052 		mov	r2, #268435456
 2291 011e 0D4B     		ldr	r3, .L199
 2292 0120 1A60     		str	r2, [r3]
 2293              		.syntax unified
 2294              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2295 0122 BFF34F8F 		dsb
 2296              	@ 0 "" 2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 91


 2297              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2298 0126 BFF36F8F 		isb
 2299              	@ 0 "" 2
 2300              		.thumb
 2301              		.syntax unified
 2302 012a 9FE7     		b	.L181
 2303              	.L191:
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2304              		.loc 1 1393 0
 2305 012c 2046     		mov	r0, r4
 2306 012e FFF7FEFF 		bl	prvUnlockQueue
 2307              	.LVL238:
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2308              		.loc 1 1394 0
 2309 0132 FFF7FEFF 		bl	xTaskResumeAll
 2310              	.LVL239:
 2311 0136 99E7     		b	.L181
 2312              	.L190:
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2313              		.loc 1 1401 0
 2314 0138 2046     		mov	r0, r4
 2315 013a FFF7FEFF 		bl	prvUnlockQueue
 2316              	.LVL240:
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2317              		.loc 1 1402 0
 2318 013e FFF7FEFF 		bl	xTaskResumeAll
 2319              	.LVL241:
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2320              		.loc 1 1404 0
 2321 0142 2046     		mov	r0, r4
 2322 0144 FFF7FEFF 		bl	prvIsQueueEmpty
 2323              	.LVL242:
 2324 0148 0028     		cmp	r0, #0
 2325 014a 8FD0     		beq	.L181
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2326              		.loc 1 1407 0
 2327 014c 0020     		movs	r0, #0
 2328              	.LVL243:
 2329              	.L185:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2330              		.loc 1 1415 0
 2331 014e 05B0     		add	sp, sp, #20
 2332              	.LCFI32:
 2333              		.cfi_def_cfa_offset 20
 2334              		@ sp needed
 2335 0150 F0BD     		pop	{r4, r5, r6, r7, pc}
 2336              	.LVL244:
 2337              	.L200:
 2338 0152 00BF     		.align	2
 2339              	.L199:
 2340 0154 04ED00E0 		.word	-536810236
 2341              		.cfi_endproc
 2342              	.LFE19:
 2344              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2345              		.align	2
 2346              		.global	xQueueSemaphoreTake
 2347              		.thumb
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 92


 2348              		.thumb_func
 2350              	xQueueSemaphoreTake:
 2351              	.LFB20:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2352              		.loc 1 1419 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 16
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356              	.LVL245:
 2357 0000 70B5     		push	{r4, r5, r6, lr}
 2358              	.LCFI33:
 2359              		.cfi_def_cfa_offset 16
 2360              		.cfi_offset 4, -16
 2361              		.cfi_offset 5, -12
 2362              		.cfi_offset 6, -8
 2363              		.cfi_offset 14, -4
 2364 0002 84B0     		sub	sp, sp, #16
 2365              	.LCFI34:
 2366              		.cfi_def_cfa_offset 32
 2367 0004 0191     		str	r1, [sp, #4]
 2368              	.LVL246:
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2369              		.loc 1 1429 0
 2370 0006 40B9     		cbnz	r0, .L202
 2371              	.LBB183:
 2372              	.LBB184:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2373              		.loc 2 195 0
 2374              		.syntax unified
 2375              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2376 0008 4FF05003 			mov r3, #80												
 2377 000c 83F31188 		msr basepri, r3											
 2378 0010 BFF36F8F 		isb														
 2379 0014 BFF34F8F 		dsb														
 2380              	
 2381              	@ 0 "" 2
 2382              	.LVL247:
 2383              		.thumb
 2384              		.syntax unified
 2385              	.L203:
 2386 0018 FEE7     		b	.L203
 2387              	.L202:
 2388 001a 0446     		mov	r4, r0
 2389              	.LBE184:
 2390              	.LBE183:
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2391              		.loc 1 1433 0
 2392 001c 036C     		ldr	r3, [r0, #64]
 2393 001e 43B1     		cbz	r3, .L204
 2394              	.LBB185:
 2395              	.LBB186:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2396              		.loc 2 195 0
 2397              		.syntax unified
 2398              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2399 0020 4FF05003 			mov r3, #80												
 2400 0024 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 93


 2401 0028 BFF36F8F 		isb														
 2402 002c BFF34F8F 		dsb														
 2403              	
 2404              	@ 0 "" 2
 2405              	.LVL248:
 2406              		.thumb
 2407              		.syntax unified
 2408              	.L205:
 2409 0030 FEE7     		b	.L205
 2410              	.L204:
 2411              	.LBE186:
 2412              	.LBE185:
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2413              		.loc 1 1438 0
 2414 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2415              	.LVL249:
 2416 0036 18B9     		cbnz	r0, .L223
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2417              		.loc 1 1438 0 is_stmt 0 discriminator 2
 2418 0038 019B     		ldr	r3, [sp, #4]
 2419 003a 1BB9     		cbnz	r3, .L224
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2420              		.loc 1 1438 0
 2421 003c 0123     		movs	r3, #1
 2422 003e 02E0     		b	.L206
 2423              	.L223:
 2424 0040 0123     		movs	r3, #1
 2425 0042 00E0     		b	.L206
 2426              	.L224:
 2427 0044 0023     		movs	r3, #0
 2428              	.L206:
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2429              		.loc 1 1438 0 discriminator 6
 2430 0046 43B9     		cbnz	r3, .L225
 2431              	.LBB187:
 2432              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2433              		.loc 2 195 0 is_stmt 1
 2434              		.syntax unified
 2435              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2436 0048 4FF05003 			mov r3, #80												
 2437 004c 83F31188 		msr basepri, r3											
 2438 0050 BFF36F8F 		isb														
 2439 0054 BFF34F8F 		dsb														
 2440              	
 2441              	@ 0 "" 2
 2442              	.LVL250:
 2443              		.thumb
 2444              		.syntax unified
 2445              	.L208:
 2446 0058 FEE7     		b	.L208
 2447              	.L225:
 2448              	.LBE188:
 2449              	.LBE187:
 2450 005a 0025     		movs	r5, #0
 2451 005c 2E46     		mov	r6, r5
 2452              	.LVL251:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 94


 2453              	.L207:
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2454              		.loc 1 1448 0
 2455 005e FFF7FEFF 		bl	vPortEnterCritical
 2456              	.LVL252:
 2457              	.LBB189:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2458              		.loc 1 1452 0
 2459 0062 A36B     		ldr	r3, [r4, #56]
 2460              	.LVL253:
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2461              		.loc 1 1456 0
 2462 0064 CBB1     		cbz	r3, .L209
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2463              		.loc 1 1462 0
 2464 0066 013B     		subs	r3, r3, #1
 2465              	.LVL254:
 2466 0068 A363     		str	r3, [r4, #56]
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2467              		.loc 1 1466 0
 2468 006a 2368     		ldr	r3, [r4]
 2469              	.LVL255:
 2470 006c 13B9     		cbnz	r3, .L210
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2471              		.loc 1 1470 0
 2472 006e FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2473              	.LVL256:
 2474 0072 A060     		str	r0, [r4, #8]
 2475              	.L210:
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2476              		.loc 1 1481 0
 2477 0074 2369     		ldr	r3, [r4, #16]
 2478 0076 63B1     		cbz	r3, .L211
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2479              		.loc 1 1483 0
 2480 0078 04F11000 		add	r0, r4, #16
 2481 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2482              	.LVL257:
 2483 0080 38B1     		cbz	r0, .L211
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2484              		.loc 1 1485 0
 2485 0082 4FF08052 		mov	r2, #268435456
 2486 0086 414B     		ldr	r3, .L228
 2487 0088 1A60     		str	r2, [r3]
 2488              		.syntax unified
 2489              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2490 008a BFF34F8F 		dsb
 2491              	@ 0 "" 2
 2492              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2493 008e BFF36F8F 		isb
 2494              	@ 0 "" 2
 2495              		.thumb
 2496              		.syntax unified
 2497              	.L211:
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2498              		.loc 1 1497 0
 2499 0092 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 95


 2500              	.LVL258:
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2501              		.loc 1 1498 0
 2502 0096 0120     		movs	r0, #1
 2503 0098 76E0     		b	.L212
 2504              	.LVL259:
 2505              	.L209:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2506              		.loc 1 1502 0
 2507 009a 019B     		ldr	r3, [sp, #4]
 2508              	.LVL260:
 2509 009c 6BB9     		cbnz	r3, .L213
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2510              		.loc 1 1509 0
 2511 009e 45B1     		cbz	r5, .L214
 2512              	.LBB190:
 2513              	.LBB191:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2514              		.loc 2 195 0
 2515              		.syntax unified
 2516              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2517 00a0 4FF05003 			mov r3, #80												
 2518 00a4 83F31188 		msr basepri, r3											
 2519 00a8 BFF36F8F 		isb														
 2520 00ac BFF34F8F 		dsb														
 2521              	
 2522              	@ 0 "" 2
 2523              	.LVL261:
 2524              		.thumb
 2525              		.syntax unified
 2526              	.L215:
 2527 00b0 FEE7     		b	.L215
 2528              	.L214:
 2529              	.LBE191:
 2530              	.LBE190:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2531              		.loc 1 1515 0
 2532 00b2 FFF7FEFF 		bl	vPortExitCritical
 2533              	.LVL262:
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2534              		.loc 1 1517 0
 2535 00b6 0020     		movs	r0, #0
 2536 00b8 66E0     		b	.L212
 2537              	.L213:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2538              		.loc 1 1519 0
 2539 00ba 1EB9     		cbnz	r6, .L216
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2540              		.loc 1 1523 0
 2541 00bc 02A8     		add	r0, sp, #8
 2542 00be FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2543              	.LVL263:
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2544              		.loc 1 1524 0
 2545 00c2 0126     		movs	r6, #1
 2546              	.LVL264:
 2547              	.L216:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 96


 2548              	.LBE189:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2549              		.loc 1 1533 0
 2550 00c4 FFF7FEFF 		bl	vPortExitCritical
 2551              	.LVL265:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2552              		.loc 1 1538 0
 2553 00c8 FFF7FEFF 		bl	vTaskSuspendAll
 2554              	.LVL266:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2555              		.loc 1 1539 0
 2556 00cc FFF7FEFF 		bl	vPortEnterCritical
 2557              	.LVL267:
 2558 00d0 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2559 00d4 5BB2     		sxtb	r3, r3
 2560 00d6 B3F1FF3F 		cmp	r3, #-1
 2561 00da 02D1     		bne	.L217
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2562              		.loc 1 1539 0 is_stmt 0 discriminator 1
 2563 00dc 0023     		movs	r3, #0
 2564 00de 84F84430 		strb	r3, [r4, #68]
 2565              	.L217:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2566              		.loc 1 1539 0 discriminator 3
 2567 00e2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2568 00e6 5BB2     		sxtb	r3, r3
 2569 00e8 B3F1FF3F 		cmp	r3, #-1
 2570 00ec 02D1     		bne	.L218
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2571              		.loc 1 1539 0 discriminator 4
 2572 00ee 0023     		movs	r3, #0
 2573 00f0 84F84530 		strb	r3, [r4, #69]
 2574              	.L218:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2575              		.loc 1 1539 0 discriminator 6
 2576 00f4 FFF7FEFF 		bl	vPortExitCritical
 2577              	.LVL268:
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2578              		.loc 1 1542 0 is_stmt 1 discriminator 6
 2579 00f8 01A9     		add	r1, sp, #4
 2580              	.LVL269:
 2581 00fa 02A8     		add	r0, sp, #8
 2582 00fc FFF7FEFF 		bl	xTaskCheckForTimeOut
 2583              	.LVL270:
 2584 0100 40BB     		cbnz	r0, .L219
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2585              		.loc 1 1548 0
 2586 0102 2046     		mov	r0, r4
 2587 0104 FFF7FEFF 		bl	prvIsQueueEmpty
 2588              	.LVL271:
 2589 0108 F0B1     		cbz	r0, .L220
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2590              		.loc 1 1554 0
 2591 010a 2368     		ldr	r3, [r4]
 2592 010c 3BB9     		cbnz	r3, .L221
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2593              		.loc 1 1556 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 97


 2594 010e FFF7FEFF 		bl	vPortEnterCritical
 2595              	.LVL272:
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2596              		.loc 1 1558 0
 2597 0112 A068     		ldr	r0, [r4, #8]
 2598 0114 FFF7FEFF 		bl	xTaskPriorityInherit
 2599              	.LVL273:
 2600 0118 0546     		mov	r5, r0
 2601              	.LVL274:
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2602              		.loc 1 1560 0
 2603 011a FFF7FEFF 		bl	vPortExitCritical
 2604              	.LVL275:
 2605              	.L221:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2606              		.loc 1 1569 0
 2607 011e 0199     		ldr	r1, [sp, #4]
 2608 0120 04F12400 		add	r0, r4, #36
 2609 0124 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2610              	.LVL276:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2611              		.loc 1 1570 0
 2612 0128 2046     		mov	r0, r4
 2613 012a FFF7FEFF 		bl	prvUnlockQueue
 2614              	.LVL277:
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2615              		.loc 1 1571 0
 2616 012e FFF7FEFF 		bl	xTaskResumeAll
 2617              	.LVL278:
 2618 0132 0028     		cmp	r0, #0
 2619 0134 93D1     		bne	.L207
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2620              		.loc 1 1573 0
 2621 0136 4FF08052 		mov	r2, #268435456
 2622 013a 144B     		ldr	r3, .L228
 2623 013c 1A60     		str	r2, [r3]
 2624              		.syntax unified
 2625              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2626 013e BFF34F8F 		dsb
 2627              	@ 0 "" 2
 2628              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2629 0142 BFF36F8F 		isb
 2630              	@ 0 "" 2
 2631              		.thumb
 2632              		.syntax unified
 2633 0146 8AE7     		b	.L207
 2634              	.L220:
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2635              		.loc 1 1584 0
 2636 0148 2046     		mov	r0, r4
 2637 014a FFF7FEFF 		bl	prvUnlockQueue
 2638              	.LVL279:
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2639              		.loc 1 1585 0
 2640 014e FFF7FEFF 		bl	xTaskResumeAll
 2641              	.LVL280:
 2642 0152 84E7     		b	.L207
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 98


 2643              	.L219:
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2644              		.loc 1 1591 0
 2645 0154 2046     		mov	r0, r4
 2646 0156 FFF7FEFF 		bl	prvUnlockQueue
 2647              	.LVL281:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2648              		.loc 1 1592 0
 2649 015a FFF7FEFF 		bl	xTaskResumeAll
 2650              	.LVL282:
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2651              		.loc 1 1598 0
 2652 015e 2046     		mov	r0, r4
 2653 0160 FFF7FEFF 		bl	prvIsQueueEmpty
 2654              	.LVL283:
 2655 0164 0028     		cmp	r0, #0
 2656 0166 3FF47AAF 		beq	.L207
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2657              		.loc 1 1605 0
 2658 016a 65B1     		cbz	r5, .L226
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2659              		.loc 1 1607 0
 2660 016c FFF7FEFF 		bl	vPortEnterCritical
 2661              	.LVL284:
 2662              	.LBB192:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2663              		.loc 1 1616 0
 2664 0170 2046     		mov	r0, r4
 2665 0172 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2666              	.LVL285:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2667              		.loc 1 1617 0
 2668 0176 0146     		mov	r1, r0
 2669 0178 A068     		ldr	r0, [r4, #8]
 2670              	.LVL286:
 2671 017a FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2672              	.LVL287:
 2673              	.LBE192:
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2674              		.loc 1 1619 0
 2675 017e FFF7FEFF 		bl	vPortExitCritical
 2676              	.LVL288:
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2677              		.loc 1 1625 0
 2678 0182 0020     		movs	r0, #0
 2679 0184 00E0     		b	.L212
 2680              	.L226:
 2681 0186 0020     		movs	r0, #0
 2682              	.L212:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2683              		.loc 1 1633 0
 2684 0188 04B0     		add	sp, sp, #16
 2685              	.LCFI35:
 2686              		.cfi_def_cfa_offset 16
 2687              		@ sp needed
 2688 018a 70BD     		pop	{r4, r5, r6, pc}
 2689              	.LVL289:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 99


 2690              	.L229:
 2691              		.align	2
 2692              	.L228:
 2693 018c 04ED00E0 		.word	-536810236
 2694              		.cfi_endproc
 2695              	.LFE20:
 2697              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2698              		.align	2
 2699              		.global	xQueueTakeMutexRecursive
 2700              		.thumb
 2701              		.thumb_func
 2703              	xQueueTakeMutexRecursive:
 2704              	.LFB13:
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2705              		.loc 1 645 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709              	.LVL290:
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2710              		.loc 1 649 0
 2711 0000 40B9     		cbnz	r0, .L231
 2712              	.LBB193:
 2713              	.LBB194:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2714              		.loc 2 195 0
 2715              		.syntax unified
 2716              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2717 0002 4FF05003 			mov r3, #80												
 2718 0006 83F31188 		msr basepri, r3											
 2719 000a BFF36F8F 		isb														
 2720 000e BFF34F8F 		dsb														
 2721              	
 2722              	@ 0 "" 2
 2723              	.LVL291:
 2724              		.thumb
 2725              		.syntax unified
 2726              	.L232:
 2727 0012 FEE7     		b	.L232
 2728              	.L231:
 2729              	.LBE194:
 2730              	.LBE193:
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2731              		.loc 1 645 0
 2732 0014 70B5     		push	{r4, r5, r6, lr}
 2733              	.LCFI36:
 2734              		.cfi_def_cfa_offset 16
 2735              		.cfi_offset 4, -16
 2736              		.cfi_offset 5, -12
 2737              		.cfi_offset 6, -8
 2738              		.cfi_offset 14, -4
 2739 0016 0446     		mov	r4, r0
 2740 0018 0D46     		mov	r5, r1
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2741              		.loc 1 656 0
 2742 001a 8668     		ldr	r6, [r0, #8]
 2743 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 100


 2744              	.LVL292:
 2745 0020 8642     		cmp	r6, r0
 2746 0022 04D1     		bne	.L233
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2747              		.loc 1 658 0
 2748 0024 E368     		ldr	r3, [r4, #12]
 2749 0026 0133     		adds	r3, r3, #1
 2750 0028 E360     		str	r3, [r4, #12]
 2751              	.LVL293:
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2752              		.loc 1 659 0
 2753 002a 0122     		movs	r2, #1
 2754 002c 08E0     		b	.L234
 2755              	.LVL294:
 2756              	.L233:
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2757              		.loc 1 663 0
 2758 002e 2946     		mov	r1, r5
 2759 0030 2046     		mov	r0, r4
 2760 0032 FFF7FEFF 		bl	xQueueSemaphoreTake
 2761              	.LVL295:
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2762              		.loc 1 668 0
 2763 0036 0246     		mov	r2, r0
 2764 0038 10B1     		cbz	r0, .L234
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2765              		.loc 1 670 0
 2766 003a E368     		ldr	r3, [r4, #12]
 2767 003c 0133     		adds	r3, r3, #1
 2768 003e E360     		str	r3, [r4, #12]
 2769              	.LVL296:
 2770              	.L234:
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2771              		.loc 1 679 0
 2772 0040 1046     		mov	r0, r2
 2773 0042 70BD     		pop	{r4, r5, r6, pc}
 2774              		.cfi_endproc
 2775              	.LFE13:
 2777              		.section	.text.xQueuePeek,"ax",%progbits
 2778              		.align	2
 2779              		.global	xQueuePeek
 2780              		.thumb
 2781              		.thumb_func
 2783              	xQueuePeek:
 2784              	.LFB21:
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2785              		.loc 1 1637 0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 16
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
 2789              	.LVL297:
 2790 0000 70B5     		push	{r4, r5, r6, lr}
 2791              	.LCFI37:
 2792              		.cfi_def_cfa_offset 16
 2793              		.cfi_offset 4, -16
 2794              		.cfi_offset 5, -12
 2795              		.cfi_offset 6, -8
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 101


 2796              		.cfi_offset 14, -4
 2797 0002 84B0     		sub	sp, sp, #16
 2798              	.LCFI38:
 2799              		.cfi_def_cfa_offset 32
 2800 0004 0192     		str	r2, [sp, #4]
 2801              	.LVL298:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2802              		.loc 1 1644 0
 2803 0006 40B9     		cbnz	r0, .L237
 2804              	.LBB195:
 2805              	.LBB196:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2806              		.loc 2 195 0
 2807              		.syntax unified
 2808              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2809 0008 4FF05003 			mov r3, #80												
 2810 000c 83F31188 		msr basepri, r3											
 2811 0010 BFF36F8F 		isb														
 2812 0014 BFF34F8F 		dsb														
 2813              	
 2814              	@ 0 "" 2
 2815              	.LVL299:
 2816              		.thumb
 2817              		.syntax unified
 2818              	.L238:
 2819 0018 FEE7     		b	.L238
 2820              	.L237:
 2821 001a 0446     		mov	r4, r0
 2822              	.LBE196:
 2823              	.LBE195:
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2824              		.loc 1 1648 0
 2825 001c 19B9     		cbnz	r1, .L255
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2826              		.loc 1 1648 0 is_stmt 0 discriminator 2
 2827 001e 036C     		ldr	r3, [r0, #64]
 2828 0020 1BB9     		cbnz	r3, .L256
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2829              		.loc 1 1648 0
 2830 0022 0123     		movs	r3, #1
 2831 0024 02E0     		b	.L239
 2832              	.L255:
 2833 0026 0123     		movs	r3, #1
 2834 0028 00E0     		b	.L239
 2835              	.L256:
 2836 002a 0023     		movs	r3, #0
 2837              	.L239:
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2838              		.loc 1 1648 0 discriminator 6
 2839 002c 43B9     		cbnz	r3, .L240
 2840              	.LBB197:
 2841              	.LBB198:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2842              		.loc 2 195 0 is_stmt 1
 2843              		.syntax unified
 2844              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2845 002e 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 102


 2846 0032 83F31188 		msr basepri, r3											
 2847 0036 BFF36F8F 		isb														
 2848 003a BFF34F8F 		dsb														
 2849              	
 2850              	@ 0 "" 2
 2851              	.LVL300:
 2852              		.thumb
 2853              		.syntax unified
 2854              	.L241:
 2855 003e FEE7     		b	.L241
 2856              	.L240:
 2857 0040 0E46     		mov	r6, r1
 2858              	.LBE198:
 2859              	.LBE197:
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2860              		.loc 1 1653 0
 2861 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2862              	.LVL301:
 2863 0046 18B9     		cbnz	r0, .L257
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2864              		.loc 1 1653 0 is_stmt 0 discriminator 2
 2865 0048 019B     		ldr	r3, [sp, #4]
 2866 004a 1BB9     		cbnz	r3, .L258
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2867              		.loc 1 1653 0
 2868 004c 0123     		movs	r3, #1
 2869 004e 02E0     		b	.L242
 2870              	.L257:
 2871 0050 0123     		movs	r3, #1
 2872 0052 00E0     		b	.L242
 2873              	.L258:
 2874 0054 0023     		movs	r3, #0
 2875              	.L242:
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2876              		.loc 1 1653 0 discriminator 6
 2877 0056 43B9     		cbnz	r3, .L259
 2878              	.LBB199:
 2879              	.LBB200:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2880              		.loc 2 195 0 is_stmt 1
 2881              		.syntax unified
 2882              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2883 0058 4FF05003 			mov r3, #80												
 2884 005c 83F31188 		msr basepri, r3											
 2885 0060 BFF36F8F 		isb														
 2886 0064 BFF34F8F 		dsb														
 2887              	
 2888              	@ 0 "" 2
 2889              	.LVL302:
 2890              		.thumb
 2891              		.syntax unified
 2892              	.L244:
 2893 0068 FEE7     		b	.L244
 2894              	.L259:
 2895              	.LBE200:
 2896              	.LBE199:
 2897 006a 0025     		movs	r5, #0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 103


 2898              	.LVL303:
 2899              	.L243:
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2900              		.loc 1 1663 0
 2901 006c FFF7FEFF 		bl	vPortEnterCritical
 2902              	.LVL304:
 2903              	.LBB201:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2904              		.loc 1 1665 0
 2905 0070 A36B     		ldr	r3, [r4, #56]
 2906              	.LVL305:
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2907              		.loc 1 1669 0
 2908 0072 C3B1     		cbz	r3, .L245
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2909              		.loc 1 1674 0
 2910 0074 E568     		ldr	r5, [r4, #12]
 2911              	.LVL306:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2912              		.loc 1 1676 0
 2913 0076 3146     		mov	r1, r6
 2914 0078 2046     		mov	r0, r4
 2915 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 2916              	.LVL307:
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2917              		.loc 1 1680 0
 2918 007e E560     		str	r5, [r4, #12]
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2919              		.loc 1 1684 0
 2920 0080 636A     		ldr	r3, [r4, #36]
 2921 0082 63B1     		cbz	r3, .L246
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2922              		.loc 1 1686 0
 2923 0084 04F12400 		add	r0, r4, #36
 2924 0088 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2925              	.LVL308:
 2926 008c 38B1     		cbz	r0, .L246
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2927              		.loc 1 1689 0
 2928 008e 4FF08052 		mov	r2, #268435456
 2929 0092 304B     		ldr	r3, .L261
 2930 0094 1A60     		str	r2, [r3]
 2931              		.syntax unified
 2932              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2933 0096 BFF34F8F 		dsb
 2934              	@ 0 "" 2
 2935              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2936 009a BFF36F8F 		isb
 2937              	@ 0 "" 2
 2938              		.thumb
 2939              		.syntax unified
 2940              	.L246:
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2941              		.loc 1 1701 0
 2942 009e FFF7FEFF 		bl	vPortExitCritical
 2943              	.LVL309:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 104


 2944              		.loc 1 1702 0
 2945 00a2 0120     		movs	r0, #1
 2946 00a4 53E0     		b	.L247
 2947              	.LVL310:
 2948              	.L245:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2949              		.loc 1 1706 0
 2950 00a6 019B     		ldr	r3, [sp, #4]
 2951              	.LVL311:
 2952 00a8 1BB9     		cbnz	r3, .L248
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2953              		.loc 1 1710 0
 2954 00aa FFF7FEFF 		bl	vPortExitCritical
 2955              	.LVL312:
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2956              		.loc 1 1712 0
 2957 00ae 0020     		movs	r0, #0
 2958 00b0 4DE0     		b	.L247
 2959              	.L248:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2960              		.loc 1 1714 0
 2961 00b2 1DB9     		cbnz	r5, .L249
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2962              		.loc 1 1719 0
 2963 00b4 02A8     		add	r0, sp, #8
 2964 00b6 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2965              	.LVL313:
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2966              		.loc 1 1720 0
 2967 00ba 0125     		movs	r5, #1
 2968              	.LVL314:
 2969              	.L249:
 2970              	.LBE201:
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2971              		.loc 1 1729 0
 2972 00bc FFF7FEFF 		bl	vPortExitCritical
 2973              	.LVL315:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2974              		.loc 1 1734 0
 2975 00c0 FFF7FEFF 		bl	vTaskSuspendAll
 2976              	.LVL316:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2977              		.loc 1 1735 0
 2978 00c4 FFF7FEFF 		bl	vPortEnterCritical
 2979              	.LVL317:
 2980 00c8 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2981 00cc 5BB2     		sxtb	r3, r3
 2982 00ce B3F1FF3F 		cmp	r3, #-1
 2983 00d2 02D1     		bne	.L250
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2984              		.loc 1 1735 0 is_stmt 0 discriminator 1
 2985 00d4 0023     		movs	r3, #0
 2986 00d6 84F84430 		strb	r3, [r4, #68]
 2987              	.L250:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2988              		.loc 1 1735 0 discriminator 3
 2989 00da 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 105


 2990 00de 5BB2     		sxtb	r3, r3
 2991 00e0 B3F1FF3F 		cmp	r3, #-1
 2992 00e4 02D1     		bne	.L251
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2993              		.loc 1 1735 0 discriminator 4
 2994 00e6 0023     		movs	r3, #0
 2995 00e8 84F84530 		strb	r3, [r4, #69]
 2996              	.L251:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2997              		.loc 1 1735 0 discriminator 6
 2998 00ec FFF7FEFF 		bl	vPortExitCritical
 2999              	.LVL318:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3000              		.loc 1 1738 0 is_stmt 1 discriminator 6
 3001 00f0 01A9     		add	r1, sp, #4
 3002              	.LVL319:
 3003 00f2 02A8     		add	r0, sp, #8
 3004 00f4 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3005              	.LVL320:
 3006 00f8 F0B9     		cbnz	r0, .L252
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3007              		.loc 1 1742 0
 3008 00fa 2046     		mov	r0, r4
 3009 00fc FFF7FEFF 		bl	prvIsQueueEmpty
 3010              	.LVL321:
 3011 0100 A0B1     		cbz	r0, .L253
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3012              		.loc 1 1745 0
 3013 0102 0199     		ldr	r1, [sp, #4]
 3014 0104 04F12400 		add	r0, r4, #36
 3015 0108 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3016              	.LVL322:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3017              		.loc 1 1746 0
 3018 010c 2046     		mov	r0, r4
 3019 010e FFF7FEFF 		bl	prvUnlockQueue
 3020              	.LVL323:
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3021              		.loc 1 1747 0
 3022 0112 FFF7FEFF 		bl	xTaskResumeAll
 3023              	.LVL324:
 3024 0116 0028     		cmp	r0, #0
 3025 0118 A8D1     		bne	.L243
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3026              		.loc 1 1749 0
 3027 011a 4FF08052 		mov	r2, #268435456
 3028 011e 0D4B     		ldr	r3, .L261
 3029 0120 1A60     		str	r2, [r3]
 3030              		.syntax unified
 3031              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3032 0122 BFF34F8F 		dsb
 3033              	@ 0 "" 2
 3034              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3035 0126 BFF36F8F 		isb
 3036              	@ 0 "" 2
 3037              		.thumb
 3038              		.syntax unified
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 106


 3039 012a 9FE7     		b	.L243
 3040              	.L253:
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3041              		.loc 1 1760 0
 3042 012c 2046     		mov	r0, r4
 3043 012e FFF7FEFF 		bl	prvUnlockQueue
 3044              	.LVL325:
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3045              		.loc 1 1761 0
 3046 0132 FFF7FEFF 		bl	xTaskResumeAll
 3047              	.LVL326:
 3048 0136 99E7     		b	.L243
 3049              	.L252:
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3050              		.loc 1 1768 0
 3051 0138 2046     		mov	r0, r4
 3052 013a FFF7FEFF 		bl	prvUnlockQueue
 3053              	.LVL327:
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3054              		.loc 1 1769 0
 3055 013e FFF7FEFF 		bl	xTaskResumeAll
 3056              	.LVL328:
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3057              		.loc 1 1771 0
 3058 0142 2046     		mov	r0, r4
 3059 0144 FFF7FEFF 		bl	prvIsQueueEmpty
 3060              	.LVL329:
 3061 0148 0028     		cmp	r0, #0
 3062 014a 8FD0     		beq	.L243
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3063              		.loc 1 1774 0
 3064 014c 0020     		movs	r0, #0
 3065              	.LVL330:
 3066              	.L247:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3067              		.loc 1 1782 0
 3068 014e 04B0     		add	sp, sp, #16
 3069              	.LCFI39:
 3070              		.cfi_def_cfa_offset 16
 3071              		@ sp needed
 3072 0150 70BD     		pop	{r4, r5, r6, pc}
 3073              	.LVL331:
 3074              	.L262:
 3075 0152 00BF     		.align	2
 3076              	.L261:
 3077 0154 04ED00E0 		.word	-536810236
 3078              		.cfi_endproc
 3079              	.LFE21:
 3081              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3082              		.align	2
 3083              		.global	xQueueReceiveFromISR
 3084              		.thumb
 3085              		.thumb_func
 3087              	xQueueReceiveFromISR:
 3088              	.LFB22:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3089              		.loc 1 1786 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 107


 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 0
 3092              		@ frame_needed = 0, uses_anonymous_args = 0
 3093              	.LVL332:
 3094 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3095              	.LCFI40:
 3096              		.cfi_def_cfa_offset 32
 3097              		.cfi_offset 3, -32
 3098              		.cfi_offset 4, -28
 3099              		.cfi_offset 5, -24
 3100              		.cfi_offset 6, -20
 3101              		.cfi_offset 7, -16
 3102              		.cfi_offset 8, -12
 3103              		.cfi_offset 9, -8
 3104              		.cfi_offset 14, -4
 3105              	.LVL333:
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3106              		.loc 1 1791 0
 3107 0004 40B9     		cbnz	r0, .L264
 3108              	.LBB202:
 3109              	.LBB203:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3110              		.loc 2 195 0
 3111              		.syntax unified
 3112              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3113 0006 4FF05003 			mov r3, #80												
 3114 000a 83F31188 		msr basepri, r3											
 3115 000e BFF36F8F 		isb														
 3116 0012 BFF34F8F 		dsb														
 3117              	
 3118              	@ 0 "" 2
 3119              	.LVL334:
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L265:
 3123 0016 FEE7     		b	.L265
 3124              	.L264:
 3125 0018 0446     		mov	r4, r0
 3126              	.LBE203:
 3127              	.LBE202:
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3128              		.loc 1 1792 0
 3129 001a 19B9     		cbnz	r1, .L271
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3130              		.loc 1 1792 0 is_stmt 0 discriminator 2
 3131 001c 036C     		ldr	r3, [r0, #64]
 3132 001e 1BB9     		cbnz	r3, .L272
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3133              		.loc 1 1792 0
 3134 0020 0123     		movs	r3, #1
 3135 0022 02E0     		b	.L266
 3136              	.L271:
 3137 0024 0123     		movs	r3, #1
 3138 0026 00E0     		b	.L266
 3139              	.L272:
 3140 0028 0023     		movs	r3, #0
 3141              	.L266:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 108


1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3142              		.loc 1 1792 0 discriminator 6
 3143 002a 43B9     		cbnz	r3, .L267
 3144              	.LBB204:
 3145              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3146              		.loc 2 195 0 is_stmt 1
 3147              		.syntax unified
 3148              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3149 002c 4FF05003 			mov r3, #80												
 3150 0030 83F31188 		msr basepri, r3											
 3151 0034 BFF36F8F 		isb														
 3152 0038 BFF34F8F 		dsb														
 3153              	
 3154              	@ 0 "" 2
 3155              	.LVL335:
 3156              		.thumb
 3157              		.syntax unified
 3158              	.L268:
 3159 003c FEE7     		b	.L268
 3160              	.L267:
 3161 003e 1746     		mov	r7, r2
 3162 0040 8946     		mov	r9, r1
 3163              	.LBE205:
 3164              	.LBE204:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3165              		.loc 1 1808 0
 3166 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3167              	.LVL336:
 3168              	.LBB206:
 3169              	.LBB207:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3170              		.loc 2 211 0
 3171              		.syntax unified
 3172              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3173 0046 EFF31186 			mrs r6, basepri											
 3174 004a 4FF05003 		mov r3, #80												
 3175 004e 83F31188 		msr basepri, r3											
 3176 0052 BFF36F8F 		isb														
 3177 0056 BFF34F8F 		dsb														
 3178              	
 3179              	@ 0 "" 2
 3180              		.thumb
 3181              		.syntax unified
 3182              	.LBE207:
 3183              	.LBE206:
 3184              	.LBB208:
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3185              		.loc 1 1812 0
 3186 005a D4F83880 		ldr	r8, [r4, #56]
 3187              	.LVL337:
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3188              		.loc 1 1815 0
 3189 005e B8F1000F 		cmp	r8, #0
 3190 0062 1DD0     		beq	.L273
 3191              	.LBB209:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 109


 3192              		.loc 1 1817 0
 3193 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3194 0068 6DB2     		sxtb	r5, r5
 3195              	.LVL338:
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3196              		.loc 1 1821 0
 3197 006a 4946     		mov	r1, r9
 3198 006c 2046     		mov	r0, r4
 3199 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 3200              	.LVL339:
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3201              		.loc 1 1822 0
 3202 0072 08F1FF33 		add	r3, r8, #-1
 3203 0076 A363     		str	r3, [r4, #56]
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3204              		.loc 1 1828 0
 3205 0078 B5F1FF3F 		cmp	r5, #-1
 3206 007c 0AD1     		bne	.L270
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3207              		.loc 1 1830 0
 3208 007e 2369     		ldr	r3, [r4, #16]
 3209 0080 83B1     		cbz	r3, .L274
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3210              		.loc 1 1832 0
 3211 0082 04F11000 		add	r0, r4, #16
 3212 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3213              	.LVL340:
 3214 008a 68B1     		cbz	r0, .L275
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3215              		.loc 1 1836 0
 3216 008c 77B1     		cbz	r7, .L276
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3217              		.loc 1 1838 0
 3218 008e 0120     		movs	r0, #1
 3219 0090 3860     		str	r0, [r7]
 3220 0092 0CE0     		b	.L269
 3221              	.L270:
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3222              		.loc 1 1859 0
 3223 0094 6B1C     		adds	r3, r5, #1
 3224 0096 5BB2     		sxtb	r3, r3
 3225 0098 84F84430 		strb	r3, [r4, #68]
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3226              		.loc 1 1862 0
 3227 009c 0120     		movs	r0, #1
 3228 009e 06E0     		b	.L269
 3229              	.LVL341:
 3230              	.L273:
 3231              	.LBE209:
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3232              		.loc 1 1866 0
 3233 00a0 0020     		movs	r0, #0
 3234 00a2 04E0     		b	.L269
 3235              	.LVL342:
 3236              	.L274:
 3237              	.LBB210:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 110


 3238              		.loc 1 1862 0
 3239 00a4 0120     		movs	r0, #1
 3240 00a6 02E0     		b	.L269
 3241              	.L275:
 3242 00a8 0120     		movs	r0, #1
 3243 00aa 00E0     		b	.L269
 3244              	.L276:
 3245 00ac 0120     		movs	r0, #1
 3246              	.LVL343:
 3247              	.L269:
 3248              	.LBE210:
 3249              	.LBE208:
 3250              	.LBB211:
 3251              	.LBB212:
 3252              		.loc 2 229 0
 3253              		.syntax unified
 3254              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3255 00ae 86F31188 			msr basepri, r6	
 3256              	@ 0 "" 2
 3257              	.LVL344:
 3258              		.thumb
 3259              		.syntax unified
 3260              	.LBE212:
 3261              	.LBE211:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3262              		.loc 1 1873 0
 3263 00b2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3264              		.cfi_endproc
 3265              	.LFE22:
 3267 00b6 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3268              		.align	2
 3269              		.global	xQueuePeekFromISR
 3270              		.thumb
 3271              		.thumb_func
 3273              	xQueuePeekFromISR:
 3274              	.LFB23:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3275              		.loc 1 1877 0
 3276              		.cfi_startproc
 3277              		@ args = 0, pretend = 0, frame = 0
 3278              		@ frame_needed = 0, uses_anonymous_args = 0
 3279              	.LVL345:
 3280 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3281              	.LCFI41:
 3282              		.cfi_def_cfa_offset 24
 3283              		.cfi_offset 3, -24
 3284              		.cfi_offset 4, -20
 3285              		.cfi_offset 5, -16
 3286              		.cfi_offset 6, -12
 3287              		.cfi_offset 7, -8
 3288              		.cfi_offset 14, -4
 3289              	.LVL346:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3290              		.loc 1 1883 0
 3291 0002 40B9     		cbnz	r0, .L279
 3292              	.LBB213:
 3293              	.LBB214:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 111


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3294              		.loc 2 195 0
 3295              		.syntax unified
 3296              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3297 0004 4FF05003 			mov r3, #80												
 3298 0008 83F31188 		msr basepri, r3											
 3299 000c BFF36F8F 		isb														
 3300 0010 BFF34F8F 		dsb														
 3301              	
 3302              	@ 0 "" 2
 3303              	.LVL347:
 3304              		.thumb
 3305              		.syntax unified
 3306              	.L280:
 3307 0014 FEE7     		b	.L280
 3308              	.L279:
 3309 0016 0446     		mov	r4, r0
 3310              	.LBE214:
 3311              	.LBE213:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3312              		.loc 1 1884 0
 3313 0018 19B9     		cbnz	r1, .L287
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3314              		.loc 1 1884 0 is_stmt 0 discriminator 2
 3315 001a 036C     		ldr	r3, [r0, #64]
 3316 001c 1BB9     		cbnz	r3, .L288
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3317              		.loc 1 1884 0
 3318 001e 0123     		movs	r3, #1
 3319 0020 02E0     		b	.L281
 3320              	.L287:
 3321 0022 0123     		movs	r3, #1
 3322 0024 00E0     		b	.L281
 3323              	.L288:
 3324 0026 0023     		movs	r3, #0
 3325              	.L281:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3326              		.loc 1 1884 0 discriminator 6
 3327 0028 43B9     		cbnz	r3, .L282
 3328              	.LBB215:
 3329              	.LBB216:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3330              		.loc 2 195 0 is_stmt 1
 3331              		.syntax unified
 3332              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3333 002a 4FF05003 			mov r3, #80												
 3334 002e 83F31188 		msr basepri, r3											
 3335 0032 BFF36F8F 		isb														
 3336 0036 BFF34F8F 		dsb														
 3337              	
 3338              	@ 0 "" 2
 3339              	.LVL348:
 3340              		.thumb
 3341              		.syntax unified
 3342              	.L283:
 3343 003a FEE7     		b	.L283
 3344              	.L282:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 112


 3345              	.LBE216:
 3346              	.LBE215:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3347              		.loc 1 1885 0
 3348 003c 236C     		ldr	r3, [r4, #64]
 3349 003e 43B9     		cbnz	r3, .L284
 3350              	.LBB217:
 3351              	.LBB218:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3352              		.loc 2 195 0
 3353              		.syntax unified
 3354              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3355 0040 4FF05003 			mov r3, #80												
 3356 0044 83F31188 		msr basepri, r3											
 3357 0048 BFF36F8F 		isb														
 3358 004c BFF34F8F 		dsb														
 3359              	
 3360              	@ 0 "" 2
 3361              	.LVL349:
 3362              		.thumb
 3363              		.syntax unified
 3364              	.L285:
 3365 0050 FEE7     		b	.L285
 3366              	.L284:
 3367 0052 0D46     		mov	r5, r1
 3368              	.LBE218:
 3369              	.LBE217:
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3370              		.loc 1 1901 0
 3371 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3372              	.LVL350:
 3373              	.LBB219:
 3374              	.LBB220:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3375              		.loc 2 211 0
 3376              		.syntax unified
 3377              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3378 0058 EFF31186 			mrs r6, basepri											
 3379 005c 4FF05003 		mov r3, #80												
 3380 0060 83F31188 		msr basepri, r3											
 3381 0064 BFF36F8F 		isb														
 3382 0068 BFF34F8F 		dsb														
 3383              	
 3384              	@ 0 "" 2
 3385              		.thumb
 3386              		.syntax unified
 3387              	.LBE220:
 3388              	.LBE219:
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3389              		.loc 1 1906 0
 3390 006c A36B     		ldr	r3, [r4, #56]
 3391 006e 3BB1     		cbz	r3, .L289
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3392              		.loc 1 1912 0
 3393 0070 E768     		ldr	r7, [r4, #12]
 3394              	.LVL351:
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 113


 3395              		.loc 1 1913 0
 3396 0072 2946     		mov	r1, r5
 3397 0074 2046     		mov	r0, r4
 3398 0076 FFF7FEFF 		bl	prvCopyDataFromQueue
 3399              	.LVL352:
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3400              		.loc 1 1914 0
 3401 007a E760     		str	r7, [r4, #12]
 3402              	.LVL353:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3403              		.loc 1 1916 0
 3404 007c 0120     		movs	r0, #1
 3405 007e 00E0     		b	.L286
 3406              	.LVL354:
 3407              	.L289:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3408              		.loc 1 1920 0
 3409 0080 0020     		movs	r0, #0
 3410              	.L286:
 3411              	.LVL355:
 3412              	.LBB221:
 3413              	.LBB222:
 3414              		.loc 2 229 0
 3415              		.syntax unified
 3416              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3417 0082 86F31188 			msr basepri, r6	
 3418              	@ 0 "" 2
 3419              	.LVL356:
 3420              		.thumb
 3421              		.syntax unified
 3422              	.LBE222:
 3423              	.LBE221:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3424              		.loc 1 1927 0
 3425 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3426              		.cfi_endproc
 3427              	.LFE23:
 3429              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3430              		.align	2
 3431              		.global	uxQueueMessagesWaiting
 3432              		.thumb
 3433              		.thumb_func
 3435              	uxQueueMessagesWaiting:
 3436              	.LFB24:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3437              		.loc 1 1931 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              	.LVL357:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3442              		.loc 1 1934 0
 3443 0000 40B9     		cbnz	r0, .L292
 3444              	.LBB223:
 3445              	.LBB224:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3446              		.loc 2 195 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 114


 3447              		.syntax unified
 3448              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3449 0002 4FF05003 			mov r3, #80												
 3450 0006 83F31188 		msr basepri, r3											
 3451 000a BFF36F8F 		isb														
 3452 000e BFF34F8F 		dsb														
 3453              	
 3454              	@ 0 "" 2
 3455              	.LVL358:
 3456              		.thumb
 3457              		.syntax unified
 3458              	.L293:
 3459 0012 FEE7     		b	.L293
 3460              	.L292:
 3461              	.LBE224:
 3462              	.LBE223:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3463              		.loc 1 1931 0
 3464 0014 10B5     		push	{r4, lr}
 3465              	.LCFI42:
 3466              		.cfi_def_cfa_offset 8
 3467              		.cfi_offset 4, -8
 3468              		.cfi_offset 14, -4
 3469 0016 0446     		mov	r4, r0
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3470              		.loc 1 1936 0
 3471 0018 FFF7FEFF 		bl	vPortEnterCritical
 3472              	.LVL359:
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3473              		.loc 1 1938 0
 3474 001c A46B     		ldr	r4, [r4, #56]
 3475              	.LVL360:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3476              		.loc 1 1940 0
 3477 001e FFF7FEFF 		bl	vPortExitCritical
 3478              	.LVL361:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3479              		.loc 1 1943 0
 3480 0022 2046     		mov	r0, r4
 3481 0024 10BD     		pop	{r4, pc}
 3482              		.cfi_endproc
 3483              	.LFE24:
 3485 0026 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3486              		.align	2
 3487              		.global	uxQueueSpacesAvailable
 3488              		.thumb
 3489              		.thumb_func
 3491              	uxQueueSpacesAvailable:
 3492              	.LFB25:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3493              		.loc 1 1947 0
 3494              		.cfi_startproc
 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 3497              	.LVL362:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3498              		.loc 1 1951 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 115


 3499 0000 40B9     		cbnz	r0, .L296
 3500              	.LBB225:
 3501              	.LBB226:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3502              		.loc 2 195 0
 3503              		.syntax unified
 3504              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3505 0002 4FF05003 			mov r3, #80												
 3506 0006 83F31188 		msr basepri, r3											
 3507 000a BFF36F8F 		isb														
 3508 000e BFF34F8F 		dsb														
 3509              	
 3510              	@ 0 "" 2
 3511              	.LVL363:
 3512              		.thumb
 3513              		.syntax unified
 3514              	.L297:
 3515 0012 FEE7     		b	.L297
 3516              	.L296:
 3517              	.LBE226:
 3518              	.LBE225:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3519              		.loc 1 1947 0
 3520 0014 10B5     		push	{r4, lr}
 3521              	.LCFI43:
 3522              		.cfi_def_cfa_offset 8
 3523              		.cfi_offset 4, -8
 3524              		.cfi_offset 14, -4
 3525 0016 0446     		mov	r4, r0
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3526              		.loc 1 1953 0
 3527 0018 FFF7FEFF 		bl	vPortEnterCritical
 3528              	.LVL364:
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3529              		.loc 1 1955 0
 3530 001c E36B     		ldr	r3, [r4, #60]
 3531 001e A46B     		ldr	r4, [r4, #56]
 3532              	.LVL365:
 3533 0020 1C1B     		subs	r4, r3, r4
 3534              	.LVL366:
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3535              		.loc 1 1957 0
 3536 0022 FFF7FEFF 		bl	vPortExitCritical
 3537              	.LVL367:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3538              		.loc 1 1960 0
 3539 0026 2046     		mov	r0, r4
 3540 0028 10BD     		pop	{r4, pc}
 3541              		.cfi_endproc
 3542              	.LFE25:
 3544 002a 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3545              		.align	2
 3546              		.global	uxQueueMessagesWaitingFromISR
 3547              		.thumb
 3548              		.thumb_func
 3550              	uxQueueMessagesWaitingFromISR:
 3551              	.LFB26:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 116


1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3552              		.loc 1 1964 0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              		@ link register save eliminated.
 3557              	.LVL368:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3558              		.loc 1 1968 0
 3559 0000 40B9     		cbnz	r0, .L300
 3560              	.LBB227:
 3561              	.LBB228:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3562              		.loc 2 195 0
 3563              		.syntax unified
 3564              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3565 0002 4FF05003 			mov r3, #80												
 3566 0006 83F31188 		msr basepri, r3											
 3567 000a BFF36F8F 		isb														
 3568 000e BFF34F8F 		dsb														
 3569              	
 3570              	@ 0 "" 2
 3571              	.LVL369:
 3572              		.thumb
 3573              		.syntax unified
 3574              	.L301:
 3575 0012 FEE7     		b	.L301
 3576              	.L300:
 3577              	.LBE228:
 3578              	.LBE227:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3579              		.loc 1 1969 0
 3580 0014 806B     		ldr	r0, [r0, #56]
 3581              	.LVL370:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3582              		.loc 1 1972 0
 3583 0016 7047     		bx	lr
 3584              		.cfi_endproc
 3585              	.LFE26:
 3587              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3588              		.align	2
 3589              		.global	xQueueIsQueueEmptyFromISR
 3590              		.thumb
 3591              		.thumb_func
 3593              	xQueueIsQueueEmptyFromISR:
 3594              	.LFB33:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3595              		.loc 1 2313 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 0
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
 3599              		@ link register save eliminated.
 3600              	.LVL371:
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3601              		.loc 1 2317 0
 3602 0000 40B9     		cbnz	r0, .L303
 3603              	.LBB229:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 117


 3604              	.LBB230:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3605              		.loc 2 195 0
 3606              		.syntax unified
 3607              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3608 0002 4FF05003 			mov r3, #80												
 3609 0006 83F31188 		msr basepri, r3											
 3610 000a BFF36F8F 		isb														
 3611 000e BFF34F8F 		dsb														
 3612              	
 3613              	@ 0 "" 2
 3614              	.LVL372:
 3615              		.thumb
 3616              		.syntax unified
 3617              	.L304:
 3618 0012 FEE7     		b	.L304
 3619              	.L303:
 3620              	.LBE230:
 3621              	.LBE229:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3622              		.loc 1 2318 0
 3623 0014 836B     		ldr	r3, [r0, #56]
 3624 0016 0BB9     		cbnz	r3, .L306
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3625              		.loc 1 2320 0
 3626 0018 0120     		movs	r0, #1
 3627              	.LVL373:
 3628 001a 7047     		bx	lr
 3629              	.LVL374:
 3630              	.L306:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3631              		.loc 1 2324 0
 3632 001c 0020     		movs	r0, #0
 3633              	.LVL375:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3634              		.loc 1 2328 0
 3635 001e 7047     		bx	lr
 3636              		.cfi_endproc
 3637              	.LFE33:
 3639              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3640              		.align	2
 3641              		.global	xQueueIsQueueFullFromISR
 3642              		.thumb
 3643              		.thumb_func
 3645              	xQueueIsQueueFullFromISR:
 3646              	.LFB35:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3647              		.loc 1 2353 0
 3648              		.cfi_startproc
 3649              		@ args = 0, pretend = 0, frame = 0
 3650              		@ frame_needed = 0, uses_anonymous_args = 0
 3651              		@ link register save eliminated.
 3652              	.LVL376:
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 118


2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3653              		.loc 1 2357 0
 3654 0000 40B9     		cbnz	r0, .L308
 3655              	.LBB231:
 3656              	.LBB232:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3657              		.loc 2 195 0
 3658              		.syntax unified
 3659              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3660 0002 4FF05003 			mov r3, #80												
 3661 0006 83F31188 		msr basepri, r3											
 3662 000a BFF36F8F 		isb														
 3663 000e BFF34F8F 		dsb														
 3664              	
 3665              	@ 0 "" 2
 3666              	.LVL377:
 3667              		.thumb
 3668              		.syntax unified
 3669              	.L309:
 3670 0012 FEE7     		b	.L309
 3671              	.L308:
 3672              	.LBE232:
 3673              	.LBE231:
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3674              		.loc 1 2358 0
 3675 0014 826B     		ldr	r2, [r0, #56]
 3676 0016 C36B     		ldr	r3, [r0, #60]
 3677 0018 9A42     		cmp	r2, r3
 3678 001a 01D1     		bne	.L311
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3679              		.loc 1 2360 0
 3680 001c 0120     		movs	r0, #1
 3681              	.LVL378:
 3682 001e 7047     		bx	lr
 3683              	.LVL379:
 3684              	.L311:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3685              		.loc 1 2364 0
 3686 0020 0020     		movs	r0, #0
 3687              	.LVL380:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3688              		.loc 1 2368 0
 3689 0022 7047     		bx	lr
 3690              		.cfi_endproc
 3691              	.LFE35:
 3693              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3694              		.align	2
 3695              		.global	vQueueAddToRegistry
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 119


 3696              		.thumb
 3697              		.thumb_func
 3699              	vQueueAddToRegistry:
 3700              	.LFB36:
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 120


2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 121


2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 122


2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 123


2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 124


 3701              		.loc 1 2649 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 3705              		@ link register save eliminated.
 3706              	.LVL381:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3707              		.loc 1 2654 0
 3708 0000 0023     		movs	r3, #0
 3709 0002 0BE0     		b	.L313
 3710              	.LVL382:
 3711              	.L316:
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3712              		.loc 1 2656 0
 3713 0004 074A     		ldr	r2, .L317
 3714 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3715 000a 32B9     		cbnz	r2, .L314
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3716              		.loc 1 2659 0
 3717 000c 054A     		ldr	r2, .L317
 3718 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3719              		.loc 1 2660 0
 3720 0012 02EBC303 		add	r3, r2, r3, lsl #3
 3721              	.LVL383:
 3722 0016 5860     		str	r0, [r3, #4]
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3723              		.loc 1 2663 0
 3724 0018 7047     		bx	lr
 3725              	.LVL384:
 3726              	.L314:
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3727              		.loc 1 2654 0 discriminator 2
 3728 001a 0133     		adds	r3, r3, #1
 3729              	.LVL385:
 3730              	.L313:
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3731              		.loc 1 2654 0 is_stmt 0 discriminator 1
 3732 001c 072B     		cmp	r3, #7
 3733 001e F1D9     		bls	.L316
 3734 0020 7047     		bx	lr
 3735              	.L318:
 3736 0022 00BF     		.align	2
 3737              	.L317:
 3738 0024 00000000 		.word	xQueueRegistry
 3739              		.cfi_endproc
 3740              	.LFE36:
 3742              		.section	.text.pcQueueGetName,"ax",%progbits
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 125


 3743              		.align	2
 3744              		.global	pcQueueGetName
 3745              		.thumb
 3746              		.thumb_func
 3748              	pcQueueGetName:
 3749              	.LFB37:
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3750              		.loc 1 2678 0 is_stmt 1
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
 3754              		@ link register save eliminated.
 3755              	.LVL386:
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3756              		.loc 1 2684 0
 3757 0000 0023     		movs	r3, #0
 3758 0002 0AE0     		b	.L320
 3759              	.LVL387:
 3760              	.L323:
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3761              		.loc 1 2686 0
 3762 0004 074A     		ldr	r2, .L324
 3763 0006 02EBC302 		add	r2, r2, r3, lsl #3
 3764 000a 5268     		ldr	r2, [r2, #4]
 3765 000c 8242     		cmp	r2, r0
 3766 000e 03D1     		bne	.L321
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3767              		.loc 1 2688 0
 3768 0010 044A     		ldr	r2, .L324
 3769 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3770              	.LVL388:
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3771              		.loc 1 2689 0
 3772 0016 7047     		bx	lr
 3773              	.LVL389:
 3774              	.L321:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 126


2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3775              		.loc 1 2684 0 discriminator 2
 3776 0018 0133     		adds	r3, r3, #1
 3777              	.LVL390:
 3778              	.L320:
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3779              		.loc 1 2684 0 is_stmt 0 discriminator 1
 3780 001a 072B     		cmp	r3, #7
 3781 001c F2D9     		bls	.L323
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3782              		.loc 1 2680 0 is_stmt 1
 3783 001e 0020     		movs	r0, #0
 3784              	.LVL391:
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3785              		.loc 1 2698 0
 3786 0020 7047     		bx	lr
 3787              	.L325:
 3788 0022 00BF     		.align	2
 3789              	.L324:
 3790 0024 00000000 		.word	xQueueRegistry
 3791              		.cfi_endproc
 3792              	.LFE37:
 3794              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3795              		.align	2
 3796              		.global	vQueueUnregisterQueue
 3797              		.thumb
 3798              		.thumb_func
 3800              	vQueueUnregisterQueue:
 3801              	.LFB38:
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3802              		.loc 1 2706 0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 0
 3805              		@ frame_needed = 0, uses_anonymous_args = 0
 3806              		@ link register save eliminated.
 3807              	.LVL392:
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3808              		.loc 1 2711 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 127


 3809 0000 0023     		movs	r3, #0
 3810 0002 0EE0     		b	.L327
 3811              	.LVL393:
 3812              	.L330:
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3813              		.loc 1 2713 0
 3814 0004 084A     		ldr	r2, .L331
 3815 0006 02EBC302 		add	r2, r2, r3, lsl #3
 3816 000a 5268     		ldr	r2, [r2, #4]
 3817 000c 8242     		cmp	r2, r0
 3818 000e 07D1     		bne	.L328
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3819              		.loc 1 2716 0
 3820 0010 054A     		ldr	r2, .L331
 3821 0012 0021     		movs	r1, #0
 3822 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3823              		.loc 1 2721 0
 3824 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3825              	.LVL394:
 3826 001c 5960     		str	r1, [r3, #4]
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3827              		.loc 1 2722 0
 3828 001e 7047     		bx	lr
 3829              	.LVL395:
 3830              	.L328:
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3831              		.loc 1 2711 0 discriminator 2
 3832 0020 0133     		adds	r3, r3, #1
 3833              	.LVL396:
 3834              	.L327:
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3835              		.loc 1 2711 0 is_stmt 0 discriminator 1
 3836 0022 072B     		cmp	r3, #7
 3837 0024 EED9     		bls	.L330
 3838 0026 7047     		bx	lr
 3839              	.L332:
 3840              		.align	2
 3841              	.L331:
 3842 0028 00000000 		.word	xQueueRegistry
 3843              		.cfi_endproc
 3844              	.LFE38:
 3846              		.section	.text.vQueueDelete,"ax",%progbits
 3847              		.align	2
 3848              		.global	vQueueDelete
 3849              		.thumb
 3850              		.thumb_func
 3852              	vQueueDelete:
 3853              	.LFB27:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 128


 3854              		.loc 1 1976 0 is_stmt 1
 3855              		.cfi_startproc
 3856              		@ args = 0, pretend = 0, frame = 0
 3857              		@ frame_needed = 0, uses_anonymous_args = 0
 3858              	.LVL397:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3859              		.loc 1 1979 0
 3860 0000 40B9     		cbnz	r0, .L334
 3861              	.LBB233:
 3862              	.LBB234:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3863              		.loc 2 195 0
 3864              		.syntax unified
 3865              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3866 0002 4FF05003 			mov r3, #80												
 3867 0006 83F31188 		msr basepri, r3											
 3868 000a BFF36F8F 		isb														
 3869 000e BFF34F8F 		dsb														
 3870              	
 3871              	@ 0 "" 2
 3872              	.LVL398:
 3873              		.thumb
 3874              		.syntax unified
 3875              	.L335:
 3876 0012 FEE7     		b	.L335
 3877              	.L334:
 3878              	.LBE234:
 3879              	.LBE233:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3880              		.loc 1 1976 0
 3881 0014 10B5     		push	{r4, lr}
 3882              	.LCFI44:
 3883              		.cfi_def_cfa_offset 8
 3884              		.cfi_offset 4, -8
 3885              		.cfi_offset 14, -4
 3886 0016 0446     		mov	r4, r0
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3887              		.loc 1 1984 0
 3888 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
 3889              	.LVL399:
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3890              		.loc 1 1998 0
 3891 001c 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 3892 0020 13B9     		cbnz	r3, .L333
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3893              		.loc 1 2000 0
 3894 0022 2046     		mov	r0, r4
 3895 0024 FFF7FEFF 		bl	vPortFree
 3896              	.LVL400:
 3897              	.L333:
 3898 0028 10BD     		pop	{r4, pc}
 3899              		.cfi_endproc
 3900              	.LFE27:
 3902              		.comm	xQueueRegistry,64,4
 3903 002a 00BF     		.text
 3904              	.Letext0:
 3905              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 129


 3906              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 3907              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 3908              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 3909              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3910              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3911              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3912              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 130


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:22     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:26     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:56     .text.prvIsQueueFull:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:60     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:101    .text.prvIsQueueEmpty:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:105    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:144    .text.prvCopyDataToQueue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:148    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:267    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:271    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:319    .text.prvUnlockQueue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:323    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:424    .text.xQueueGenericReset:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:429    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:535    .text.xQueueGenericReset:0000007c $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:540    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:544    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:584    .text.xQueueGenericCreateStatic:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:589    .text.xQueueGenericCreateStatic:00000000 xQueueGenericCreateStatic
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:782    .text.xQueueGenericCreate:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:787    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:867    .text.xQueueCreateCountingSemaphoreStatic:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:872    .text.xQueueCreateCountingSemaphoreStatic:00000000 xQueueCreateCountingSemaphoreStatic
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:960    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:965    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1042   .text.xQueueGenericSend:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1047   .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1394   .text.xQueueGenericSend:0000018c $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1399   .text.prvInitialiseMutex:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1403   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1442   .text.xQueueCreateMutex:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1447   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1479   .text.xQueueCreateMutexStatic:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1484   .text.xQueueCreateMutexStatic:00000000 xQueueCreateMutexStatic
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1526   .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1531   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1605   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1610   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1836   .text.xQueueGiveFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:1841   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2042   .text.xQueueReceive:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2047   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2340   .text.xQueueReceive:00000154 $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2345   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2350   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2693   .text.xQueueSemaphoreTake:0000018c $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2698   .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2703   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2778   .text.xQueuePeek:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:2783   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3077   .text.xQueuePeek:00000154 $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3082   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3087   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3268   .text.xQueuePeekFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3273   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
ARM GAS  C:\Users\master\AppData\Local\Temp\ccEeN9YR.s 			page 131


C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3430   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3435   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3486   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3491   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3545   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3550   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3588   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3593   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3640   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3645   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3694   .text.vQueueAddToRegistry:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3699   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3738   .text.vQueueAddToRegistry:00000024 $d
                            *COM*:00000040 xQueueRegistry
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3743   .text.pcQueueGetName:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3748   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3790   .text.pcQueueGetName:00000024 $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3795   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3800   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3842   .text.vQueueUnregisterQueue:00000028 $d
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3847   .text.vQueueDelete:00000000 $t
C:\Users\master\AppData\Local\Temp\ccEeN9YR.s:3852   .text.vQueueDelete:00000000 vQueueDelete
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
