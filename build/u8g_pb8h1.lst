ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"u8g_pb8h1.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.u8g_pb8h1_Init,"ax",%progbits
  22              		.align	2
  23              		.global	u8g_pb8h1_Init
  24              		.thumb
  25              		.thumb_func
  27              	u8g_pb8h1_Init:
  28              	.LFB0:
  29              		.file 1 "u8glib/u8g_pb8h1.c"
   1:u8glib/u8g_pb8h1.c **** /*
   2:u8glib/u8g_pb8h1.c **** 
   3:u8glib/u8g_pb8h1.c ****   u8g_pb8h1.c
   4:u8glib/u8g_pb8h1.c ****   
   5:u8glib/u8g_pb8h1.c ****   8bit height monochrom (1 bit) page buffer
   6:u8glib/u8g_pb8h1.c ****   byte has horizontal orientation
   7:u8glib/u8g_pb8h1.c **** 
   8:u8glib/u8g_pb8h1.c ****   Universal 8bit Graphics Library
   9:u8glib/u8g_pb8h1.c ****   
  10:u8glib/u8g_pb8h1.c ****   Copyright (c) 2011, olikraus@gmail.com
  11:u8glib/u8g_pb8h1.c ****   All rights reserved.
  12:u8glib/u8g_pb8h1.c **** 
  13:u8glib/u8g_pb8h1.c ****   Redistribution and use in source and binary forms, with or without modification, 
  14:u8glib/u8g_pb8h1.c ****   are permitted provided that the following conditions are met:
  15:u8glib/u8g_pb8h1.c **** 
  16:u8glib/u8g_pb8h1.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  17:u8glib/u8g_pb8h1.c ****     of conditions and the following disclaimer.
  18:u8glib/u8g_pb8h1.c ****     
  19:u8glib/u8g_pb8h1.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  20:u8glib/u8g_pb8h1.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  21:u8glib/u8g_pb8h1.c ****     materials provided with the distribution.
  22:u8glib/u8g_pb8h1.c **** 
  23:u8glib/u8g_pb8h1.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  24:u8glib/u8g_pb8h1.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  25:u8glib/u8g_pb8h1.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  26:u8glib/u8g_pb8h1.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  27:u8glib/u8g_pb8h1.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  28:u8glib/u8g_pb8h1.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  29:u8glib/u8g_pb8h1.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 2


  30:u8glib/u8g_pb8h1.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  31:u8glib/u8g_pb8h1.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  32:u8glib/u8g_pb8h1.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  33:u8glib/u8g_pb8h1.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  34:u8glib/u8g_pb8h1.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  35:u8glib/u8g_pb8h1.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  36:u8glib/u8g_pb8h1.c **** 
  37:u8glib/u8g_pb8h1.c **** 
  38:u8glib/u8g_pb8h1.c ****   total buffer size is limited to 256 bytes because of the calculation inside the set pixel procedu
  39:u8glib/u8g_pb8h1.c **** 
  40:u8glib/u8g_pb8h1.c ****   23. Sep 2012: Bug with down procedure, see FPS 1st page --> fixed (bug located in u8g_clip.c)
  41:u8glib/u8g_pb8h1.c **** 
  42:u8glib/u8g_pb8h1.c **** */
  43:u8glib/u8g_pb8h1.c **** 
  44:u8glib/u8g_pb8h1.c **** #include "u8g.h"
  45:u8glib/u8g_pb8h1.c **** #include <string.h>
  46:u8glib/u8g_pb8h1.c **** 
  47:u8glib/u8g_pb8h1.c **** #ifdef __unix__
  48:u8glib/u8g_pb8h1.c **** #include <assert.h>
  49:u8glib/u8g_pb8h1.c **** #endif
  50:u8glib/u8g_pb8h1.c **** 
  51:u8glib/u8g_pb8h1.c **** /* NEW_CODE disabled, because the performance increase was too slow and not worth compared */
  52:u8glib/u8g_pb8h1.c **** /* to the increase of code size */
  53:u8glib/u8g_pb8h1.c **** /* #define NEW_CODE */
  54:u8glib/u8g_pb8h1.c **** 
  55:u8glib/u8g_pb8h1.c **** #ifdef __unix__
  56:u8glib/u8g_pb8h1.c **** void *u8g_buf_lower_limit;
  57:u8glib/u8g_pb8h1.c **** void *u8g_buf_upper_limit;
  58:u8glib/u8g_pb8h1.c **** #endif
  59:u8glib/u8g_pb8h1.c **** 
  60:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_Init(u8g_pb_t *b, void *buf, u8g_uint_t width) U8G_NOINLINE;
  61:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_set_pixel(u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y, uint8_t color_index) U8G_NOINLINE
  62:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_SetPixel(u8g_pb_t *b, const u8g_dev_arg_pixel_t * const arg_pixel) U8G_NOINLINE ;
  63:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_Set8PixelStd(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel) U8G_NOINLINE;
  64:u8glib/u8g_pb8h1.c **** uint8_t u8g_dev_pb8h1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg);
  65:u8glib/u8g_pb8h1.c **** 
  66:u8glib/u8g_pb8h1.c **** 
  67:u8glib/u8g_pb8h1.c **** #ifdef NEW_CODE
  68:u8glib/u8g_pb8h1.c **** struct u8g_pb_h1_struct
  69:u8glib/u8g_pb8h1.c **** {
  70:u8glib/u8g_pb8h1.c ****   u8g_uint_t x;
  71:u8glib/u8g_pb8h1.c ****   u8g_uint_t y;
  72:u8glib/u8g_pb8h1.c ****   uint8_t *ptr;
  73:u8glib/u8g_pb8h1.c ****   uint8_t mask;
  74:u8glib/u8g_pb8h1.c ****   uint8_t line_byte_len;
  75:u8glib/u8g_pb8h1.c ****   uint8_t cnt;
  76:u8glib/u8g_pb8h1.c **** };
  77:u8glib/u8g_pb8h1.c **** 
  78:u8glib/u8g_pb8h1.c **** static uint8_t u8g_pb8h1_bitmask[8] = { 0x080, 0x040, 0x020, 0x010, 0x008, 0x004, 0x002, 0x001 };
  79:u8glib/u8g_pb8h1.c **** 
  80:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_right(struct u8g_pb_h1_struct *s)  U8G_NOINLINE;
  81:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_right(struct u8g_pb_h1_struct *s)
  82:u8glib/u8g_pb8h1.c **** {
  83:u8glib/u8g_pb8h1.c ****   register u8g_uint_t x;
  84:u8glib/u8g_pb8h1.c ****   x = s->x;
  85:u8glib/u8g_pb8h1.c ****   x++;
  86:u8glib/u8g_pb8h1.c ****   s->x = x;
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 3


  87:u8glib/u8g_pb8h1.c ****   x &= 7;
  88:u8glib/u8g_pb8h1.c ****   s->mask = u8g_pb8h1_bitmask[x];
  89:u8glib/u8g_pb8h1.c ****   if ( x == 0 )
  90:u8glib/u8g_pb8h1.c ****     s->ptr++;
  91:u8glib/u8g_pb8h1.c **** }
  92:u8glib/u8g_pb8h1.c **** 
  93:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_left(struct u8g_pb_h1_struct *s)
  94:u8glib/u8g_pb8h1.c **** {
  95:u8glib/u8g_pb8h1.c ****   register u8g_uint_t x;
  96:u8glib/u8g_pb8h1.c ****   x = s->x;
  97:u8glib/u8g_pb8h1.c ****   x--;
  98:u8glib/u8g_pb8h1.c ****   s->x = x;
  99:u8glib/u8g_pb8h1.c ****   x &= 7;
 100:u8glib/u8g_pb8h1.c ****   s->mask = u8g_pb8h1_bitmask[x];
 101:u8glib/u8g_pb8h1.c ****   if ( x == 7 )
 102:u8glib/u8g_pb8h1.c ****     s->ptr--;
 103:u8glib/u8g_pb8h1.c **** }
 104:u8glib/u8g_pb8h1.c **** 
 105:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_down(struct u8g_pb_h1_struct *s)
 106:u8glib/u8g_pb8h1.c **** {
 107:u8glib/u8g_pb8h1.c ****   s->y++;
 108:u8glib/u8g_pb8h1.c ****   s->ptr += s->line_byte_len;
 109:u8glib/u8g_pb8h1.c **** }
 110:u8glib/u8g_pb8h1.c **** 
 111:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_up(struct u8g_pb_h1_struct *s)
 112:u8glib/u8g_pb8h1.c **** {
 113:u8glib/u8g_pb8h1.c ****   s->y--;
 114:u8glib/u8g_pb8h1.c ****   s->ptr -= s->line_byte_len;
 115:u8glib/u8g_pb8h1.c **** }
 116:u8glib/u8g_pb8h1.c **** 
 117:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_init(struct u8g_pb_h1_struct *s, u8g_pb_t *b, u8g_uint_t x, u8g_uint_t 
 118:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_init(struct u8g_pb_h1_struct *s, u8g_pb_t *b, u8g_uint_t x, u8g_uint_t 
 119:u8glib/u8g_pb8h1.c **** {
 120:u8glib/u8g_pb8h1.c ****   u8g_uint_t tmp;
 121:u8glib/u8g_pb8h1.c ****   
 122:u8glib/u8g_pb8h1.c ****   uint8_t *ptr = b->buf;
 123:u8glib/u8g_pb8h1.c ****   
 124:u8glib/u8g_pb8h1.c ****   s->x = x;  
 125:u8glib/u8g_pb8h1.c ****   s->y = y;
 126:u8glib/u8g_pb8h1.c ****   
 127:u8glib/u8g_pb8h1.c ****   y -= b->p.page_y0;
 128:u8glib/u8g_pb8h1.c ****   
 129:u8glib/u8g_pb8h1.c ****   tmp = b->width;
 130:u8glib/u8g_pb8h1.c ****   tmp >>= 3;
 131:u8glib/u8g_pb8h1.c ****   s->line_byte_len = tmp;
 132:u8glib/u8g_pb8h1.c ****   
 133:u8glib/u8g_pb8h1.c ****   /* assume negative y values, can be down to -7, subtract this from the pointer and add correction
 134:u8glib/u8g_pb8h1.c ****   ptr -= tmp*8;
 135:u8glib/u8g_pb8h1.c ****   y+=8;
 136:u8glib/u8g_pb8h1.c ****   /* it is important that the result of tmp*y can be 16 bit value also for 8 bit mode */
 137:u8glib/u8g_pb8h1.c ****   ptr += tmp*y;
 138:u8glib/u8g_pb8h1.c ****   
 139:u8glib/u8g_pb8h1.c ****   s->mask = u8g_pb8h1_bitmask[x & 7];
 140:u8glib/u8g_pb8h1.c ****   
 141:u8glib/u8g_pb8h1.c ****   /* assume negative x values (to -7), subtract 8 pixel from the pointer and add 8 to x */
 142:u8glib/u8g_pb8h1.c ****   ptr--;
 143:u8glib/u8g_pb8h1.c ****   x += 8;
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 4


 144:u8glib/u8g_pb8h1.c ****   x >>= 3;
 145:u8glib/u8g_pb8h1.c ****   ptr += x;
 146:u8glib/u8g_pb8h1.c ****   s->ptr = ptr;
 147:u8glib/u8g_pb8h1.c **** }
 148:u8glib/u8g_pb8h1.c **** 
 149:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_set_pixel(struct u8g_pb_h1_struct *s, uint8_t color_index) U8G_NOINLINE
 150:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_state_set_pixel(struct u8g_pb_h1_struct *s, uint8_t color_index)
 151:u8glib/u8g_pb8h1.c **** {
 152:u8glib/u8g_pb8h1.c ****   
 153:u8glib/u8g_pb8h1.c **** #ifdef __unix__
 154:u8glib/u8g_pb8h1.c ****   assert( s->ptr >= u8g_buf_lower_limit );
 155:u8glib/u8g_pb8h1.c ****   assert( s->ptr < u8g_buf_upper_limit );
 156:u8glib/u8g_pb8h1.c **** #endif
 157:u8glib/u8g_pb8h1.c ****   
 158:u8glib/u8g_pb8h1.c ****   if ( color_index )
 159:u8glib/u8g_pb8h1.c ****   {
 160:u8glib/u8g_pb8h1.c ****     *s->ptr |= s->mask;
 161:u8glib/u8g_pb8h1.c ****   }
 162:u8glib/u8g_pb8h1.c ****   else
 163:u8glib/u8g_pb8h1.c ****   {
 164:u8glib/u8g_pb8h1.c ****     uint8_t mask = s->mask;
 165:u8glib/u8g_pb8h1.c ****     mask ^=0xff;
 166:u8glib/u8g_pb8h1.c ****     *s->ptr &= mask;
 167:u8glib/u8g_pb8h1.c ****   }  
 168:u8glib/u8g_pb8h1.c **** }
 169:u8glib/u8g_pb8h1.c **** #endif
 170:u8glib/u8g_pb8h1.c **** 
 171:u8glib/u8g_pb8h1.c **** 
 172:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_Init(u8g_pb_t *b, void *buf, u8g_uint_t width)
 173:u8glib/u8g_pb8h1.c **** {
  30              		.loc 1 173 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 174:u8glib/u8g_pb8h1.c ****   b->buf = buf;
  40              		.loc 1 174 0
  41 0002 8160     		str	r1, [r0, #8]
 175:u8glib/u8g_pb8h1.c ****   b->width = width;
  42              		.loc 1 175 0
  43 0004 4271     		strb	r2, [r0, #5]
 176:u8glib/u8g_pb8h1.c ****   u8g_pb_Clear(b);
  44              		.loc 1 176 0
  45 0006 FFF7FEFF 		bl	u8g_pb_Clear
  46              	.LVL1:
  47 000a 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE0:
  51              		.section	.text.u8g_pb8h1_set_pixel,"ax",%progbits
  52              		.align	2
  53              		.global	u8g_pb8h1_set_pixel
  54              		.thumb
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 5


  55              		.thumb_func
  57              	u8g_pb8h1_set_pixel:
  58              	.LFB1:
 177:u8glib/u8g_pb8h1.c **** }
 178:u8glib/u8g_pb8h1.c **** 
 179:u8glib/u8g_pb8h1.c **** /* limitation: total buffer must not exceed 256 bytes */
 180:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_set_pixel(u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y, uint8_t color_index)
 181:u8glib/u8g_pb8h1.c **** {
  59              		.loc 1 181 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 30B4     		push	{r4, r5}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
  69              		.cfi_offset 5, -4
 182:u8glib/u8g_pb8h1.c **** #ifdef NEW_CODE
 183:u8glib/u8g_pb8h1.c ****   struct u8g_pb_h1_struct s;
 184:u8glib/u8g_pb8h1.c ****   u8g_pb8h1_state_init(&s, b, x, y);
 185:u8glib/u8g_pb8h1.c ****   u8g_pb8h1_state_set_pixel(&s, color_index);
 186:u8glib/u8g_pb8h1.c **** 
 187:u8glib/u8g_pb8h1.c **** //  u8g_pb8h1_state_up(&s);
 188:u8glib/u8g_pb8h1.c **** //  if ( s.y > b->p.page_y1 )
 189:u8glib/u8g_pb8h1.c **** //    return;
 190:u8glib/u8g_pb8h1.c **** //  if ( s.x > b->width )
 191:u8glib/u8g_pb8h1.c **** //    return;
 192:u8glib/u8g_pb8h1.c **** //  u8g_pb8h1_state_set_pixel(&s, color_index);
 193:u8glib/u8g_pb8h1.c **** #else
 194:u8glib/u8g_pb8h1.c ****   register uint8_t mask;
 195:u8glib/u8g_pb8h1.c ****   u8g_uint_t tmp;
 196:u8glib/u8g_pb8h1.c ****   uint8_t *ptr = b->buf;
  70              		.loc 1 196 0
  71 0002 8568     		ldr	r5, [r0, #8]
  72              	.LVL3:
 197:u8glib/u8g_pb8h1.c ****   
 198:u8glib/u8g_pb8h1.c ****   y -= b->p.page_y0;
  73              		.loc 1 198 0
  74 0004 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
  75 0006 121B     		subs	r2, r2, r4
  76              	.LVL4:
  77 0008 D2B2     		uxtb	r2, r2
  78              	.LVL5:
 199:u8glib/u8g_pb8h1.c ****   tmp = b->width;
  79              		.loc 1 199 0
  80 000a 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
  81              	.LVL6:
 200:u8glib/u8g_pb8h1.c ****   tmp >>= 3;
  82              		.loc 1 200 0
  83 000c C008     		lsrs	r0, r0, #3
  84              	.LVL7:
 201:u8glib/u8g_pb8h1.c ****   tmp *= (uint8_t)y;
  85              		.loc 1 201 0
  86 000e 12FB00F2 		smulbb	r2, r2, r0
  87              	.LVL8:
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 6


 202:u8glib/u8g_pb8h1.c ****   ptr += tmp;
 203:u8glib/u8g_pb8h1.c ****   
 204:u8glib/u8g_pb8h1.c ****   mask = 0x080;
 205:u8glib/u8g_pb8h1.c ****   mask >>= x & 7;
  88              		.loc 1 205 0
  89 0012 01F00704 		and	r4, r1, #7
  90 0016 8020     		movs	r0, #128
  91 0018 2041     		asrs	r0, r0, r4
  92 001a C0B2     		uxtb	r0, r0
  93              	.LVL9:
 206:u8glib/u8g_pb8h1.c ****   x >>= 3;
  94              		.loc 1 206 0
  95 001c C908     		lsrs	r1, r1, #3
  96              	.LVL10:
 207:u8glib/u8g_pb8h1.c ****   ptr += x;
  97              		.loc 1 207 0
  98 001e 51FA82F1 		uxtab	r1, r1, r2
  99              	.LVL11:
 208:u8glib/u8g_pb8h1.c ****   if ( color_index )
 100              		.loc 1 208 0
 101 0022 1BB1     		cbz	r3, .L4
 209:u8glib/u8g_pb8h1.c ****   {
 210:u8glib/u8g_pb8h1.c ****     *ptr |= mask;
 102              		.loc 1 210 0
 103 0024 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 104              	.LVL12:
 105 0026 1843     		orrs	r0, r0, r3
 106              	.LVL13:
 107 0028 6854     		strb	r0, [r5, r1]
 108 002a 03E0     		b	.L3
 109              	.LVL14:
 110              	.L4:
 211:u8glib/u8g_pb8h1.c ****   }
 212:u8glib/u8g_pb8h1.c ****   else
 213:u8glib/u8g_pb8h1.c ****   {
 214:u8glib/u8g_pb8h1.c ****     mask ^=0xff;
 215:u8glib/u8g_pb8h1.c ****     *ptr &= mask;
 111              		.loc 1 215 0
 112 002c 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 113              	.LVL15:
 114 002e 23EA0000 		bic	r0, r3, r0
 115              	.LVL16:
 116 0032 6854     		strb	r0, [r5, r1]
 117              	.LVL17:
 118              	.L3:
 216:u8glib/u8g_pb8h1.c ****   }
 217:u8glib/u8g_pb8h1.c **** #endif
 218:u8glib/u8g_pb8h1.c **** }
 119              		.loc 1 218 0
 120 0034 30BC     		pop	{r4, r5}
 121              	.LCFI2:
 122              		.cfi_restore 5
 123              		.cfi_restore 4
 124              		.cfi_def_cfa_offset 0
 125              	.LVL18:
 126 0036 7047     		bx	lr
 127              		.cfi_endproc
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 7


 128              	.LFE1:
 130              		.section	.text.u8g_pb8h1_SetPixel,"ax",%progbits
 131              		.align	2
 132              		.global	u8g_pb8h1_SetPixel
 133              		.thumb
 134              		.thumb_func
 136              	u8g_pb8h1_SetPixel:
 137              	.LFB2:
 219:u8glib/u8g_pb8h1.c **** 
 220:u8glib/u8g_pb8h1.c **** 
 221:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_SetPixel(u8g_pb_t *b, const u8g_dev_arg_pixel_t * const arg_pixel)
 222:u8glib/u8g_pb8h1.c **** {
 138              		.loc 1 222 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              	.LVL19:
 223:u8glib/u8g_pb8h1.c ****   if ( arg_pixel->y < b->p.page_y0 )
 143              		.loc 1 223 0
 144 0000 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 145 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 146 0004 9A42     		cmp	r2, r3
 147 0006 0CD3     		bcc	.L10
 224:u8glib/u8g_pb8h1.c ****     return;
 225:u8glib/u8g_pb8h1.c ****   if ( arg_pixel->y > b->p.page_y1 )
 148              		.loc 1 225 0
 149 0008 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 150 000a 9A42     		cmp	r2, r3
 151 000c 09D8     		bhi	.L10
 222:u8glib/u8g_pb8h1.c ****   if ( arg_pixel->y < b->p.page_y0 )
 152              		.loc 1 222 0
 153 000e 10B5     		push	{r4, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
 226:u8glib/u8g_pb8h1.c ****     return;
 227:u8glib/u8g_pb8h1.c ****   if ( arg_pixel->x >= b->width )
 158              		.loc 1 227 0
 159 0010 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 160 0012 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 161 0014 9C42     		cmp	r4, r3
 162 0016 03D2     		bcs	.L7
 228:u8glib/u8g_pb8h1.c ****     return;
 229:u8glib/u8g_pb8h1.c ****   u8g_pb8h1_set_pixel(b, arg_pixel->x, arg_pixel->y, arg_pixel->color);
 163              		.loc 1 229 0
 164 0018 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 165 001a 2146     		mov	r1, r4
 166              	.LVL20:
 167 001c FFF7FEFF 		bl	u8g_pb8h1_set_pixel
 168              	.LVL21:
 169              	.L7:
 170 0020 10BD     		pop	{r4, pc}
 171              	.LVL22:
 172              	.L10:
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 8


 175              		.cfi_restore 4
 176              		.cfi_restore 14
 177 0022 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE2:
 181              		.section	.text.u8g_pb8h1_Set8PixelStd,"ax",%progbits
 182              		.align	2
 183              		.global	u8g_pb8h1_Set8PixelStd
 184              		.thumb
 185              		.thumb_func
 187              	u8g_pb8h1_Set8PixelStd:
 188              	.LFB3:
 230:u8glib/u8g_pb8h1.c **** }
 231:u8glib/u8g_pb8h1.c **** 
 232:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_Set8PixelStd(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
 233:u8glib/u8g_pb8h1.c **** {
 189              		.loc 1 233 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              	.LVL23:
 194 0000 70B5     		push	{r4, r5, r6, lr}
 195              	.LCFI5:
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 4, -16
 198              		.cfi_offset 5, -12
 199              		.cfi_offset 6, -8
 200              		.cfi_offset 14, -4
 201 0002 0646     		mov	r6, r0
 202 0004 0D46     		mov	r5, r1
 234:u8glib/u8g_pb8h1.c ****   register uint8_t pixel = arg_pixel->pixel;
 203              		.loc 1 234 0
 204 0006 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 205              	.LVL24:
 206              	.L19:
 235:u8glib/u8g_pb8h1.c ****   do
 236:u8glib/u8g_pb8h1.c ****   {
 237:u8glib/u8g_pb8h1.c ****     if ( pixel & 128 )
 207              		.loc 1 237 0
 208 0008 14F0800F 		tst	r4, #128
 209 000c 03D0     		beq	.L12
 238:u8glib/u8g_pb8h1.c ****     {
 239:u8glib/u8g_pb8h1.c ****       u8g_pb8h1_SetPixel(b, arg_pixel);
 210              		.loc 1 239 0
 211 000e 2946     		mov	r1, r5
 212 0010 3046     		mov	r0, r6
 213 0012 FFF7FEFF 		bl	u8g_pb8h1_SetPixel
 214              	.LVL25:
 215              	.L12:
 240:u8glib/u8g_pb8h1.c ****     }
 241:u8glib/u8g_pb8h1.c ****     switch( arg_pixel->dir )
 216              		.loc 1 241 0
 217 0016 EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 218 0018 032B     		cmp	r3, #3
 219 001a 12D8     		bhi	.L13
 220 001c DFE803F0 		tbb	[pc, r3]
 221              	.L15:
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 9


 222 0020 02       		.byte	(.L14-.L15)/2
 223 0021 06       		.byte	(.L16-.L15)/2
 224 0022 0A       		.byte	(.L17-.L15)/2
 225 0023 0E       		.byte	(.L18-.L15)/2
 226              		.p2align 1
 227              	.L14:
 242:u8glib/u8g_pb8h1.c ****     {
 243:u8glib/u8g_pb8h1.c ****       case 0: arg_pixel->x++; break;
 228              		.loc 1 243 0
 229 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 230 0026 0133     		adds	r3, r3, #1
 231 0028 2B70     		strb	r3, [r5]
 232 002a 0AE0     		b	.L13
 233              	.L16:
 244:u8glib/u8g_pb8h1.c ****       case 1: arg_pixel->y++; break;
 234              		.loc 1 244 0
 235 002c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 236 002e 0133     		adds	r3, r3, #1
 237 0030 6B70     		strb	r3, [r5, #1]
 238 0032 06E0     		b	.L13
 239              	.L17:
 245:u8glib/u8g_pb8h1.c ****       case 2: arg_pixel->x--; break;
 240              		.loc 1 245 0
 241 0034 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 242 0036 013B     		subs	r3, r3, #1
 243 0038 2B70     		strb	r3, [r5]
 244 003a 02E0     		b	.L13
 245              	.L18:
 246:u8glib/u8g_pb8h1.c ****       case 3: arg_pixel->y--; break;
 246              		.loc 1 246 0
 247 003c 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 248 003e 013B     		subs	r3, r3, #1
 249 0040 6B70     		strb	r3, [r5, #1]
 250              	.L13:
 247:u8glib/u8g_pb8h1.c ****     }
 248:u8glib/u8g_pb8h1.c ****     pixel <<= 1;
 251              		.loc 1 248 0
 252 0042 6400     		lsls	r4, r4, #1
 253              	.LVL26:
 249:u8glib/u8g_pb8h1.c ****   } while( pixel != 0  );
 254              		.loc 1 249 0
 255 0044 14F0FF04 		ands	r4, r4, #255
 256              	.LVL27:
 257 0048 DED1     		bne	.L19
 250:u8glib/u8g_pb8h1.c **** }
 258              		.loc 1 250 0
 259 004a 70BD     		pop	{r4, r5, r6, pc}
 260              		.cfi_endproc
 261              	.LFE3:
 263              		.section	.text.u8g_pb8h1_Set8PixelOpt2,"ax",%progbits
 264              		.align	2
 265              		.global	u8g_pb8h1_Set8PixelOpt2
 266              		.thumb
 267              		.thumb_func
 269              	u8g_pb8h1_Set8PixelOpt2:
 270              	.LFB4:
 251:u8glib/u8g_pb8h1.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 10


 252:u8glib/u8g_pb8h1.c **** void u8g_pb8h1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
 253:u8glib/u8g_pb8h1.c **** {
 271              		.loc 1 253 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL28:
 276 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 277              	.LCFI6:
 278              		.cfi_def_cfa_offset 24
 279              		.cfi_offset 4, -24
 280              		.cfi_offset 5, -20
 281              		.cfi_offset 6, -16
 282              		.cfi_offset 7, -12
 283              		.cfi_offset 8, -8
 284              		.cfi_offset 14, -4
 285 0004 8046     		mov	r8, r0
 286 0006 0D46     		mov	r5, r1
 254:u8glib/u8g_pb8h1.c ****   register uint8_t pixel = arg_pixel->pixel;
 287              		.loc 1 254 0
 288 0008 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 289              	.LVL29:
 255:u8glib/u8g_pb8h1.c ****   u8g_uint_t dx = 0;
 256:u8glib/u8g_pb8h1.c ****   u8g_uint_t dy = 0;
 257:u8glib/u8g_pb8h1.c ****   
 258:u8glib/u8g_pb8h1.c ****   switch( arg_pixel->dir )
 290              		.loc 1 258 0
 291 000a CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 292 000c 032B     		cmp	r3, #3
 293 000e 03D8     		bhi	.L22
 294 0010 DFE803F0 		tbb	[pc, r3]
 295              	.L24:
 296 0014 0E       		.byte	(.L30-.L24)/2
 297 0015 05       		.byte	(.L25-.L24)/2
 298 0016 08       		.byte	(.L26-.L24)/2
 299 0017 0B       		.byte	(.L27-.L24)/2
 300              		.p2align 1
 301              	.L22:
 256:u8glib/u8g_pb8h1.c ****   
 302              		.loc 1 256 0
 303 0018 0026     		movs	r6, #0
 255:u8glib/u8g_pb8h1.c ****   u8g_uint_t dx = 0;
 304              		.loc 1 255 0
 305 001a 3746     		mov	r7, r6
 306 001c 0AE0     		b	.L29
 307              	.L25:
 308              	.LVL30:
 259:u8glib/u8g_pb8h1.c ****   {
 260:u8glib/u8g_pb8h1.c ****     case 0: dx++; break;
 261:u8glib/u8g_pb8h1.c ****     case 1: dy++; break;
 309              		.loc 1 261 0
 310 001e 0126     		movs	r6, #1
 255:u8glib/u8g_pb8h1.c ****   u8g_uint_t dy = 0;
 311              		.loc 1 255 0
 312 0020 0027     		movs	r7, #0
 313              		.loc 1 261 0
 314 0022 07E0     		b	.L29
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 11


 315              	.LVL31:
 316              	.L26:
 256:u8glib/u8g_pb8h1.c ****   
 317              		.loc 1 256 0
 318 0024 0026     		movs	r6, #0
 262:u8glib/u8g_pb8h1.c ****     case 2: dx--; break;
 319              		.loc 1 262 0
 320 0026 FF27     		movs	r7, #255
 321 0028 04E0     		b	.L29
 322              	.LVL32:
 323              	.L27:
 263:u8glib/u8g_pb8h1.c ****     case 3: dy--; break;
 324              		.loc 1 263 0
 325 002a FF26     		movs	r6, #255
 255:u8glib/u8g_pb8h1.c ****   u8g_uint_t dy = 0;
 326              		.loc 1 255 0
 327 002c 0027     		movs	r7, #0
 328              		.loc 1 263 0
 329 002e 01E0     		b	.L29
 330              	.LVL33:
 331              	.L30:
 256:u8glib/u8g_pb8h1.c ****   
 332              		.loc 1 256 0
 333 0030 0026     		movs	r6, #0
 260:u8glib/u8g_pb8h1.c ****     case 1: dy++; break;
 334              		.loc 1 260 0
 335 0032 0127     		movs	r7, #1
 336              	.LVL34:
 337              	.L29:
 264:u8glib/u8g_pb8h1.c ****   }
 265:u8glib/u8g_pb8h1.c ****   
 266:u8glib/u8g_pb8h1.c ****   do
 267:u8glib/u8g_pb8h1.c ****   {
 268:u8glib/u8g_pb8h1.c ****     if ( pixel & 128 )
 338              		.loc 1 268 0
 339 0034 14F0800F 		tst	r4, #128
 340 0038 03D0     		beq	.L28
 269:u8glib/u8g_pb8h1.c ****       u8g_pb8h1_SetPixel(b, arg_pixel);
 341              		.loc 1 269 0
 342 003a 2946     		mov	r1, r5
 343 003c 4046     		mov	r0, r8
 344 003e FFF7FEFF 		bl	u8g_pb8h1_SetPixel
 345              	.LVL35:
 346              	.L28:
 270:u8glib/u8g_pb8h1.c ****     arg_pixel->x += dx;
 347              		.loc 1 270 0
 348 0042 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 349 0044 3B44     		add	r3, r3, r7
 350 0046 2B70     		strb	r3, [r5]
 271:u8glib/u8g_pb8h1.c ****     arg_pixel->y += dy;
 351              		.loc 1 271 0
 352 0048 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 353 004a 3344     		add	r3, r3, r6
 354 004c 6B70     		strb	r3, [r5, #1]
 272:u8glib/u8g_pb8h1.c ****     pixel <<= 1;
 355              		.loc 1 272 0
 356 004e 6400     		lsls	r4, r4, #1
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 12


 357              	.LVL36:
 273:u8glib/u8g_pb8h1.c ****   } while( pixel != 0  );  
 358              		.loc 1 273 0
 359 0050 14F0FF04 		ands	r4, r4, #255
 360              	.LVL37:
 361 0054 EED1     		bne	.L29
 274:u8glib/u8g_pb8h1.c **** }
 362              		.loc 1 274 0
 363 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 364              		.cfi_endproc
 365              	.LFE4:
 367 005a 00BF     		.section	.text.u8g_dev_pb8h1_base_fn,"ax",%progbits
 368              		.align	2
 369              		.global	u8g_dev_pb8h1_base_fn
 370              		.thumb
 371              		.thumb_func
 373              	u8g_dev_pb8h1_base_fn:
 374              	.LFB5:
 275:u8glib/u8g_pb8h1.c **** 
 276:u8glib/u8g_pb8h1.c **** #ifdef NEW_CODE
 277:u8glib/u8g_pb8h1.c **** static void u8g_pb8h1_Set8PixelState(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
 278:u8glib/u8g_pb8h1.c **** {
 279:u8glib/u8g_pb8h1.c ****   register uint8_t pixel = arg_pixel->pixel;
 280:u8glib/u8g_pb8h1.c ****   struct u8g_pb_h1_struct s;
 281:u8glib/u8g_pb8h1.c ****   uint8_t cnt;
 282:u8glib/u8g_pb8h1.c ****   u8g_pb8h1_state_init(&s, b, arg_pixel->x, arg_pixel->y);
 283:u8glib/u8g_pb8h1.c ****   cnt = 8;
 284:u8glib/u8g_pb8h1.c ****   switch( arg_pixel->dir )
 285:u8glib/u8g_pb8h1.c ****   {
 286:u8glib/u8g_pb8h1.c ****     case 0: 
 287:u8glib/u8g_pb8h1.c ****       do
 288:u8glib/u8g_pb8h1.c ****       {
 289:u8glib/u8g_pb8h1.c **** 	if ( s.x < b->width )
 290:u8glib/u8g_pb8h1.c **** 	  if ( pixel & 128 )
 291:u8glib/u8g_pb8h1.c **** 	    u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
 292:u8glib/u8g_pb8h1.c **** 	u8g_pb8h1_state_right(&s); 
 293:u8glib/u8g_pb8h1.c **** 	pixel <<= 1;
 294:u8glib/u8g_pb8h1.c **** 	cnt--;
 295:u8glib/u8g_pb8h1.c ****       } while( cnt > 0 && pixel != 0  );
 296:u8glib/u8g_pb8h1.c ****       break;
 297:u8glib/u8g_pb8h1.c ****     case 1: 
 298:u8glib/u8g_pb8h1.c ****       do
 299:u8glib/u8g_pb8h1.c ****       {
 300:u8glib/u8g_pb8h1.c **** 	if ( s.y >= b->p.page_y0 )
 301:u8glib/u8g_pb8h1.c **** 	  if ( s.y <= b->p.page_y1 )
 302:u8glib/u8g_pb8h1.c **** 	    if ( pixel & 128 )
 303:u8glib/u8g_pb8h1.c **** 	      u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
 304:u8glib/u8g_pb8h1.c **** 	u8g_pb8h1_state_down(&s); 
 305:u8glib/u8g_pb8h1.c **** 	pixel <<= 1;
 306:u8glib/u8g_pb8h1.c **** 	cnt--;
 307:u8glib/u8g_pb8h1.c ****       } while( cnt > 0 && pixel != 0  );
 308:u8glib/u8g_pb8h1.c ****       break;
 309:u8glib/u8g_pb8h1.c ****     case 2: 
 310:u8glib/u8g_pb8h1.c ****       do
 311:u8glib/u8g_pb8h1.c ****       {
 312:u8glib/u8g_pb8h1.c **** 	if ( s.x < b->width )
 313:u8glib/u8g_pb8h1.c **** 	  if ( pixel & 128 )
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 13


 314:u8glib/u8g_pb8h1.c **** 	    u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
 315:u8glib/u8g_pb8h1.c **** 	u8g_pb8h1_state_left(&s); 
 316:u8glib/u8g_pb8h1.c **** 	pixel <<= 1;
 317:u8glib/u8g_pb8h1.c **** 	cnt--;
 318:u8glib/u8g_pb8h1.c ****       } while( cnt > 0 && pixel != 0 );
 319:u8glib/u8g_pb8h1.c ****       break;
 320:u8glib/u8g_pb8h1.c ****     case 3: 	
 321:u8glib/u8g_pb8h1.c ****       do
 322:u8glib/u8g_pb8h1.c ****       {
 323:u8glib/u8g_pb8h1.c **** 	if ( s.y >= b->p.page_y0 )
 324:u8glib/u8g_pb8h1.c **** 	  if ( s.y <= b->p.page_y1 )
 325:u8glib/u8g_pb8h1.c **** 	    if ( pixel & 128 )
 326:u8glib/u8g_pb8h1.c **** 	      u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
 327:u8glib/u8g_pb8h1.c **** 	u8g_pb8h1_state_up(&s); 
 328:u8glib/u8g_pb8h1.c **** 	pixel <<= 1;
 329:u8glib/u8g_pb8h1.c **** 	cnt--;
 330:u8glib/u8g_pb8h1.c ****       } while( cnt > 0 && pixel != 0  );
 331:u8glib/u8g_pb8h1.c ****       break;
 332:u8glib/u8g_pb8h1.c ****   }
 333:u8glib/u8g_pb8h1.c **** }
 334:u8glib/u8g_pb8h1.c **** #endif
 335:u8glib/u8g_pb8h1.c **** 
 336:u8glib/u8g_pb8h1.c **** uint8_t u8g_dev_pb8h1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
 337:u8glib/u8g_pb8h1.c **** {
 375              		.loc 1 337 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL38:
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              	.LCFI7:
 382              		.cfi_def_cfa_offset 16
 383              		.cfi_offset 3, -16
 384              		.cfi_offset 4, -12
 385              		.cfi_offset 5, -8
 386              		.cfi_offset 14, -4
 387 0002 1D46     		mov	r5, r3
 338:u8glib/u8g_pb8h1.c ****   u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
 388              		.loc 1 338 0
 389 0004 4C68     		ldr	r4, [r1, #4]
 390              	.LVL39:
 339:u8glib/u8g_pb8h1.c ****   switch(msg)
 391              		.loc 1 339 0
 392 0006 143A     		subs	r2, r2, #20
 393              	.LVL40:
 394 0008 332A     		cmp	r2, #51
 395 000a 4CD8     		bhi	.L42
 396 000c DFE802F0 		tbb	[pc, r2]
 397              	.LVL41:
 398              	.L35:
 399 0010 2B       		.byte	(.L34-.L35)/2
 400 0011 33       		.byte	(.L36-.L35)/2
 401 0012 4B       		.byte	(.L42-.L35)/2
 402 0013 3D       		.byte	(.L37-.L35)/2
 403 0014 4B       		.byte	(.L42-.L35)/2
 404 0015 4B       		.byte	(.L42-.L35)/2
 405 0016 4B       		.byte	(.L42-.L35)/2
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 14


 406 0017 4B       		.byte	(.L42-.L35)/2
 407 0018 4B       		.byte	(.L42-.L35)/2
 408 0019 4B       		.byte	(.L42-.L35)/2
 409 001a 4B       		.byte	(.L42-.L35)/2
 410 001b 4B       		.byte	(.L42-.L35)/2
 411 001c 4B       		.byte	(.L42-.L35)/2
 412 001d 4B       		.byte	(.L42-.L35)/2
 413 001e 4B       		.byte	(.L42-.L35)/2
 414 001f 4B       		.byte	(.L42-.L35)/2
 415 0020 4B       		.byte	(.L42-.L35)/2
 416 0021 4B       		.byte	(.L42-.L35)/2
 417 0022 4B       		.byte	(.L42-.L35)/2
 418 0023 4B       		.byte	(.L42-.L35)/2
 419 0024 4B       		.byte	(.L42-.L35)/2
 420 0025 4B       		.byte	(.L42-.L35)/2
 421 0026 4B       		.byte	(.L42-.L35)/2
 422 0027 4B       		.byte	(.L42-.L35)/2
 423 0028 4B       		.byte	(.L42-.L35)/2
 424 0029 4B       		.byte	(.L42-.L35)/2
 425 002a 4B       		.byte	(.L42-.L35)/2
 426 002b 4B       		.byte	(.L42-.L35)/2
 427 002c 4B       		.byte	(.L42-.L35)/2
 428 002d 4B       		.byte	(.L42-.L35)/2
 429 002e 25       		.byte	(.L38-.L35)/2
 430 002f 4B       		.byte	(.L42-.L35)/2
 431 0030 4B       		.byte	(.L42-.L35)/2
 432 0031 4B       		.byte	(.L42-.L35)/2
 433 0032 4B       		.byte	(.L42-.L35)/2
 434 0033 4B       		.byte	(.L42-.L35)/2
 435 0034 4B       		.byte	(.L42-.L35)/2
 436 0035 4B       		.byte	(.L42-.L35)/2
 437 0036 4B       		.byte	(.L42-.L35)/2
 438 0037 1A       		.byte	(.L39-.L35)/2
 439 0038 4B       		.byte	(.L42-.L35)/2
 440 0039 4B       		.byte	(.L42-.L35)/2
 441 003a 4B       		.byte	(.L42-.L35)/2
 442 003b 4B       		.byte	(.L42-.L35)/2
 443 003c 4B       		.byte	(.L42-.L35)/2
 444 003d 4B       		.byte	(.L42-.L35)/2
 445 003e 4B       		.byte	(.L42-.L35)/2
 446 003f 4B       		.byte	(.L42-.L35)/2
 447 0040 4B       		.byte	(.L42-.L35)/2
 448 0041 4B       		.byte	(.L42-.L35)/2
 449 0042 43       		.byte	(.L40-.L35)/2
 450 0043 47       		.byte	(.L41-.L35)/2
 451              		.p2align 1
 452              	.L39:
 340:u8glib/u8g_pb8h1.c ****   {
 341:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_SET_8PIXEL:
 342:u8glib/u8g_pb8h1.c **** #ifdef NEW_CODE
 343:u8glib/u8g_pb8h1.c ****       if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
 344:u8glib/u8g_pb8h1.c ****         u8g_pb8h1_Set8PixelState(pb, (u8g_dev_arg_pixel_t *)arg);
 345:u8glib/u8g_pb8h1.c **** #else
 346:u8glib/u8g_pb8h1.c ****       if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
 453              		.loc 1 346 0
 454 0044 2946     		mov	r1, r5
 455              	.LVL42:
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 15


 456 0046 2046     		mov	r0, r4
 457              	.LVL43:
 458 0048 FFF7FEFF 		bl	u8g_pb_Is8PixelVisible
 459              	.LVL44:
 460 004c 68B3     		cbz	r0, .L43
 347:u8glib/u8g_pb8h1.c ****         u8g_pb8h1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
 461              		.loc 1 347 0
 462 004e 2946     		mov	r1, r5
 463 0050 2046     		mov	r0, r4
 464 0052 FFF7FEFF 		bl	u8g_pb8h1_Set8PixelOpt2
 465              	.LVL45:
 348:u8glib/u8g_pb8h1.c **** #endif
 349:u8glib/u8g_pb8h1.c ****       break;
 350:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_SET_PIXEL:
 351:u8glib/u8g_pb8h1.c ****       u8g_pb8h1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
 352:u8glib/u8g_pb8h1.c ****       break;
 353:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_INIT:
 354:u8glib/u8g_pb8h1.c ****       break;
 355:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_STOP:
 356:u8glib/u8g_pb8h1.c ****       break;
 357:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_PAGE_FIRST:
 358:u8glib/u8g_pb8h1.c ****       u8g_pb_Clear(pb);
 359:u8glib/u8g_pb8h1.c ****       u8g_page_First(&(pb->p));
 360:u8glib/u8g_pb8h1.c ****       break;
 361:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_PAGE_NEXT:
 362:u8glib/u8g_pb8h1.c ****       if ( u8g_page_Next(&(pb->p)) == 0 )
 363:u8glib/u8g_pb8h1.c ****         return 0;
 364:u8glib/u8g_pb8h1.c ****       u8g_pb_Clear(pb);
 365:u8glib/u8g_pb8h1.c ****       break;
 366:u8glib/u8g_pb8h1.c **** #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
 367:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_IS_BBX_INTERSECTION:
 368:u8glib/u8g_pb8h1.c ****       return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
 369:u8glib/u8g_pb8h1.c **** #endif
 370:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_PAGE_BOX:
 371:u8glib/u8g_pb8h1.c ****       u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
 372:u8glib/u8g_pb8h1.c ****       break;
 373:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_WIDTH:
 374:u8glib/u8g_pb8h1.c ****       *((u8g_uint_t *)arg) = pb->width;
 375:u8glib/u8g_pb8h1.c ****       break;
 376:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 377:u8glib/u8g_pb8h1.c ****       *((u8g_uint_t *)arg) = pb->p.total_height;
 378:u8glib/u8g_pb8h1.c ****       break;
 379:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_SET_COLOR_ENTRY:
 380:u8glib/u8g_pb8h1.c ****       break;
 381:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_SET_XY_CB:
 382:u8glib/u8g_pb8h1.c ****       break;
 383:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_MODE:
 384:u8glib/u8g_pb8h1.c ****       return U8G_MODE_BW;
 385:u8glib/u8g_pb8h1.c ****   }
 386:u8glib/u8g_pb8h1.c ****   return 1;
 466              		.loc 1 386 0
 467 0056 0123     		movs	r3, #1
 468 0058 28E0     		b	.L33
 469              	.LVL46:
 470              	.L38:
 351:u8glib/u8g_pb8h1.c ****       break;
 471              		.loc 1 351 0
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 16


 472 005a 2946     		mov	r1, r5
 473              	.LVL47:
 474 005c 2046     		mov	r0, r4
 475              	.LVL48:
 476 005e FFF7FEFF 		bl	u8g_pb8h1_SetPixel
 477              	.LVL49:
 478              		.loc 1 386 0
 479 0062 0123     		movs	r3, #1
 352:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_INIT:
 480              		.loc 1 352 0
 481 0064 22E0     		b	.L33
 482              	.LVL50:
 483              	.L34:
 358:u8glib/u8g_pb8h1.c ****       u8g_page_First(&(pb->p));
 484              		.loc 1 358 0
 485 0066 2046     		mov	r0, r4
 486              	.LVL51:
 487 0068 FFF7FEFF 		bl	u8g_pb_Clear
 488              	.LVL52:
 359:u8glib/u8g_pb8h1.c ****       break;
 489              		.loc 1 359 0
 490 006c 2046     		mov	r0, r4
 491 006e FFF7FEFF 		bl	u8g_page_First
 492              	.LVL53:
 493              		.loc 1 386 0
 494 0072 0123     		movs	r3, #1
 360:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_PAGE_NEXT:
 495              		.loc 1 360 0
 496 0074 1AE0     		b	.L33
 497              	.LVL54:
 498              	.L36:
 362:u8glib/u8g_pb8h1.c ****         return 0;
 499              		.loc 1 362 0
 500 0076 2046     		mov	r0, r4
 501              	.LVL55:
 502 0078 FFF7FEFF 		bl	u8g_page_Next
 503              	.LVL56:
 504 007c 0346     		mov	r3, r0
 505 007e A8B1     		cbz	r0, .L33
 364:u8glib/u8g_pb8h1.c ****       break;
 506              		.loc 1 364 0
 507 0080 2046     		mov	r0, r4
 508 0082 FFF7FEFF 		bl	u8g_pb_Clear
 509              	.LVL57:
 510              		.loc 1 386 0
 511 0086 0123     		movs	r3, #1
 365:u8glib/u8g_pb8h1.c **** #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
 512              		.loc 1 365 0
 513 0088 10E0     		b	.L33
 514              	.LVL58:
 515              	.L37:
 371:u8glib/u8g_pb8h1.c ****       break;
 516              		.loc 1 371 0
 517 008a 2946     		mov	r1, r5
 518              	.LVL59:
 519 008c 2046     		mov	r0, r4
 520              	.LVL60:
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 17


 521 008e FFF7FEFF 		bl	u8g_pb_GetPageBox
 522              	.LVL61:
 523              		.loc 1 386 0
 524 0092 0123     		movs	r3, #1
 372:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_WIDTH:
 525              		.loc 1 372 0
 526 0094 0AE0     		b	.L33
 527              	.LVL62:
 528              	.L40:
 374:u8glib/u8g_pb8h1.c ****       break;
 529              		.loc 1 374 0
 530 0096 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 531 0098 2B70     		strb	r3, [r5]
 532              		.loc 1 386 0
 533 009a 0123     		movs	r3, #1
 375:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_GET_HEIGHT:
 534              		.loc 1 375 0
 535 009c 06E0     		b	.L33
 536              	.L41:
 377:u8glib/u8g_pb8h1.c ****       break;
 537              		.loc 1 377 0
 538 009e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 539 00a0 2B70     		strb	r3, [r5]
 540              		.loc 1 386 0
 541 00a2 0123     		movs	r3, #1
 378:u8glib/u8g_pb8h1.c ****     case U8G_DEV_MSG_SET_COLOR_ENTRY:
 542              		.loc 1 378 0
 543 00a4 02E0     		b	.L33
 544              	.L42:
 384:u8glib/u8g_pb8h1.c ****   }
 545              		.loc 1 384 0
 546 00a6 0123     		movs	r3, #1
 547 00a8 00E0     		b	.L33
 548              	.LVL63:
 549              	.L43:
 550              		.loc 1 386 0
 551 00aa 0123     		movs	r3, #1
 552              	.L33:
 387:u8glib/u8g_pb8h1.c **** }
 553              		.loc 1 387 0
 554 00ac 1846     		mov	r0, r3
 555 00ae 38BD     		pop	{r3, r4, r5, pc}
 556              		.cfi_endproc
 557              	.LFE5:
 559              		.text
 560              	.Letext0:
 561              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 562              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 563              		.file 4 "u8glib/u8g.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\cccOUk6S.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 u8g_pb8h1.c
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:22     .text.u8g_pb8h1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:27     .text.u8g_pb8h1_Init:00000000 u8g_pb8h1_Init
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:52     .text.u8g_pb8h1_set_pixel:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:57     .text.u8g_pb8h1_set_pixel:00000000 u8g_pb8h1_set_pixel
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:131    .text.u8g_pb8h1_SetPixel:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:136    .text.u8g_pb8h1_SetPixel:00000000 u8g_pb8h1_SetPixel
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:182    .text.u8g_pb8h1_Set8PixelStd:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:187    .text.u8g_pb8h1_Set8PixelStd:00000000 u8g_pb8h1_Set8PixelStd
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:222    .text.u8g_pb8h1_Set8PixelStd:00000020 $d
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:226    .text.u8g_pb8h1_Set8PixelStd:00000024 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:264    .text.u8g_pb8h1_Set8PixelOpt2:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:269    .text.u8g_pb8h1_Set8PixelOpt2:00000000 u8g_pb8h1_Set8PixelOpt2
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:296    .text.u8g_pb8h1_Set8PixelOpt2:00000014 $d
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:300    .text.u8g_pb8h1_Set8PixelOpt2:00000018 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:368    .text.u8g_dev_pb8h1_base_fn:00000000 $t
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:373    .text.u8g_dev_pb8h1_base_fn:00000000 u8g_dev_pb8h1_base_fn
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:399    .text.u8g_dev_pb8h1_base_fn:00000010 $d
C:\Users\master\AppData\Local\Temp\cccOUk6S.s:451    .text.u8g_dev_pb8h1_base_fn:00000044 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8g_pb_Clear
u8g_pb_Is8PixelVisible
u8g_page_First
u8g_page_Next
u8g_pb_GetPageBox
