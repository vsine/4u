ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"u8x8_message.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.u8x8_draw_button_line,"ax",%progbits
  22              		.align	2
  23              		.global	u8x8_draw_button_line
  24              		.thumb
  25              		.thumb_func
  27              	u8x8_draw_button_line:
  28              	.LFB0:
  29              		.file 1 "u8g2_lib/u8x8_message.c"
   1:u8g2_lib/u8x8_message.c **** /*
   2:u8g2_lib/u8x8_message.c **** 
   3:u8g2_lib/u8x8_message.c ****   u8x8_message.c
   4:u8g2_lib/u8x8_message.c ****   
   5:u8g2_lib/u8x8_message.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2_lib/u8x8_message.c **** 
   7:u8g2_lib/u8x8_message.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2_lib/u8x8_message.c ****   All rights reserved.
   9:u8g2_lib/u8x8_message.c **** 
  10:u8g2_lib/u8x8_message.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2_lib/u8x8_message.c ****   are permitted provided that the following conditions are met:
  12:u8g2_lib/u8x8_message.c **** 
  13:u8g2_lib/u8x8_message.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2_lib/u8x8_message.c ****     of conditions and the following disclaimer.
  15:u8g2_lib/u8x8_message.c ****     
  16:u8g2_lib/u8x8_message.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2_lib/u8x8_message.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2_lib/u8x8_message.c ****     materials provided with the distribution.
  19:u8g2_lib/u8x8_message.c **** 
  20:u8g2_lib/u8x8_message.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2_lib/u8x8_message.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2_lib/u8x8_message.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2_lib/u8x8_message.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2_lib/u8x8_message.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2_lib/u8x8_message.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2_lib/u8x8_message.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2_lib/u8x8_message.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2_lib/u8x8_message.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2_lib/u8x8_message.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 2


  30:u8g2_lib/u8x8_message.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2_lib/u8x8_message.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8g2_lib/u8x8_message.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2_lib/u8x8_message.c ****   
  34:u8g2_lib/u8x8_message.c **** */
  35:u8g2_lib/u8x8_message.c **** 
  36:u8g2_lib/u8x8_message.c **** #include "u8x8.h"
  37:u8g2_lib/u8x8_message.c **** 
  38:u8g2_lib/u8x8_message.c **** uint8_t u8x8_draw_button_line(u8x8_t *u8x8, uint8_t y, uint8_t w, uint8_t cursor, const char *s)
  39:u8g2_lib/u8x8_message.c **** {
  30              		.loc 1 39 0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 40
  38              		.cfi_offset 3, -40
  39              		.cfi_offset 4, -36
  40              		.cfi_offset 5, -32
  41              		.cfi_offset 6, -28
  42              		.cfi_offset 7, -24
  43              		.cfi_offset 8, -20
  44              		.cfi_offset 9, -16
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 11, -8
  47              		.cfi_offset 14, -4
  48 0004 0646     		mov	r6, r0
  49 0006 8946     		mov	r9, r1
  50 0008 1546     		mov	r5, r2
  51 000a 9A46     		mov	r10, r3
  52 000c DDF82880 		ldr	r8, [sp, #40]
  40:u8g2_lib/u8x8_message.c ****   uint8_t i;
  41:u8g2_lib/u8x8_message.c ****   uint8_t cnt;
  42:u8g2_lib/u8x8_message.c ****   uint8_t total;
  43:u8g2_lib/u8x8_message.c ****   uint8_t d;
  44:u8g2_lib/u8x8_message.c ****   uint8_t x;
  45:u8g2_lib/u8x8_message.c ****   cnt = u8x8_GetStringLineCnt(s);
  53              		.loc 1 45 0
  54 0010 4046     		mov	r0, r8
  55              	.LVL1:
  56 0012 FFF7FEFF 		bl	u8x8_GetStringLineCnt
  57              	.LVL2:
  58 0016 0746     		mov	r7, r0
  59              	.LVL3:
  46:u8g2_lib/u8x8_message.c ****   
  47:u8g2_lib/u8x8_message.c ****   /* calculate the width of the button */
  48:u8g2_lib/u8x8_message.c ****   total = 0;
  60              		.loc 1 48 0
  61 0018 4FF0000B 		mov	fp, #0
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  62              		.loc 1 49 0
  63 001c 5C46     		mov	r4, fp
  64 001e 0CE0     		b	.L2
  65              	.LVL4:
  66              	.L3:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 3


  50:u8g2_lib/u8x8_message.c ****   {
  51:u8g2_lib/u8x8_message.c ****     total += u8x8_GetUTF8Len(u8x8, u8x8_GetStringLineStart(i, s));
  67              		.loc 1 51 0 discriminator 3
  68 0020 4146     		mov	r1, r8
  69 0022 2046     		mov	r0, r4
  70 0024 FFF7FEFF 		bl	u8x8_GetStringLineStart
  71              	.LVL5:
  72 0028 0146     		mov	r1, r0
  73 002a 3046     		mov	r0, r6
  74 002c FFF7FEFF 		bl	u8x8_GetUTF8Len
  75              	.LVL6:
  76 0030 5844     		add	r0, r0, fp
  77 0032 5FFA80FB 		uxtb	fp, r0
  78              	.LVL7:
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  79              		.loc 1 49 0 discriminator 3
  80 0036 0134     		adds	r4, r4, #1
  81              	.LVL8:
  82 0038 E4B2     		uxtb	r4, r4
  83              	.LVL9:
  84              	.L2:
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  85              		.loc 1 49 0 is_stmt 0 discriminator 1
  86 003a BC42     		cmp	r4, r7
  87 003c F0D3     		bcc	.L3
  52:u8g2_lib/u8x8_message.c ****   }
  53:u8g2_lib/u8x8_message.c ****   total += (cnt-1);	/* had one space between the buttons */
  88              		.loc 1 53 0 is_stmt 1
  89 003e 0BEB0704 		add	r4, fp, r7
  90              	.LVL10:
  91 0042 E4B2     		uxtb	r4, r4
  92 0044 013C     		subs	r4, r4, #1
  93 0046 E4B2     		uxtb	r4, r4
  94              	.LVL11:
  54:u8g2_lib/u8x8_message.c ****   
  55:u8g2_lib/u8x8_message.c ****   /* calculate the left offset */
  56:u8g2_lib/u8x8_message.c ****   d = 0;
  57:u8g2_lib/u8x8_message.c ****   if ( total < w )
  95              		.loc 1 57 0
  96 0048 AC42     		cmp	r4, r5
  97 004a 03D2     		bcs	.L8
  98              	.LVL12:
  58:u8g2_lib/u8x8_message.c ****   {
  59:u8g2_lib/u8x8_message.c ****     d = w;
  60:u8g2_lib/u8x8_message.c ****     d -= total;
  99              		.loc 1 60 0
 100 004c 2C1B     		subs	r4, r5, r4
 101              	.LVL13:
  61:u8g2_lib/u8x8_message.c ****     d /= 2;
 102              		.loc 1 61 0
 103 004e C4F34604 		ubfx	r4, r4, #1, #7
 104              	.LVL14:
 105 0052 00E0     		b	.L4
 106              	.LVL15:
 107              	.L8:
  56:u8g2_lib/u8x8_message.c ****   if ( total < w )
 108              		.loc 1 56 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 4


 109 0054 0024     		movs	r4, #0
 110              	.LVL16:
 111              	.L4:
  62:u8g2_lib/u8x8_message.c ****   }
  63:u8g2_lib/u8x8_message.c ****   
  64:u8g2_lib/u8x8_message.c ****   /* draw the buttons */
  65:u8g2_lib/u8x8_message.c ****   x = d;
  66:u8g2_lib/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 112              		.loc 1 66 0
 113 0056 0025     		movs	r5, #0
 114 0058 86F82350 		strb	r5, [r6, #35]
 115              	.LVL17:
  67:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
 116              		.loc 1 67 0
 117 005c 1DE0     		b	.L5
 118              	.LVL18:
 119              	.L7:
  68:u8g2_lib/u8x8_message.c ****   {
  69:u8g2_lib/u8x8_message.c ****     if ( i == cursor )
 120              		.loc 1 69 0
 121 005e 5545     		cmp	r5, r10
 122 0060 02D1     		bne	.L6
  70:u8g2_lib/u8x8_message.c ****       u8x8_SetInverseFont(u8x8, 1);
 123              		.loc 1 70 0
 124 0062 0123     		movs	r3, #1
 125 0064 86F82330 		strb	r3, [r6, #35]
 126              	.L6:
  71:u8g2_lib/u8x8_message.c ****       
  72:u8g2_lib/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, u8x8_GetStringLineStart(i, s));
 127              		.loc 1 72 0 discriminator 2
 128 0068 4146     		mov	r1, r8
 129 006a 2846     		mov	r0, r5
 130 006c FFF7FEFF 		bl	u8x8_GetStringLineStart
 131              	.LVL19:
 132 0070 0346     		mov	r3, r0
 133 0072 4A46     		mov	r2, r9
 134 0074 2146     		mov	r1, r4
 135 0076 3046     		mov	r0, r6
 136 0078 FFF7FEFF 		bl	u8x8_DrawUTF8
 137              	.LVL20:
 138 007c 2044     		add	r0, r0, r4
 139 007e C4B2     		uxtb	r4, r0
 140              	.LVL21:
  73:u8g2_lib/u8x8_message.c ****     u8x8_SetInverseFont(u8x8, 0);
 141              		.loc 1 73 0 discriminator 2
 142 0080 0023     		movs	r3, #0
 143 0082 86F82330 		strb	r3, [r6, #35]
  74:u8g2_lib/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, " ");
 144              		.loc 1 74 0 discriminator 2
 145 0086 074B     		ldr	r3, .L10
 146 0088 4A46     		mov	r2, r9
 147 008a 2146     		mov	r1, r4
 148 008c 3046     		mov	r0, r6
 149 008e FFF7FEFF 		bl	u8x8_DrawUTF8
 150              	.LVL22:
 151 0092 2044     		add	r0, r0, r4
 152 0094 C4B2     		uxtb	r4, r0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 5


 153              	.LVL23:
  67:u8g2_lib/u8x8_message.c ****   {
 154              		.loc 1 67 0 discriminator 2
 155 0096 0135     		adds	r5, r5, #1
 156              	.LVL24:
 157 0098 EDB2     		uxtb	r5, r5
 158              	.LVL25:
 159              	.L5:
  67:u8g2_lib/u8x8_message.c ****   {
 160              		.loc 1 67 0 is_stmt 0 discriminator 1
 161 009a BD42     		cmp	r5, r7
 162 009c DFD3     		bcc	.L7
  75:u8g2_lib/u8x8_message.c ****   }
  76:u8g2_lib/u8x8_message.c ****   
  77:u8g2_lib/u8x8_message.c ****   /* return the number of buttons */
  78:u8g2_lib/u8x8_message.c ****   return cnt;
  79:u8g2_lib/u8x8_message.c **** }
 163              		.loc 1 79 0 is_stmt 1
 164 009e 3846     		mov	r0, r7
 165 00a0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 166              	.LVL26:
 167              	.L11:
 168              		.align	2
 169              	.L10:
 170 00a4 00000000 		.word	.LC0
 171              		.cfi_endproc
 172              	.LFE0:
 174              		.section	.text.u8x8_UserInterfaceMessage,"ax",%progbits
 175              		.align	2
 176              		.global	u8x8_UserInterfaceMessage
 177              		.thumb
 178              		.thumb_func
 180              	u8x8_UserInterfaceMessage:
 181              	.LFB1:
  80:u8g2_lib/u8x8_message.c **** 
  81:u8g2_lib/u8x8_message.c **** /*
  82:u8g2_lib/u8x8_message.c ****   title1:	Multiple lines,separated by '\n'
  83:u8g2_lib/u8x8_message.c ****   title2:	A single line/string which is terminated by '\0' or '\n' . "title2" accepts the return va
  84:u8g2_lib/u8x8_message.c ****   title3:	Multiple lines,separated by '\n'
  85:u8g2_lib/u8x8_message.c ****   buttons:	one more more buttons separated by '\n' and terminated with '\0'
  86:u8g2_lib/u8x8_message.c **** */
  87:u8g2_lib/u8x8_message.c **** 
  88:u8g2_lib/u8x8_message.c **** uint8_t u8x8_UserInterfaceMessage(u8x8_t *u8x8, const char *title1, const char *title2, const char 
  89:u8g2_lib/u8x8_message.c **** {
 182              		.loc 1 89 0
 183              		.cfi_startproc
 184              		@ args = 4, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              	.LVL27:
 187 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 188              	.LCFI1:
 189              		.cfi_def_cfa_offset 28
 190              		.cfi_offset 4, -28
 191              		.cfi_offset 5, -24
 192              		.cfi_offset 6, -20
 193              		.cfi_offset 7, -16
 194              		.cfi_offset 8, -12
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 6


 195              		.cfi_offset 9, -8
 196              		.cfi_offset 14, -4
 197 0004 83B0     		sub	sp, sp, #12
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 40
 200 0006 0546     		mov	r5, r0
 201 0008 0E46     		mov	r6, r1
 202 000a 9046     		mov	r8, r2
 203 000c 9946     		mov	r9, r3
 204 000e 0A9F     		ldr	r7, [sp, #40]
 205              	.LVL28:
  90:u8g2_lib/u8x8_message.c ****   uint8_t height;
  91:u8g2_lib/u8x8_message.c ****   uint8_t y;
  92:u8g2_lib/u8x8_message.c ****   uint8_t cursor = 0;
  93:u8g2_lib/u8x8_message.c ****   uint8_t button_cnt;
  94:u8g2_lib/u8x8_message.c ****   uint8_t event;
  95:u8g2_lib/u8x8_message.c **** 
  96:u8g2_lib/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 206              		.loc 1 96 0
 207 0010 0023     		movs	r3, #0
 208              	.LVL29:
 209 0012 80F82330 		strb	r3, [r0, #35]
 210              	.LVL30:
  97:u8g2_lib/u8x8_message.c ****   
  98:u8g2_lib/u8x8_message.c ****   /* calculate overall height of the message box */
  99:u8g2_lib/u8x8_message.c ****   height = 1;	/* button line */
 100:u8g2_lib/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title1);
 211              		.loc 1 100 0
 212 0016 0846     		mov	r0, r1
 213              	.LVL31:
 214 0018 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 215              	.LVL32:
 216 001c 441C     		adds	r4, r0, #1
 217 001e E4B2     		uxtb	r4, r4
 218              	.LVL33:
 101:u8g2_lib/u8x8_message.c ****   if ( title2 != NULL )
 219              		.loc 1 101 0
 220 0020 B8F1000F 		cmp	r8, #0
 221 0024 01D0     		beq	.L13
 102:u8g2_lib/u8x8_message.c ****     height ++;
 222              		.loc 1 102 0
 223 0026 0230     		adds	r0, r0, #2
 224 0028 C4B2     		uxtb	r4, r0
 225              	.LVL34:
 226              	.L13:
 103:u8g2_lib/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title3);
 227              		.loc 1 103 0
 228 002a 4846     		mov	r0, r9
 229 002c FFF7FEFF 		bl	u8x8_GetStringLineCnt
 230              	.LVL35:
 231 0030 2044     		add	r0, r0, r4
 232 0032 C0B2     		uxtb	r0, r0
 233              	.LVL36:
 104:u8g2_lib/u8x8_message.c ****   
 105:u8g2_lib/u8x8_message.c ****   /* calculate offset from top */
 106:u8g2_lib/u8x8_message.c ****   y = 0;
 107:u8g2_lib/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 7


 234              		.loc 1 107 0
 235 0034 2B68     		ldr	r3, [r5]
 236 0036 5C7C     		ldrb	r4, [r3, #17]	@ zero_extendqisi2
 237 0038 A042     		cmp	r0, r4
 238 003a 03D2     		bcs	.L25
 239              	.LVL37:
 108:u8g2_lib/u8x8_message.c ****   {
 109:u8g2_lib/u8x8_message.c ****     y = u8x8_GetRows(u8x8);
 110:u8g2_lib/u8x8_message.c ****     y -= height;
 240              		.loc 1 110 0
 241 003c 241A     		subs	r4, r4, r0
 242              	.LVL38:
 111:u8g2_lib/u8x8_message.c ****     y /= 2;
 243              		.loc 1 111 0
 244 003e C4F34604 		ubfx	r4, r4, #1, #7
 245              	.LVL39:
 246 0042 00E0     		b	.L14
 247              	.LVL40:
 248              	.L25:
 106:u8g2_lib/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
 249              		.loc 1 106 0
 250 0044 0024     		movs	r4, #0
 251              	.LVL41:
 252              	.L14:
 112:u8g2_lib/u8x8_message.c ****   }
 113:u8g2_lib/u8x8_message.c **** 
 114:u8g2_lib/u8x8_message.c ****   /* draw message box */
 115:u8g2_lib/u8x8_message.c ****   
 116:u8g2_lib/u8x8_message.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 253              		.loc 1 116 0
 254 0046 2846     		mov	r0, r5
 255              	.LVL42:
 256 0048 FFF7FEFF 		bl	u8x8_ClearDisplay
 257              	.LVL43:
 117:u8g2_lib/u8x8_message.c ****   
 118:u8g2_lib/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title1);
 258              		.loc 1 118 0
 259 004c 2B68     		ldr	r3, [r5]
 260 004e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 261 0050 0096     		str	r6, [sp]
 262 0052 2246     		mov	r2, r4
 263 0054 0021     		movs	r1, #0
 264 0056 2846     		mov	r0, r5
 265 0058 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 266              	.LVL44:
 267 005c 2044     		add	r0, r0, r4
 268 005e C6B2     		uxtb	r6, r0
 269              	.LVL45:
 119:u8g2_lib/u8x8_message.c ****   if ( title2 != NULL )
 270              		.loc 1 119 0
 271 0060 B8F1000F 		cmp	r8, #0
 272 0064 0AD0     		beq	.L15
 120:u8g2_lib/u8x8_message.c ****   {
 121:u8g2_lib/u8x8_message.c ****     u8x8_DrawUTF8Line(u8x8, 0, y, u8x8_GetCols(u8x8), title2);
 273              		.loc 1 121 0
 274 0066 2B68     		ldr	r3, [r5]
 275 0068 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 8


 276 006a CDF80080 		str	r8, [sp]
 277 006e 3246     		mov	r2, r6
 278 0070 0021     		movs	r1, #0
 279 0072 2846     		mov	r0, r5
 280 0074 FFF7FEFF 		bl	u8x8_DrawUTF8Line
 281              	.LVL46:
 122:u8g2_lib/u8x8_message.c ****     y++;
 282              		.loc 1 122 0
 283 0078 0136     		adds	r6, r6, #1
 284              	.LVL47:
 285 007a F6B2     		uxtb	r6, r6
 286              	.LVL48:
 287              	.L15:
 123:u8g2_lib/u8x8_message.c ****   }
 124:u8g2_lib/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title3);
 288              		.loc 1 124 0
 289 007c 2B68     		ldr	r3, [r5]
 290 007e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 291 0080 CDF80090 		str	r9, [sp]
 292 0084 3246     		mov	r2, r6
 293 0086 0021     		movs	r1, #0
 294 0088 2846     		mov	r0, r5
 295 008a FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 296              	.LVL49:
 297 008e 3044     		add	r0, r0, r6
 298 0090 C6B2     		uxtb	r6, r0
 299              	.LVL50:
 125:u8g2_lib/u8x8_message.c **** 
 126:u8g2_lib/u8x8_message.c ****   button_cnt = u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 300              		.loc 1 126 0
 301 0092 2B68     		ldr	r3, [r5]
 302 0094 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 303 0096 0097     		str	r7, [sp]
 304 0098 0023     		movs	r3, #0
 305 009a 3146     		mov	r1, r6
 306 009c 2846     		mov	r0, r5
 307 009e FFF7FEFF 		bl	u8x8_draw_button_line
 308              	.LVL51:
 309 00a2 8046     		mov	r8, r0
 310              	.LVL52:
  92:u8g2_lib/u8x8_message.c ****   uint8_t button_cnt;
 311              		.loc 1 92 0
 312 00a4 0024     		movs	r4, #0
 313              	.LVL53:
 314              	.L16:
 127:u8g2_lib/u8x8_message.c ****   
 128:u8g2_lib/u8x8_message.c ****   for(;;)
 129:u8g2_lib/u8x8_message.c ****   {
 130:u8g2_lib/u8x8_message.c ****     event = u8x8_GetMenuEvent(u8x8);
 315              		.loc 1 130 0
 316 00a6 2846     		mov	r0, r5
 317 00a8 FFF7FEFF 		bl	u8x8_GetMenuEvent
 318              	.LVL54:
 131:u8g2_lib/u8x8_message.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 319              		.loc 1 131 0
 320 00ac 5028     		cmp	r0, #80
 321 00ae 02D1     		bne	.L17
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 9


 132:u8g2_lib/u8x8_message.c ****       return cursor+1;
 322              		.loc 1 132 0
 323 00b0 601C     		adds	r0, r4, #1
 324              	.LVL55:
 325 00b2 C0B2     		uxtb	r0, r0
 326 00b4 25E0     		b	.L18
 327              	.LVL56:
 328              	.L17:
 133:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
 329              		.loc 1 133 0
 330 00b6 5328     		cmp	r0, #83
 331 00b8 22D0     		beq	.L26
 134:u8g2_lib/u8x8_message.c ****       break;
 135:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 332              		.loc 1 135 0
 333 00ba 5128     		cmp	r0, #81
 334 00bc 01D0     		beq	.L19
 335              		.loc 1 135 0 is_stmt 0 discriminator 1
 336 00be 5428     		cmp	r0, #84
 337 00c0 0DD1     		bne	.L20
 338              	.L19:
 136:u8g2_lib/u8x8_message.c ****     {
 137:u8g2_lib/u8x8_message.c ****       cursor++;
 339              		.loc 1 137 0 is_stmt 1
 340 00c2 0134     		adds	r4, r4, #1
 341              	.LVL57:
 342 00c4 E4B2     		uxtb	r4, r4
 343              	.LVL58:
 138:u8g2_lib/u8x8_message.c ****       if ( cursor >= button_cnt )
 344              		.loc 1 138 0
 345 00c6 A045     		cmp	r8, r4
 346 00c8 00D8     		bhi	.L21
 139:u8g2_lib/u8x8_message.c **** 	cursor = 0;
 347              		.loc 1 139 0
 348 00ca 0024     		movs	r4, #0
 349              	.LVL59:
 350              	.L21:
 140:u8g2_lib/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 351              		.loc 1 140 0
 352 00cc 2B68     		ldr	r3, [r5]
 353 00ce 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 354 00d0 0097     		str	r7, [sp]
 355 00d2 2346     		mov	r3, r4
 356 00d4 3146     		mov	r1, r6
 357 00d6 2846     		mov	r0, r5
 358              	.LVL60:
 359 00d8 FFF7FEFF 		bl	u8x8_draw_button_line
 360              	.LVL61:
 361 00dc E3E7     		b	.L16
 362              	.LVL62:
 363              	.L20:
 141:u8g2_lib/u8x8_message.c ****     }
 142:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN  )
 364              		.loc 1 142 0
 365 00de 5228     		cmp	r0, #82
 366 00e0 01D0     		beq	.L23
 367              		.loc 1 142 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 10


 368 00e2 5528     		cmp	r0, #85
 369 00e4 DFD1     		bne	.L16
 370              	.L23:
 143:u8g2_lib/u8x8_message.c ****     {
 144:u8g2_lib/u8x8_message.c ****       if ( cursor == 0 )
 371              		.loc 1 144 0 is_stmt 1
 372 00e6 04B9     		cbnz	r4, .L24
 145:u8g2_lib/u8x8_message.c **** 	cursor = button_cnt;
 373              		.loc 1 145 0
 374 00e8 4446     		mov	r4, r8
 375              	.LVL63:
 376              	.L24:
 146:u8g2_lib/u8x8_message.c ****       cursor--;
 377              		.loc 1 146 0
 378 00ea 013C     		subs	r4, r4, #1
 379              	.LVL64:
 380 00ec E4B2     		uxtb	r4, r4
 381              	.LVL65:
 147:u8g2_lib/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 382              		.loc 1 147 0
 383 00ee 2B68     		ldr	r3, [r5]
 384 00f0 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 385 00f2 0097     		str	r7, [sp]
 386 00f4 2346     		mov	r3, r4
 387 00f6 3146     		mov	r1, r6
 388 00f8 2846     		mov	r0, r5
 389              	.LVL66:
 390 00fa FFF7FEFF 		bl	u8x8_draw_button_line
 391              	.LVL67:
 392 00fe D2E7     		b	.L16
 393              	.LVL68:
 394              	.L26:
 148:u8g2_lib/u8x8_message.c ****     }    
 149:u8g2_lib/u8x8_message.c ****   }  
 150:u8g2_lib/u8x8_message.c ****   return 0;
 395              		.loc 1 150 0
 396 0100 0020     		movs	r0, #0
 397              	.LVL69:
 398              	.L18:
 151:u8g2_lib/u8x8_message.c **** }
 399              		.loc 1 151 0
 400 0102 03B0     		add	sp, sp, #12
 401              	.LCFI3:
 402              		.cfi_def_cfa_offset 28
 403              		@ sp needed
 404 0104 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 405              		.cfi_endproc
 406              	.LFE1:
 408              		.section	.rodata.str1.4,"aMS",%progbits,1
 409              		.align	2
 410              	.LC0:
 411 0000 2000     		.ascii	" \000"
 412              		.text
 413              	.Letext0:
 414              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 415              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 416              		.file 4 "u8g2_lib/u8x8.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 11


ARM GAS  C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_message.c
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:22     .text.u8x8_draw_button_line:00000000 $t
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:27     .text.u8x8_draw_button_line:00000000 u8x8_draw_button_line
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:170    .text.u8x8_draw_button_line:000000a4 $d
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:175    .text.u8x8_UserInterfaceMessage:00000000 $t
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:180    .text.u8x8_UserInterfaceMessage:00000000 u8x8_UserInterfaceMessage
C:\Users\master\AppData\Local\Temp\ccHxn8Sz.s:409    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetStringLineStart
u8x8_GetUTF8Len
u8x8_DrawUTF8
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8Line
u8x8_GetMenuEvent
